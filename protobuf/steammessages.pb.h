// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages.proto

#ifndef PROTOBUF_steammessages_2eproto__INCLUDED
#define PROTOBUF_steammessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_steammessages_2eproto();
void protobuf_AssignDesc_steammessages_2eproto();
void protobuf_ShutdownFile_steammessages_2eproto();

class CMsgProtoBufHeader;
class CMsgWebAPIKey;
class CMsgHttpRequest;
class CMsgHttpRequest_RequestHeader;
class CMsgHttpRequest_QueryParam;
class CMsgWebAPIRequest;
class CMsgHttpResponse;
class CMsgHttpResponse_ResponseHeader;
class CMsgAMFindAccounts;
class CMsgAMFindAccountsResponse;
class CMsgNotifyWatchdog;
class CMsgAMGetLicenses;
class CMsgPackageLicense;
class CMsgAMGetLicensesResponse;
class CMsgAMGetUserGameStats;
class CMsgAMGetUserGameStatsResponse;
class CMsgAMGetUserGameStatsResponse_Stats;
class CMsgAMGetUserGameStatsResponse_Achievement_Blocks;
class CMsgGCGetCommandList;
class CMsgGCGetCommandListResponse;
class CGCMsgMemCachedGet;
class CGCMsgMemCachedGetResponse;
class CGCMsgMemCachedGetResponse_ValueTag;
class CGCMsgMemCachedSet;
class CGCMsgMemCachedSet_KeyPair;
class CGCMsgMemCachedDelete;
class CGCMsgMemCachedStats;
class CGCMsgMemCachedStatsResponse;
class CGCMsgSQLStats;
class CGCMsgSQLStatsResponse;
class CMsgAMAddFreeLicense;
class CMsgAMAddFreeLicenseResponse;
class CGCMsgGetIPLocation;
class CIPLocationInfo;
class CGCMsgGetIPLocationResponse;
class CGCMsgSystemStatsSchema;
class CGCMsgGetSystemStats;
class CGCMsgGetSystemStatsResponse;
class CMsgAMSendEmail;
class CMsgAMSendEmail_ReplacementToken;
class CMsgAMSendEmail_PersonaNameReplacementToken;
class CMsgAMSendEmailResponse;
class CMsgGCGetEmailTemplate;
class CMsgGCGetEmailTemplateResponse;
class CMsgAMGrantGuestPasses2;
class CMsgAMGrantGuestPasses2Response;
class CGCSystemMsg_GetAccountDetails;
class CGCSystemMsg_GetAccountDetails_Response;
class CMsgGCGetPersonaNames;
class CMsgGCGetPersonaNames_Response;
class CMsgGCGetPersonaNames_Response_PersonaName;
class CMsgGCCheckFriendship;
class CMsgGCCheckFriendship_Response;
class CMsgGCMsgMasterSetDirectory;
class CMsgGCMsgMasterSetDirectory_SubGC;
class CMsgGCMsgMasterSetDirectory_Response;
class CMsgGCMsgWebAPIJobRequestForwardResponse;
class CGCSystemMsg_GetPurchaseTrust_Request;
class CGCSystemMsg_GetPurchaseTrust_Response;
class CMsgGCHAccountVacStatusChange;
class CMsgGCGetPartnerAccountLink;
class CMsgGCGetPartnerAccountLink_Response;
class CMsgGCRoutingInfo;
class CMsgGCMsgMasterSetWebAPIRouting;
class CMsgGCMsgMasterSetWebAPIRouting_Entry;
class CMsgGCMsgMasterSetClientMsgRouting;
class CMsgGCMsgMasterSetClientMsgRouting_Entry;
class CMsgGCMsgMasterSetWebAPIRouting_Response;
class CMsgGCMsgMasterSetClientMsgRouting_Response;
class CMsgGCMsgSetOptions;
class CMsgGCMsgSetOptions_MessageRange;
class CMsgGCHUpdateSession;
class CMsgGCHUpdateSession_ExtraField;
class CMsgNotificationOfSuspiciousActivity;
class CMsgNotificationOfSuspiciousActivity_MultipleGameInstances;
class CMsgDPPartnerMicroTxns;
class CMsgDPPartnerMicroTxns_PartnerMicroTxn;
class CMsgDPPartnerMicroTxns_PartnerInfo;
class CMsgDPPartnerMicroTxnsResponse;

enum CMsgGCRoutingInfo_RoutingMethod {
  CMsgGCRoutingInfo_RoutingMethod_RANDOM = 0,
  CMsgGCRoutingInfo_RoutingMethod_DISCARD = 1,
  CMsgGCRoutingInfo_RoutingMethod_CLIENT_STEAMID = 2,
  CMsgGCRoutingInfo_RoutingMethod_PROTOBUF_FIELD_UINT64 = 3,
  CMsgGCRoutingInfo_RoutingMethod_WEBAPI_PARAM_UINT64 = 4
};
bool CMsgGCRoutingInfo_RoutingMethod_IsValid(int value);
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MIN = CMsgGCRoutingInfo_RoutingMethod_RANDOM;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MAX = CMsgGCRoutingInfo_RoutingMethod_WEBAPI_PARAM_UINT64;
const int CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_ARRAYSIZE = CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCRoutingInfo_RoutingMethod_descriptor();
inline const ::std::string& CMsgGCRoutingInfo_RoutingMethod_Name(CMsgGCRoutingInfo_RoutingMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCRoutingInfo_RoutingMethod_descriptor(), value);
}
inline bool CMsgGCRoutingInfo_RoutingMethod_Parse(
    const ::std::string& name, CMsgGCRoutingInfo_RoutingMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCRoutingInfo_RoutingMethod>(
    CMsgGCRoutingInfo_RoutingMethod_descriptor(), name, value);
}
enum CMsgGCMsgSetOptions_Option {
  CMsgGCMsgSetOptions_Option_NOTIFY_USER_SESSIONS = 0,
  CMsgGCMsgSetOptions_Option_NOTIFY_SERVER_SESSIONS = 1,
  CMsgGCMsgSetOptions_Option_NOTIFY_ACHIEVEMENTS = 2,
  CMsgGCMsgSetOptions_Option_NOTIFY_VAC_ACTION = 3
};
bool CMsgGCMsgSetOptions_Option_IsValid(int value);
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions_Option_Option_MIN = CMsgGCMsgSetOptions_Option_NOTIFY_USER_SESSIONS;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions_Option_Option_MAX = CMsgGCMsgSetOptions_Option_NOTIFY_VAC_ACTION;
const int CMsgGCMsgSetOptions_Option_Option_ARRAYSIZE = CMsgGCMsgSetOptions_Option_Option_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_Option_descriptor();
inline const ::std::string& CMsgGCMsgSetOptions_Option_Name(CMsgGCMsgSetOptions_Option value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCMsgSetOptions_Option_descriptor(), value);
}
inline bool CMsgGCMsgSetOptions_Option_Parse(
    const ::std::string& name, CMsgGCMsgSetOptions_Option* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCMsgSetOptions_Option>(
    CMsgGCMsgSetOptions_Option_descriptor(), name, value);
}
enum CMsgDPPartnerMicroTxnsResponse_EErrorCode {
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgValid = 0,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidAppID = 1,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidPartnerInfo = 2,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgNoTransactions = 3,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgSQLFailure = 4,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgPartnerInfoDiscrepancy = 5,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgTransactionInsertFailed = 7,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgAlreadyRunning = 8,
  CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidTransactionData = 9
};
bool CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(int value);
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MIN = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgValid;
const CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MAX = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidTransactionData;
const int CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_ARRAYSIZE = CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor();
inline const ::std::string& CMsgDPPartnerMicroTxnsResponse_EErrorCode_Name(CMsgDPPartnerMicroTxnsResponse_EErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor(), value);
}
inline bool CMsgDPPartnerMicroTxnsResponse_EErrorCode_Parse(
    const ::std::string& name, CMsgDPPartnerMicroTxnsResponse_EErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDPPartnerMicroTxnsResponse_EErrorCode>(
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor(), name, value);
}
enum GCProtoBufMsgSrc {
  GCProtoBufMsgSrc_Unspecified = 0,
  GCProtoBufMsgSrc_FromSystem = 1,
  GCProtoBufMsgSrc_FromSteamID = 2,
  GCProtoBufMsgSrc_FromGC = 3,
  GCProtoBufMsgSrc_ReplySystem = 4
};
bool GCProtoBufMsgSrc_IsValid(int value);
const GCProtoBufMsgSrc GCProtoBufMsgSrc_MIN = GCProtoBufMsgSrc_Unspecified;
const GCProtoBufMsgSrc GCProtoBufMsgSrc_MAX = GCProtoBufMsgSrc_ReplySystem;
const int GCProtoBufMsgSrc_ARRAYSIZE = GCProtoBufMsgSrc_MAX + 1;

const ::google::protobuf::EnumDescriptor* GCProtoBufMsgSrc_descriptor();
inline const ::std::string& GCProtoBufMsgSrc_Name(GCProtoBufMsgSrc value) {
  return ::google::protobuf::internal::NameOfEnum(
    GCProtoBufMsgSrc_descriptor(), value);
}
inline bool GCProtoBufMsgSrc_Parse(
    const ::std::string& name, GCProtoBufMsgSrc* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GCProtoBufMsgSrc>(
    GCProtoBufMsgSrc_descriptor(), name, value);
}
// ===================================================================

class CMsgProtoBufHeader : public ::google::protobuf::Message {
 public:
  CMsgProtoBufHeader();
  virtual ~CMsgProtoBufHeader();

  CMsgProtoBufHeader(const CMsgProtoBufHeader& from);

  inline CMsgProtoBufHeader& operator=(const CMsgProtoBufHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgProtoBufHeader& default_instance();

  void Swap(CMsgProtoBufHeader* other);

  // implements Message ----------------------------------------------

  CMsgProtoBufHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgProtoBufHeader& from);
  void MergeFrom(const CMsgProtoBufHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 client_steam_id = 1;
  inline bool has_client_steam_id() const;
  inline void clear_client_steam_id();
  static const int kClientSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 client_steam_id() const;
  inline void set_client_steam_id(::google::protobuf::uint64 value);

  // optional int32 client_session_id = 2;
  inline bool has_client_session_id() const;
  inline void clear_client_session_id();
  static const int kClientSessionIdFieldNumber = 2;
  inline ::google::protobuf::int32 client_session_id() const;
  inline void set_client_session_id(::google::protobuf::int32 value);

  // optional uint32 source_app_id = 3;
  inline bool has_source_app_id() const;
  inline void clear_source_app_id();
  static const int kSourceAppIdFieldNumber = 3;
  inline ::google::protobuf::uint32 source_app_id() const;
  inline void set_source_app_id(::google::protobuf::uint32 value);

  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  inline bool has_job_id_source() const;
  inline void clear_job_id_source();
  static const int kJobIdSourceFieldNumber = 10;
  inline ::google::protobuf::uint64 job_id_source() const;
  inline void set_job_id_source(::google::protobuf::uint64 value);

  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  inline bool has_job_id_target() const;
  inline void clear_job_id_target();
  static const int kJobIdTargetFieldNumber = 11;
  inline ::google::protobuf::uint64 job_id_target() const;
  inline void set_job_id_target(::google::protobuf::uint64 value);

  // optional string target_job_name = 12;
  inline bool has_target_job_name() const;
  inline void clear_target_job_name();
  static const int kTargetJobNameFieldNumber = 12;
  inline const ::std::string& target_job_name() const;
  inline void set_target_job_name(const ::std::string& value);
  inline void set_target_job_name(const char* value);
  inline void set_target_job_name(const char* value, size_t size);
  inline ::std::string* mutable_target_job_name();
  inline ::std::string* release_target_job_name();
  inline void set_allocated_target_job_name(::std::string* target_job_name);

  // optional int32 eresult = 13 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 13;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional string error_message = 14;
  inline bool has_error_message() const;
  inline void clear_error_message();
  static const int kErrorMessageFieldNumber = 14;
  inline const ::std::string& error_message() const;
  inline void set_error_message(const ::std::string& value);
  inline void set_error_message(const char* value);
  inline void set_error_message(const char* value, size_t size);
  inline ::std::string* mutable_error_message();
  inline ::std::string* release_error_message();
  inline void set_allocated_error_message(::std::string* error_message);

  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  inline bool has_gc_msg_src() const;
  inline void clear_gc_msg_src();
  static const int kGcMsgSrcFieldNumber = 200;
  inline ::GCProtoBufMsgSrc gc_msg_src() const;
  inline void set_gc_msg_src(::GCProtoBufMsgSrc value);

  // optional uint32 gc_dir_index_source = 201;
  inline bool has_gc_dir_index_source() const;
  inline void clear_gc_dir_index_source();
  static const int kGcDirIndexSourceFieldNumber = 201;
  inline ::google::protobuf::uint32 gc_dir_index_source() const;
  inline void set_gc_dir_index_source(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgProtoBufHeader)
 private:
  inline void set_has_client_steam_id();
  inline void clear_has_client_steam_id();
  inline void set_has_client_session_id();
  inline void clear_has_client_session_id();
  inline void set_has_source_app_id();
  inline void clear_has_source_app_id();
  inline void set_has_job_id_source();
  inline void clear_has_job_id_source();
  inline void set_has_job_id_target();
  inline void clear_has_job_id_target();
  inline void set_has_target_job_name();
  inline void clear_has_target_job_name();
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_error_message();
  inline void clear_has_error_message();
  inline void set_has_gc_msg_src();
  inline void clear_has_gc_msg_src();
  inline void set_has_gc_dir_index_source();
  inline void clear_has_gc_dir_index_source();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 client_steam_id_;
  ::google::protobuf::int32 client_session_id_;
  ::google::protobuf::uint32 source_app_id_;
  ::google::protobuf::uint64 job_id_source_;
  ::google::protobuf::uint64 job_id_target_;
  ::std::string* target_job_name_;
  ::std::string* error_message_;
  ::google::protobuf::int32 eresult_;
  int gc_msg_src_;
  ::google::protobuf::uint32 gc_dir_index_source_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgProtoBufHeader* default_instance_;
};
// -------------------------------------------------------------------

class CMsgWebAPIKey : public ::google::protobuf::Message {
 public:
  CMsgWebAPIKey();
  virtual ~CMsgWebAPIKey();

  CMsgWebAPIKey(const CMsgWebAPIKey& from);

  inline CMsgWebAPIKey& operator=(const CMsgWebAPIKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgWebAPIKey& default_instance();

  void Swap(CMsgWebAPIKey* other);

  // implements Message ----------------------------------------------

  CMsgWebAPIKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgWebAPIKey& from);
  void MergeFrom(const CMsgWebAPIKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 status = 1 [default = 255];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2 [default = 0];
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 publisher_group_id = 3 [default = 0];
  inline bool has_publisher_group_id() const;
  inline void clear_publisher_group_id();
  static const int kPublisherGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint32 publisher_group_id() const;
  inline void set_publisher_group_id(::google::protobuf::uint32 value);

  // optional uint32 key_id = 4;
  inline bool has_key_id() const;
  inline void clear_key_id();
  static const int kKeyIdFieldNumber = 4;
  inline ::google::protobuf::uint32 key_id() const;
  inline void set_key_id(::google::protobuf::uint32 value);

  // optional string domain = 5;
  inline bool has_domain() const;
  inline void clear_domain();
  static const int kDomainFieldNumber = 5;
  inline const ::std::string& domain() const;
  inline void set_domain(const ::std::string& value);
  inline void set_domain(const char* value);
  inline void set_domain(const char* value, size_t size);
  inline ::std::string* mutable_domain();
  inline ::std::string* release_domain();
  inline void set_allocated_domain(::std::string* domain);

  // @@protoc_insertion_point(class_scope:CMsgWebAPIKey)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_publisher_group_id();
  inline void clear_has_publisher_group_id();
  inline void set_has_key_id();
  inline void clear_has_key_id();
  inline void set_has_domain();
  inline void clear_has_domain();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 publisher_group_id_;
  ::google::protobuf::uint32 key_id_;
  ::std::string* domain_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgWebAPIKey* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHttpRequest_RequestHeader : public ::google::protobuf::Message {
 public:
  CMsgHttpRequest_RequestHeader();
  virtual ~CMsgHttpRequest_RequestHeader();

  CMsgHttpRequest_RequestHeader(const CMsgHttpRequest_RequestHeader& from);

  inline CMsgHttpRequest_RequestHeader& operator=(const CMsgHttpRequest_RequestHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHttpRequest_RequestHeader& default_instance();

  void Swap(CMsgHttpRequest_RequestHeader* other);

  // implements Message ----------------------------------------------

  CMsgHttpRequest_RequestHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHttpRequest_RequestHeader& from);
  void MergeFrom(const CMsgHttpRequest_RequestHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CMsgHttpRequest.RequestHeader)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHttpRequest_RequestHeader* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHttpRequest_QueryParam : public ::google::protobuf::Message {
 public:
  CMsgHttpRequest_QueryParam();
  virtual ~CMsgHttpRequest_QueryParam();

  CMsgHttpRequest_QueryParam(const CMsgHttpRequest_QueryParam& from);

  inline CMsgHttpRequest_QueryParam& operator=(const CMsgHttpRequest_QueryParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHttpRequest_QueryParam& default_instance();

  void Swap(CMsgHttpRequest_QueryParam* other);

  // implements Message ----------------------------------------------

  CMsgHttpRequest_QueryParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHttpRequest_QueryParam& from);
  void MergeFrom(const CMsgHttpRequest_QueryParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CMsgHttpRequest.QueryParam)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHttpRequest_QueryParam* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHttpRequest : public ::google::protobuf::Message {
 public:
  CMsgHttpRequest();
  virtual ~CMsgHttpRequest();

  CMsgHttpRequest(const CMsgHttpRequest& from);

  inline CMsgHttpRequest& operator=(const CMsgHttpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHttpRequest& default_instance();

  void Swap(CMsgHttpRequest* other);

  // implements Message ----------------------------------------------

  CMsgHttpRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHttpRequest& from);
  void MergeFrom(const CMsgHttpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgHttpRequest_RequestHeader RequestHeader;
  typedef CMsgHttpRequest_QueryParam QueryParam;

  // accessors -------------------------------------------------------

  // optional uint32 request_method = 1;
  inline bool has_request_method() const;
  inline void clear_request_method();
  static const int kRequestMethodFieldNumber = 1;
  inline ::google::protobuf::uint32 request_method() const;
  inline void set_request_method(::google::protobuf::uint32 value);

  // optional string hostname = 2;
  inline bool has_hostname() const;
  inline void clear_hostname();
  static const int kHostnameFieldNumber = 2;
  inline const ::std::string& hostname() const;
  inline void set_hostname(const ::std::string& value);
  inline void set_hostname(const char* value);
  inline void set_hostname(const char* value, size_t size);
  inline ::std::string* mutable_hostname();
  inline ::std::string* release_hostname();
  inline void set_allocated_hostname(::std::string* hostname);

  // optional string url = 3;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 3;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  inline int headers_size() const;
  inline void clear_headers();
  static const int kHeadersFieldNumber = 4;
  inline const ::CMsgHttpRequest_RequestHeader& headers(int index) const;
  inline ::CMsgHttpRequest_RequestHeader* mutable_headers(int index);
  inline ::CMsgHttpRequest_RequestHeader* add_headers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_RequestHeader >&
      headers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_RequestHeader >*
      mutable_headers();

  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  inline int get_params_size() const;
  inline void clear_get_params();
  static const int kGetParamsFieldNumber = 5;
  inline const ::CMsgHttpRequest_QueryParam& get_params(int index) const;
  inline ::CMsgHttpRequest_QueryParam* mutable_get_params(int index);
  inline ::CMsgHttpRequest_QueryParam* add_get_params();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >&
      get_params() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >*
      mutable_get_params();

  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  inline int post_params_size() const;
  inline void clear_post_params();
  static const int kPostParamsFieldNumber = 6;
  inline const ::CMsgHttpRequest_QueryParam& post_params(int index) const;
  inline ::CMsgHttpRequest_QueryParam* mutable_post_params(int index);
  inline ::CMsgHttpRequest_QueryParam* add_post_params();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >&
      post_params() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >*
      mutable_post_params();

  // optional bytes body = 7;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 7;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const void* value, size_t size);
  inline ::std::string* mutable_body();
  inline ::std::string* release_body();
  inline void set_allocated_body(::std::string* body);

  // optional uint32 absolute_timeout = 8;
  inline bool has_absolute_timeout() const;
  inline void clear_absolute_timeout();
  static const int kAbsoluteTimeoutFieldNumber = 8;
  inline ::google::protobuf::uint32 absolute_timeout() const;
  inline void set_absolute_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgHttpRequest)
 private:
  inline void set_has_request_method();
  inline void clear_has_request_method();
  inline void set_has_hostname();
  inline void clear_has_hostname();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_absolute_timeout();
  inline void clear_has_absolute_timeout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* hostname_;
  ::std::string* url_;
  ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_RequestHeader > headers_;
  ::google::protobuf::uint32 request_method_;
  ::google::protobuf::uint32 absolute_timeout_;
  ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam > get_params_;
  ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam > post_params_;
  ::std::string* body_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHttpRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgWebAPIRequest : public ::google::protobuf::Message {
 public:
  CMsgWebAPIRequest();
  virtual ~CMsgWebAPIRequest();

  CMsgWebAPIRequest(const CMsgWebAPIRequest& from);

  inline CMsgWebAPIRequest& operator=(const CMsgWebAPIRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgWebAPIRequest& default_instance();

  void Swap(CMsgWebAPIRequest* other);

  // implements Message ----------------------------------------------

  CMsgWebAPIRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgWebAPIRequest& from);
  void MergeFrom(const CMsgWebAPIRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UNUSED_job_name = 1;
  inline bool has_unused_job_name() const;
  inline void clear_unused_job_name();
  static const int kUNUSEDJobNameFieldNumber = 1;
  inline const ::std::string& unused_job_name() const;
  inline void set_unused_job_name(const ::std::string& value);
  inline void set_unused_job_name(const char* value);
  inline void set_unused_job_name(const char* value, size_t size);
  inline ::std::string* mutable_unused_job_name();
  inline ::std::string* release_unused_job_name();
  inline void set_allocated_unused_job_name(::std::string* unused_job_name);

  // optional string interface_name = 2;
  inline bool has_interface_name() const;
  inline void clear_interface_name();
  static const int kInterfaceNameFieldNumber = 2;
  inline const ::std::string& interface_name() const;
  inline void set_interface_name(const ::std::string& value);
  inline void set_interface_name(const char* value);
  inline void set_interface_name(const char* value, size_t size);
  inline ::std::string* mutable_interface_name();
  inline ::std::string* release_interface_name();
  inline void set_allocated_interface_name(::std::string* interface_name);

  // optional string method_name = 3;
  inline bool has_method_name() const;
  inline void clear_method_name();
  static const int kMethodNameFieldNumber = 3;
  inline const ::std::string& method_name() const;
  inline void set_method_name(const ::std::string& value);
  inline void set_method_name(const char* value);
  inline void set_method_name(const char* value, size_t size);
  inline ::std::string* mutable_method_name();
  inline ::std::string* release_method_name();
  inline void set_allocated_method_name(::std::string* method_name);

  // optional uint32 version = 4;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional .CMsgWebAPIKey api_key = 5;
  inline bool has_api_key() const;
  inline void clear_api_key();
  static const int kApiKeyFieldNumber = 5;
  inline const ::CMsgWebAPIKey& api_key() const;
  inline ::CMsgWebAPIKey* mutable_api_key();
  inline ::CMsgWebAPIKey* release_api_key();
  inline void set_allocated_api_key(::CMsgWebAPIKey* api_key);

  // optional .CMsgHttpRequest request = 6;
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 6;
  inline const ::CMsgHttpRequest& request() const;
  inline ::CMsgHttpRequest* mutable_request();
  inline ::CMsgHttpRequest* release_request();
  inline void set_allocated_request(::CMsgHttpRequest* request);

  // optional uint32 routing_app_id = 7;
  inline bool has_routing_app_id() const;
  inline void clear_routing_app_id();
  static const int kRoutingAppIdFieldNumber = 7;
  inline ::google::protobuf::uint32 routing_app_id() const;
  inline void set_routing_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgWebAPIRequest)
 private:
  inline void set_has_unused_job_name();
  inline void clear_has_unused_job_name();
  inline void set_has_interface_name();
  inline void clear_has_interface_name();
  inline void set_has_method_name();
  inline void clear_has_method_name();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_api_key();
  inline void clear_has_api_key();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_routing_app_id();
  inline void clear_has_routing_app_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* unused_job_name_;
  ::std::string* interface_name_;
  ::std::string* method_name_;
  ::CMsgWebAPIKey* api_key_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 routing_app_id_;
  ::CMsgHttpRequest* request_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgWebAPIRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHttpResponse_ResponseHeader : public ::google::protobuf::Message {
 public:
  CMsgHttpResponse_ResponseHeader();
  virtual ~CMsgHttpResponse_ResponseHeader();

  CMsgHttpResponse_ResponseHeader(const CMsgHttpResponse_ResponseHeader& from);

  inline CMsgHttpResponse_ResponseHeader& operator=(const CMsgHttpResponse_ResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHttpResponse_ResponseHeader& default_instance();

  void Swap(CMsgHttpResponse_ResponseHeader* other);

  // implements Message ----------------------------------------------

  CMsgHttpResponse_ResponseHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHttpResponse_ResponseHeader& from);
  void MergeFrom(const CMsgHttpResponse_ResponseHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CMsgHttpResponse.ResponseHeader)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHttpResponse_ResponseHeader* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHttpResponse : public ::google::protobuf::Message {
 public:
  CMsgHttpResponse();
  virtual ~CMsgHttpResponse();

  CMsgHttpResponse(const CMsgHttpResponse& from);

  inline CMsgHttpResponse& operator=(const CMsgHttpResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHttpResponse& default_instance();

  void Swap(CMsgHttpResponse* other);

  // implements Message ----------------------------------------------

  CMsgHttpResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHttpResponse& from);
  void MergeFrom(const CMsgHttpResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgHttpResponse_ResponseHeader ResponseHeader;

  // accessors -------------------------------------------------------

  // optional uint32 status_code = 1;
  inline bool has_status_code() const;
  inline void clear_status_code();
  static const int kStatusCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 status_code() const;
  inline void set_status_code(::google::protobuf::uint32 value);

  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  inline int headers_size() const;
  inline void clear_headers();
  static const int kHeadersFieldNumber = 2;
  inline const ::CMsgHttpResponse_ResponseHeader& headers(int index) const;
  inline ::CMsgHttpResponse_ResponseHeader* mutable_headers(int index);
  inline ::CMsgHttpResponse_ResponseHeader* add_headers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgHttpResponse_ResponseHeader >&
      headers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgHttpResponse_ResponseHeader >*
      mutable_headers();

  // optional bytes body = 3;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 3;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const void* value, size_t size);
  inline ::std::string* mutable_body();
  inline ::std::string* release_body();
  inline void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:CMsgHttpResponse)
 private:
  inline void set_has_status_code();
  inline void clear_has_status_code();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgHttpResponse_ResponseHeader > headers_;
  ::std::string* body_;
  ::google::protobuf::uint32 status_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHttpResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMFindAccounts : public ::google::protobuf::Message {
 public:
  CMsgAMFindAccounts();
  virtual ~CMsgAMFindAccounts();

  CMsgAMFindAccounts(const CMsgAMFindAccounts& from);

  inline CMsgAMFindAccounts& operator=(const CMsgAMFindAccounts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMFindAccounts& default_instance();

  void Swap(CMsgAMFindAccounts* other);

  // implements Message ----------------------------------------------

  CMsgAMFindAccounts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMFindAccounts& from);
  void MergeFrom(const CMsgAMFindAccounts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 search_type = 1;
  inline bool has_search_type() const;
  inline void clear_search_type();
  static const int kSearchTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 search_type() const;
  inline void set_search_type(::google::protobuf::uint32 value);

  // optional string search_string = 2;
  inline bool has_search_string() const;
  inline void clear_search_string();
  static const int kSearchStringFieldNumber = 2;
  inline const ::std::string& search_string() const;
  inline void set_search_string(const ::std::string& value);
  inline void set_search_string(const char* value);
  inline void set_search_string(const char* value, size_t size);
  inline ::std::string* mutable_search_string();
  inline ::std::string* release_search_string();
  inline void set_allocated_search_string(::std::string* search_string);

  // @@protoc_insertion_point(class_scope:CMsgAMFindAccounts)
 private:
  inline void set_has_search_type();
  inline void clear_has_search_type();
  inline void set_has_search_string();
  inline void clear_has_search_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* search_string_;
  ::google::protobuf::uint32 search_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMFindAccounts* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMFindAccountsResponse : public ::google::protobuf::Message {
 public:
  CMsgAMFindAccountsResponse();
  virtual ~CMsgAMFindAccountsResponse();

  CMsgAMFindAccountsResponse(const CMsgAMFindAccountsResponse& from);

  inline CMsgAMFindAccountsResponse& operator=(const CMsgAMFindAccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMFindAccountsResponse& default_instance();

  void Swap(CMsgAMFindAccountsResponse* other);

  // implements Message ----------------------------------------------

  CMsgAMFindAccountsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMFindAccountsResponse& from);
  void MergeFrom(const CMsgAMFindAccountsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steam_id = 1;
  inline int steam_id_size() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id(int index) const;
  inline void set_steam_id(int index, ::google::protobuf::uint64 value);
  inline void add_steam_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steam_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steam_id();

  // @@protoc_insertion_point(class_scope:CMsgAMFindAccountsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steam_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMFindAccountsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgNotifyWatchdog : public ::google::protobuf::Message {
 public:
  CMsgNotifyWatchdog();
  virtual ~CMsgNotifyWatchdog();

  CMsgNotifyWatchdog(const CMsgNotifyWatchdog& from);

  inline CMsgNotifyWatchdog& operator=(const CMsgNotifyWatchdog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotifyWatchdog& default_instance();

  void Swap(CMsgNotifyWatchdog* other);

  // implements Message ----------------------------------------------

  CMsgNotifyWatchdog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgNotifyWatchdog& from);
  void MergeFrom(const CMsgNotifyWatchdog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 source = 1;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 1;
  inline ::google::protobuf::uint32 source() const;
  inline void set_source(::google::protobuf::uint32 value);

  // optional uint32 alert_type = 2;
  inline bool has_alert_type() const;
  inline void clear_alert_type();
  static const int kAlertTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 alert_type() const;
  inline void set_alert_type(::google::protobuf::uint32 value);

  // optional uint32 alert_destination = 3;
  inline bool has_alert_destination() const;
  inline void clear_alert_destination();
  static const int kAlertDestinationFieldNumber = 3;
  inline ::google::protobuf::uint32 alert_destination() const;
  inline void set_alert_destination(::google::protobuf::uint32 value);

  // optional bool critical = 4;
  inline bool has_critical() const;
  inline void clear_critical();
  static const int kCriticalFieldNumber = 4;
  inline bool critical() const;
  inline void set_critical(bool value);

  // optional uint32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 appid = 6;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 6;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional string text = 7;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 7;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CMsgNotifyWatchdog)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_alert_type();
  inline void clear_has_alert_type();
  inline void set_has_alert_destination();
  inline void clear_has_alert_destination();
  inline void set_has_critical();
  inline void clear_has_critical();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 alert_type_;
  ::google::protobuf::uint32 alert_destination_;
  bool critical_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 appid_;
  ::std::string* text_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgNotifyWatchdog* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMGetLicenses : public ::google::protobuf::Message {
 public:
  CMsgAMGetLicenses();
  virtual ~CMsgAMGetLicenses();

  CMsgAMGetLicenses(const CMsgAMGetLicenses& from);

  inline CMsgAMGetLicenses& operator=(const CMsgAMGetLicenses& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMGetLicenses& default_instance();

  void Swap(CMsgAMGetLicenses* other);

  // implements Message ----------------------------------------------

  CMsgAMGetLicenses* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMGetLicenses& from);
  void MergeFrom(const CMsgAMGetLicenses& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgAMGetLicenses)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMGetLicenses* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPackageLicense : public ::google::protobuf::Message {
 public:
  CMsgPackageLicense();
  virtual ~CMsgPackageLicense();

  CMsgPackageLicense(const CMsgPackageLicense& from);

  inline CMsgPackageLicense& operator=(const CMsgPackageLicense& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPackageLicense& default_instance();

  void Swap(CMsgPackageLicense* other);

  // implements Message ----------------------------------------------

  CMsgPackageLicense* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPackageLicense& from);
  void MergeFrom(const CMsgPackageLicense& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 package_id = 1;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 package_id() const;
  inline void set_package_id(::google::protobuf::uint32 value);

  // optional uint32 time_created = 2;
  inline bool has_time_created() const;
  inline void clear_time_created();
  static const int kTimeCreatedFieldNumber = 2;
  inline ::google::protobuf::uint32 time_created() const;
  inline void set_time_created(::google::protobuf::uint32 value);

  // optional uint32 owner_id = 3;
  inline bool has_owner_id() const;
  inline void clear_owner_id();
  static const int kOwnerIdFieldNumber = 3;
  inline ::google::protobuf::uint32 owner_id() const;
  inline void set_owner_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgPackageLicense)
 private:
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_time_created();
  inline void clear_has_time_created();
  inline void set_has_owner_id();
  inline void clear_has_owner_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 package_id_;
  ::google::protobuf::uint32 time_created_;
  ::google::protobuf::uint32 owner_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgPackageLicense* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMGetLicensesResponse : public ::google::protobuf::Message {
 public:
  CMsgAMGetLicensesResponse();
  virtual ~CMsgAMGetLicensesResponse();

  CMsgAMGetLicensesResponse(const CMsgAMGetLicensesResponse& from);

  inline CMsgAMGetLicensesResponse& operator=(const CMsgAMGetLicensesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMGetLicensesResponse& default_instance();

  void Swap(CMsgAMGetLicensesResponse* other);

  // implements Message ----------------------------------------------

  CMsgAMGetLicensesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMGetLicensesResponse& from);
  void MergeFrom(const CMsgAMGetLicensesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgPackageLicense license = 1;
  inline int license_size() const;
  inline void clear_license();
  static const int kLicenseFieldNumber = 1;
  inline const ::CMsgPackageLicense& license(int index) const;
  inline ::CMsgPackageLicense* mutable_license(int index);
  inline ::CMsgPackageLicense* add_license();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgPackageLicense >&
      license() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgPackageLicense >*
      mutable_license();

  // optional uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgAMGetLicensesResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgPackageLicense > license_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMGetLicensesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMGetUserGameStats : public ::google::protobuf::Message {
 public:
  CMsgAMGetUserGameStats();
  virtual ~CMsgAMGetUserGameStats();

  CMsgAMGetUserGameStats(const CMsgAMGetUserGameStats& from);

  inline CMsgAMGetUserGameStats& operator=(const CMsgAMGetUserGameStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMGetUserGameStats& default_instance();

  void Swap(CMsgAMGetUserGameStats* other);

  // implements Message ----------------------------------------------

  CMsgAMGetUserGameStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMGetUserGameStats& from);
  void MergeFrom(const CMsgAMGetUserGameStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // repeated uint32 stats = 3;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 3;
  inline ::google::protobuf::uint32 stats(int index) const;
  inline void set_stats(int index, ::google::protobuf::uint32 value);
  inline void add_stats(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      stats() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_stats();

  // @@protoc_insertion_point(class_scope:CMsgAMGetUserGameStats)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 game_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMGetUserGameStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMGetUserGameStatsResponse_Stats : public ::google::protobuf::Message {
 public:
  CMsgAMGetUserGameStatsResponse_Stats();
  virtual ~CMsgAMGetUserGameStatsResponse_Stats();

  CMsgAMGetUserGameStatsResponse_Stats(const CMsgAMGetUserGameStatsResponse_Stats& from);

  inline CMsgAMGetUserGameStatsResponse_Stats& operator=(const CMsgAMGetUserGameStatsResponse_Stats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMGetUserGameStatsResponse_Stats& default_instance();

  void Swap(CMsgAMGetUserGameStatsResponse_Stats* other);

  // implements Message ----------------------------------------------

  CMsgAMGetUserGameStatsResponse_Stats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMGetUserGameStatsResponse_Stats& from);
  void MergeFrom(const CMsgAMGetUserGameStatsResponse_Stats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stat_id = 1;
  inline bool has_stat_id() const;
  inline void clear_stat_id();
  static const int kStatIdFieldNumber = 1;
  inline ::google::protobuf::uint32 stat_id() const;
  inline void set_stat_id(::google::protobuf::uint32 value);

  // optional uint32 stat_value = 2;
  inline bool has_stat_value() const;
  inline void clear_stat_value();
  static const int kStatValueFieldNumber = 2;
  inline ::google::protobuf::uint32 stat_value() const;
  inline void set_stat_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgAMGetUserGameStatsResponse.Stats)
 private:
  inline void set_has_stat_id();
  inline void clear_has_stat_id();
  inline void set_has_stat_value();
  inline void clear_has_stat_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 stat_id_;
  ::google::protobuf::uint32 stat_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMGetUserGameStatsResponse_Stats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMGetUserGameStatsResponse_Achievement_Blocks : public ::google::protobuf::Message {
 public:
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks();
  virtual ~CMsgAMGetUserGameStatsResponse_Achievement_Blocks();

  CMsgAMGetUserGameStatsResponse_Achievement_Blocks(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from);

  inline CMsgAMGetUserGameStatsResponse_Achievement_Blocks& operator=(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& default_instance();

  void Swap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks* other);

  // implements Message ----------------------------------------------

  CMsgAMGetUserGameStatsResponse_Achievement_Blocks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from);
  void MergeFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 achievement_id = 1;
  inline bool has_achievement_id() const;
  inline void clear_achievement_id();
  static const int kAchievementIdFieldNumber = 1;
  inline ::google::protobuf::uint32 achievement_id() const;
  inline void set_achievement_id(::google::protobuf::uint32 value);

  // optional uint32 achievement_bit_id = 2;
  inline bool has_achievement_bit_id() const;
  inline void clear_achievement_bit_id();
  static const int kAchievementBitIdFieldNumber = 2;
  inline ::google::protobuf::uint32 achievement_bit_id() const;
  inline void set_achievement_bit_id(::google::protobuf::uint32 value);

  // optional fixed32 unlock_time = 3;
  inline bool has_unlock_time() const;
  inline void clear_unlock_time();
  static const int kUnlockTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 unlock_time() const;
  inline void set_unlock_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
 private:
  inline void set_has_achievement_id();
  inline void clear_has_achievement_id();
  inline void set_has_achievement_bit_id();
  inline void clear_has_achievement_bit_id();
  inline void set_has_unlock_time();
  inline void clear_has_unlock_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 achievement_id_;
  ::google::protobuf::uint32 achievement_bit_id_;
  ::google::protobuf::uint32 unlock_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMGetUserGameStatsResponse_Achievement_Blocks* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMGetUserGameStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgAMGetUserGameStatsResponse();
  virtual ~CMsgAMGetUserGameStatsResponse();

  CMsgAMGetUserGameStatsResponse(const CMsgAMGetUserGameStatsResponse& from);

  inline CMsgAMGetUserGameStatsResponse& operator=(const CMsgAMGetUserGameStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMGetUserGameStatsResponse& default_instance();

  void Swap(CMsgAMGetUserGameStatsResponse* other);

  // implements Message ----------------------------------------------

  CMsgAMGetUserGameStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMGetUserGameStatsResponse& from);
  void MergeFrom(const CMsgAMGetUserGameStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgAMGetUserGameStatsResponse_Stats Stats;
  typedef CMsgAMGetUserGameStatsResponse_Achievement_Blocks Achievement_Blocks;

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 game_id = 2;
  inline bool has_game_id() const;
  inline void clear_game_id();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::uint64 game_id() const;
  inline void set_game_id(::google::protobuf::uint64 value);

  // optional int32 eresult = 3 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 3;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 4;
  inline const ::CMsgAMGetUserGameStatsResponse_Stats& stats(int index) const;
  inline ::CMsgAMGetUserGameStatsResponse_Stats* mutable_stats(int index);
  inline ::CMsgAMGetUserGameStatsResponse_Stats* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Stats >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Stats >*
      mutable_stats();

  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  inline int achievement_blocks_size() const;
  inline void clear_achievement_blocks();
  static const int kAchievementBlocksFieldNumber = 5;
  inline const ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks& achievement_blocks(int index) const;
  inline ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* mutable_achievement_blocks(int index);
  inline ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* add_achievement_blocks();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >&
      achievement_blocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >*
      mutable_achievement_blocks();

  // @@protoc_insertion_point(class_scope:CMsgAMGetUserGameStatsResponse)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_game_id();
  inline void clear_has_game_id();
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 game_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Stats > stats_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks > achievement_blocks_;
  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMGetUserGameStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetCommandList : public ::google::protobuf::Message {
 public:
  CMsgGCGetCommandList();
  virtual ~CMsgGCGetCommandList();

  CMsgGCGetCommandList(const CMsgGCGetCommandList& from);

  inline CMsgGCGetCommandList& operator=(const CMsgGCGetCommandList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetCommandList& default_instance();

  void Swap(CMsgGCGetCommandList* other);

  // implements Message ----------------------------------------------

  CMsgGCGetCommandList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetCommandList& from);
  void MergeFrom(const CMsgGCGetCommandList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional string command_prefix = 2;
  inline bool has_command_prefix() const;
  inline void clear_command_prefix();
  static const int kCommandPrefixFieldNumber = 2;
  inline const ::std::string& command_prefix() const;
  inline void set_command_prefix(const ::std::string& value);
  inline void set_command_prefix(const char* value);
  inline void set_command_prefix(const char* value, size_t size);
  inline ::std::string* mutable_command_prefix();
  inline ::std::string* release_command_prefix();
  inline void set_allocated_command_prefix(::std::string* command_prefix);

  // @@protoc_insertion_point(class_scope:CMsgGCGetCommandList)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_command_prefix();
  inline void clear_has_command_prefix();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* command_prefix_;
  ::google::protobuf::uint32 app_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetCommandList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetCommandListResponse : public ::google::protobuf::Message {
 public:
  CMsgGCGetCommandListResponse();
  virtual ~CMsgGCGetCommandListResponse();

  CMsgGCGetCommandListResponse(const CMsgGCGetCommandListResponse& from);

  inline CMsgGCGetCommandListResponse& operator=(const CMsgGCGetCommandListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetCommandListResponse& default_instance();

  void Swap(CMsgGCGetCommandListResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCGetCommandListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetCommandListResponse& from);
  void MergeFrom(const CMsgGCGetCommandListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string command_name = 1;
  inline int command_name_size() const;
  inline void clear_command_name();
  static const int kCommandNameFieldNumber = 1;
  inline const ::std::string& command_name(int index) const;
  inline ::std::string* mutable_command_name(int index);
  inline void set_command_name(int index, const ::std::string& value);
  inline void set_command_name(int index, const char* value);
  inline void set_command_name(int index, const char* value, size_t size);
  inline ::std::string* add_command_name();
  inline void add_command_name(const ::std::string& value);
  inline void add_command_name(const char* value);
  inline void add_command_name(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& command_name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_command_name();

  // @@protoc_insertion_point(class_scope:CMsgGCGetCommandListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> command_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetCommandListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedGet : public ::google::protobuf::Message {
 public:
  CGCMsgMemCachedGet();
  virtual ~CGCMsgMemCachedGet();

  CGCMsgMemCachedGet(const CGCMsgMemCachedGet& from);

  inline CGCMsgMemCachedGet& operator=(const CGCMsgMemCachedGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgMemCachedGet& default_instance();

  void Swap(CGCMsgMemCachedGet* other);

  // implements Message ----------------------------------------------

  CGCMsgMemCachedGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgMemCachedGet& from);
  void MergeFrom(const CGCMsgMemCachedGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string keys = 1;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline const ::std::string& keys(int index) const;
  inline ::std::string* mutable_keys(int index);
  inline void set_keys(int index, const ::std::string& value);
  inline void set_keys(int index, const char* value);
  inline void set_keys(int index, const char* value, size_t size);
  inline ::std::string* add_keys();
  inline void add_keys(const ::std::string& value);
  inline void add_keys(const char* value);
  inline void add_keys(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // @@protoc_insertion_point(class_scope:CGCMsgMemCachedGet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgMemCachedGet* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedGetResponse_ValueTag : public ::google::protobuf::Message {
 public:
  CGCMsgMemCachedGetResponse_ValueTag();
  virtual ~CGCMsgMemCachedGetResponse_ValueTag();

  CGCMsgMemCachedGetResponse_ValueTag(const CGCMsgMemCachedGetResponse_ValueTag& from);

  inline CGCMsgMemCachedGetResponse_ValueTag& operator=(const CGCMsgMemCachedGetResponse_ValueTag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgMemCachedGetResponse_ValueTag& default_instance();

  void Swap(CGCMsgMemCachedGetResponse_ValueTag* other);

  // implements Message ----------------------------------------------

  CGCMsgMemCachedGetResponse_ValueTag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgMemCachedGetResponse_ValueTag& from);
  void MergeFrom(const CGCMsgMemCachedGetResponse_ValueTag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool found = 1;
  inline bool has_found() const;
  inline void clear_found();
  static const int kFoundFieldNumber = 1;
  inline bool found() const;
  inline void set_found(bool value);

  // optional bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CGCMsgMemCachedGetResponse.ValueTag)
 private:
  inline void set_has_found();
  inline void clear_has_found();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* value_;
  bool found_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgMemCachedGetResponse_ValueTag* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedGetResponse : public ::google::protobuf::Message {
 public:
  CGCMsgMemCachedGetResponse();
  virtual ~CGCMsgMemCachedGetResponse();

  CGCMsgMemCachedGetResponse(const CGCMsgMemCachedGetResponse& from);

  inline CGCMsgMemCachedGetResponse& operator=(const CGCMsgMemCachedGetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgMemCachedGetResponse& default_instance();

  void Swap(CGCMsgMemCachedGetResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgMemCachedGetResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgMemCachedGetResponse& from);
  void MergeFrom(const CGCMsgMemCachedGetResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CGCMsgMemCachedGetResponse_ValueTag ValueTag;

  // accessors -------------------------------------------------------

  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::CGCMsgMemCachedGetResponse_ValueTag& values(int index) const;
  inline ::CGCMsgMemCachedGetResponse_ValueTag* mutable_values(int index);
  inline ::CGCMsgMemCachedGetResponse_ValueTag* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedGetResponse_ValueTag >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedGetResponse_ValueTag >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:CGCMsgMemCachedGetResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedGetResponse_ValueTag > values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgMemCachedGetResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedSet_KeyPair : public ::google::protobuf::Message {
 public:
  CGCMsgMemCachedSet_KeyPair();
  virtual ~CGCMsgMemCachedSet_KeyPair();

  CGCMsgMemCachedSet_KeyPair(const CGCMsgMemCachedSet_KeyPair& from);

  inline CGCMsgMemCachedSet_KeyPair& operator=(const CGCMsgMemCachedSet_KeyPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgMemCachedSet_KeyPair& default_instance();

  void Swap(CGCMsgMemCachedSet_KeyPair* other);

  // implements Message ----------------------------------------------

  CGCMsgMemCachedSet_KeyPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgMemCachedSet_KeyPair& from);
  void MergeFrom(const CGCMsgMemCachedSet_KeyPair& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CGCMsgMemCachedSet.KeyPair)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgMemCachedSet_KeyPair* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedSet : public ::google::protobuf::Message {
 public:
  CGCMsgMemCachedSet();
  virtual ~CGCMsgMemCachedSet();

  CGCMsgMemCachedSet(const CGCMsgMemCachedSet& from);

  inline CGCMsgMemCachedSet& operator=(const CGCMsgMemCachedSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgMemCachedSet& default_instance();

  void Swap(CGCMsgMemCachedSet* other);

  // implements Message ----------------------------------------------

  CGCMsgMemCachedSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgMemCachedSet& from);
  void MergeFrom(const CGCMsgMemCachedSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CGCMsgMemCachedSet_KeyPair KeyPair;

  // accessors -------------------------------------------------------

  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline const ::CGCMsgMemCachedSet_KeyPair& keys(int index) const;
  inline ::CGCMsgMemCachedSet_KeyPair* mutable_keys(int index);
  inline ::CGCMsgMemCachedSet_KeyPair* add_keys();
  inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedSet_KeyPair >&
      keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedSet_KeyPair >*
      mutable_keys();

  // @@protoc_insertion_point(class_scope:CGCMsgMemCachedSet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedSet_KeyPair > keys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgMemCachedSet* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedDelete : public ::google::protobuf::Message {
 public:
  CGCMsgMemCachedDelete();
  virtual ~CGCMsgMemCachedDelete();

  CGCMsgMemCachedDelete(const CGCMsgMemCachedDelete& from);

  inline CGCMsgMemCachedDelete& operator=(const CGCMsgMemCachedDelete& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgMemCachedDelete& default_instance();

  void Swap(CGCMsgMemCachedDelete* other);

  // implements Message ----------------------------------------------

  CGCMsgMemCachedDelete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgMemCachedDelete& from);
  void MergeFrom(const CGCMsgMemCachedDelete& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string keys = 1;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline const ::std::string& keys(int index) const;
  inline ::std::string* mutable_keys(int index);
  inline void set_keys(int index, const ::std::string& value);
  inline void set_keys(int index, const char* value);
  inline void set_keys(int index, const char* value, size_t size);
  inline ::std::string* add_keys();
  inline void add_keys(const ::std::string& value);
  inline void add_keys(const char* value);
  inline void add_keys(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // @@protoc_insertion_point(class_scope:CGCMsgMemCachedDelete)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgMemCachedDelete* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedStats : public ::google::protobuf::Message {
 public:
  CGCMsgMemCachedStats();
  virtual ~CGCMsgMemCachedStats();

  CGCMsgMemCachedStats(const CGCMsgMemCachedStats& from);

  inline CGCMsgMemCachedStats& operator=(const CGCMsgMemCachedStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgMemCachedStats& default_instance();

  void Swap(CGCMsgMemCachedStats* other);

  // implements Message ----------------------------------------------

  CGCMsgMemCachedStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgMemCachedStats& from);
  void MergeFrom(const CGCMsgMemCachedStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGCMsgMemCachedStats)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgMemCachedStats* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgMemCachedStatsResponse : public ::google::protobuf::Message {
 public:
  CGCMsgMemCachedStatsResponse();
  virtual ~CGCMsgMemCachedStatsResponse();

  CGCMsgMemCachedStatsResponse(const CGCMsgMemCachedStatsResponse& from);

  inline CGCMsgMemCachedStatsResponse& operator=(const CGCMsgMemCachedStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgMemCachedStatsResponse& default_instance();

  void Swap(CGCMsgMemCachedStatsResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgMemCachedStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgMemCachedStatsResponse& from);
  void MergeFrom(const CGCMsgMemCachedStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 curr_connections = 1;
  inline bool has_curr_connections() const;
  inline void clear_curr_connections();
  static const int kCurrConnectionsFieldNumber = 1;
  inline ::google::protobuf::uint64 curr_connections() const;
  inline void set_curr_connections(::google::protobuf::uint64 value);

  // optional uint64 cmd_get = 2;
  inline bool has_cmd_get() const;
  inline void clear_cmd_get();
  static const int kCmdGetFieldNumber = 2;
  inline ::google::protobuf::uint64 cmd_get() const;
  inline void set_cmd_get(::google::protobuf::uint64 value);

  // optional uint64 cmd_set = 3;
  inline bool has_cmd_set() const;
  inline void clear_cmd_set();
  static const int kCmdSetFieldNumber = 3;
  inline ::google::protobuf::uint64 cmd_set() const;
  inline void set_cmd_set(::google::protobuf::uint64 value);

  // optional uint64 cmd_flush = 4;
  inline bool has_cmd_flush() const;
  inline void clear_cmd_flush();
  static const int kCmdFlushFieldNumber = 4;
  inline ::google::protobuf::uint64 cmd_flush() const;
  inline void set_cmd_flush(::google::protobuf::uint64 value);

  // optional uint64 get_hits = 5;
  inline bool has_get_hits() const;
  inline void clear_get_hits();
  static const int kGetHitsFieldNumber = 5;
  inline ::google::protobuf::uint64 get_hits() const;
  inline void set_get_hits(::google::protobuf::uint64 value);

  // optional uint64 get_misses = 6;
  inline bool has_get_misses() const;
  inline void clear_get_misses();
  static const int kGetMissesFieldNumber = 6;
  inline ::google::protobuf::uint64 get_misses() const;
  inline void set_get_misses(::google::protobuf::uint64 value);

  // optional uint64 delete_hits = 7;
  inline bool has_delete_hits() const;
  inline void clear_delete_hits();
  static const int kDeleteHitsFieldNumber = 7;
  inline ::google::protobuf::uint64 delete_hits() const;
  inline void set_delete_hits(::google::protobuf::uint64 value);

  // optional uint64 delete_misses = 8;
  inline bool has_delete_misses() const;
  inline void clear_delete_misses();
  static const int kDeleteMissesFieldNumber = 8;
  inline ::google::protobuf::uint64 delete_misses() const;
  inline void set_delete_misses(::google::protobuf::uint64 value);

  // optional uint64 bytes_read = 9;
  inline bool has_bytes_read() const;
  inline void clear_bytes_read();
  static const int kBytesReadFieldNumber = 9;
  inline ::google::protobuf::uint64 bytes_read() const;
  inline void set_bytes_read(::google::protobuf::uint64 value);

  // optional uint64 bytes_written = 10;
  inline bool has_bytes_written() const;
  inline void clear_bytes_written();
  static const int kBytesWrittenFieldNumber = 10;
  inline ::google::protobuf::uint64 bytes_written() const;
  inline void set_bytes_written(::google::protobuf::uint64 value);

  // optional uint64 limit_maxbytes = 11;
  inline bool has_limit_maxbytes() const;
  inline void clear_limit_maxbytes();
  static const int kLimitMaxbytesFieldNumber = 11;
  inline ::google::protobuf::uint64 limit_maxbytes() const;
  inline void set_limit_maxbytes(::google::protobuf::uint64 value);

  // optional uint64 curr_items = 12;
  inline bool has_curr_items() const;
  inline void clear_curr_items();
  static const int kCurrItemsFieldNumber = 12;
  inline ::google::protobuf::uint64 curr_items() const;
  inline void set_curr_items(::google::protobuf::uint64 value);

  // optional uint64 evictions = 13;
  inline bool has_evictions() const;
  inline void clear_evictions();
  static const int kEvictionsFieldNumber = 13;
  inline ::google::protobuf::uint64 evictions() const;
  inline void set_evictions(::google::protobuf::uint64 value);

  // optional uint64 bytes = 14;
  inline bool has_bytes() const;
  inline void clear_bytes();
  static const int kBytesFieldNumber = 14;
  inline ::google::protobuf::uint64 bytes() const;
  inline void set_bytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CGCMsgMemCachedStatsResponse)
 private:
  inline void set_has_curr_connections();
  inline void clear_has_curr_connections();
  inline void set_has_cmd_get();
  inline void clear_has_cmd_get();
  inline void set_has_cmd_set();
  inline void clear_has_cmd_set();
  inline void set_has_cmd_flush();
  inline void clear_has_cmd_flush();
  inline void set_has_get_hits();
  inline void clear_has_get_hits();
  inline void set_has_get_misses();
  inline void clear_has_get_misses();
  inline void set_has_delete_hits();
  inline void clear_has_delete_hits();
  inline void set_has_delete_misses();
  inline void clear_has_delete_misses();
  inline void set_has_bytes_read();
  inline void clear_has_bytes_read();
  inline void set_has_bytes_written();
  inline void clear_has_bytes_written();
  inline void set_has_limit_maxbytes();
  inline void clear_has_limit_maxbytes();
  inline void set_has_curr_items();
  inline void clear_has_curr_items();
  inline void set_has_evictions();
  inline void clear_has_evictions();
  inline void set_has_bytes();
  inline void clear_has_bytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 curr_connections_;
  ::google::protobuf::uint64 cmd_get_;
  ::google::protobuf::uint64 cmd_set_;
  ::google::protobuf::uint64 cmd_flush_;
  ::google::protobuf::uint64 get_hits_;
  ::google::protobuf::uint64 get_misses_;
  ::google::protobuf::uint64 delete_hits_;
  ::google::protobuf::uint64 delete_misses_;
  ::google::protobuf::uint64 bytes_read_;
  ::google::protobuf::uint64 bytes_written_;
  ::google::protobuf::uint64 limit_maxbytes_;
  ::google::protobuf::uint64 curr_items_;
  ::google::protobuf::uint64 evictions_;
  ::google::protobuf::uint64 bytes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgMemCachedStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgSQLStats : public ::google::protobuf::Message {
 public:
  CGCMsgSQLStats();
  virtual ~CGCMsgSQLStats();

  CGCMsgSQLStats(const CGCMsgSQLStats& from);

  inline CGCMsgSQLStats& operator=(const CGCMsgSQLStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgSQLStats& default_instance();

  void Swap(CGCMsgSQLStats* other);

  // implements Message ----------------------------------------------

  CGCMsgSQLStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgSQLStats& from);
  void MergeFrom(const CGCMsgSQLStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 schema_catalog = 1;
  inline bool has_schema_catalog() const;
  inline void clear_schema_catalog();
  static const int kSchemaCatalogFieldNumber = 1;
  inline ::google::protobuf::uint32 schema_catalog() const;
  inline void set_schema_catalog(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgSQLStats)
 private:
  inline void set_has_schema_catalog();
  inline void clear_has_schema_catalog();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 schema_catalog_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgSQLStats* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgSQLStatsResponse : public ::google::protobuf::Message {
 public:
  CGCMsgSQLStatsResponse();
  virtual ~CGCMsgSQLStatsResponse();

  CGCMsgSQLStatsResponse(const CGCMsgSQLStatsResponse& from);

  inline CGCMsgSQLStatsResponse& operator=(const CGCMsgSQLStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgSQLStatsResponse& default_instance();

  void Swap(CGCMsgSQLStatsResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgSQLStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgSQLStatsResponse& from);
  void MergeFrom(const CGCMsgSQLStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 threads = 1;
  inline bool has_threads() const;
  inline void clear_threads();
  static const int kThreadsFieldNumber = 1;
  inline ::google::protobuf::uint32 threads() const;
  inline void set_threads(::google::protobuf::uint32 value);

  // optional uint32 threads_connected = 2;
  inline bool has_threads_connected() const;
  inline void clear_threads_connected();
  static const int kThreadsConnectedFieldNumber = 2;
  inline ::google::protobuf::uint32 threads_connected() const;
  inline void set_threads_connected(::google::protobuf::uint32 value);

  // optional uint32 threads_active = 3;
  inline bool has_threads_active() const;
  inline void clear_threads_active();
  static const int kThreadsActiveFieldNumber = 3;
  inline ::google::protobuf::uint32 threads_active() const;
  inline void set_threads_active(::google::protobuf::uint32 value);

  // optional uint32 operations_submitted = 4;
  inline bool has_operations_submitted() const;
  inline void clear_operations_submitted();
  static const int kOperationsSubmittedFieldNumber = 4;
  inline ::google::protobuf::uint32 operations_submitted() const;
  inline void set_operations_submitted(::google::protobuf::uint32 value);

  // optional uint32 prepared_statements_executed = 5;
  inline bool has_prepared_statements_executed() const;
  inline void clear_prepared_statements_executed();
  static const int kPreparedStatementsExecutedFieldNumber = 5;
  inline ::google::protobuf::uint32 prepared_statements_executed() const;
  inline void set_prepared_statements_executed(::google::protobuf::uint32 value);

  // optional uint32 non_prepared_statements_executed = 6;
  inline bool has_non_prepared_statements_executed() const;
  inline void clear_non_prepared_statements_executed();
  static const int kNonPreparedStatementsExecutedFieldNumber = 6;
  inline ::google::protobuf::uint32 non_prepared_statements_executed() const;
  inline void set_non_prepared_statements_executed(::google::protobuf::uint32 value);

  // optional uint32 deadlock_retries = 7;
  inline bool has_deadlock_retries() const;
  inline void clear_deadlock_retries();
  static const int kDeadlockRetriesFieldNumber = 7;
  inline ::google::protobuf::uint32 deadlock_retries() const;
  inline void set_deadlock_retries(::google::protobuf::uint32 value);

  // optional uint32 operations_timed_out_in_queue = 8;
  inline bool has_operations_timed_out_in_queue() const;
  inline void clear_operations_timed_out_in_queue();
  static const int kOperationsTimedOutInQueueFieldNumber = 8;
  inline ::google::protobuf::uint32 operations_timed_out_in_queue() const;
  inline void set_operations_timed_out_in_queue(::google::protobuf::uint32 value);

  // optional uint32 errors = 9;
  inline bool has_errors() const;
  inline void clear_errors();
  static const int kErrorsFieldNumber = 9;
  inline ::google::protobuf::uint32 errors() const;
  inline void set_errors(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgSQLStatsResponse)
 private:
  inline void set_has_threads();
  inline void clear_has_threads();
  inline void set_has_threads_connected();
  inline void clear_has_threads_connected();
  inline void set_has_threads_active();
  inline void clear_has_threads_active();
  inline void set_has_operations_submitted();
  inline void clear_has_operations_submitted();
  inline void set_has_prepared_statements_executed();
  inline void clear_has_prepared_statements_executed();
  inline void set_has_non_prepared_statements_executed();
  inline void clear_has_non_prepared_statements_executed();
  inline void set_has_deadlock_retries();
  inline void clear_has_deadlock_retries();
  inline void set_has_operations_timed_out_in_queue();
  inline void clear_has_operations_timed_out_in_queue();
  inline void set_has_errors();
  inline void clear_has_errors();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 threads_;
  ::google::protobuf::uint32 threads_connected_;
  ::google::protobuf::uint32 threads_active_;
  ::google::protobuf::uint32 operations_submitted_;
  ::google::protobuf::uint32 prepared_statements_executed_;
  ::google::protobuf::uint32 non_prepared_statements_executed_;
  ::google::protobuf::uint32 deadlock_retries_;
  ::google::protobuf::uint32 operations_timed_out_in_queue_;
  ::google::protobuf::uint32 errors_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgSQLStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMAddFreeLicense : public ::google::protobuf::Message {
 public:
  CMsgAMAddFreeLicense();
  virtual ~CMsgAMAddFreeLicense();

  CMsgAMAddFreeLicense(const CMsgAMAddFreeLicense& from);

  inline CMsgAMAddFreeLicense& operator=(const CMsgAMAddFreeLicense& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMAddFreeLicense& default_instance();

  void Swap(CMsgAMAddFreeLicense* other);

  // implements Message ----------------------------------------------

  CMsgAMAddFreeLicense* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMAddFreeLicense& from);
  void MergeFrom(const CMsgAMAddFreeLicense& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 ip_public = 2;
  inline bool has_ip_public() const;
  inline void clear_ip_public();
  static const int kIpPublicFieldNumber = 2;
  inline ::google::protobuf::uint32 ip_public() const;
  inline void set_ip_public(::google::protobuf::uint32 value);

  // optional uint32 packageid = 3;
  inline bool has_packageid() const;
  inline void clear_packageid();
  static const int kPackageidFieldNumber = 3;
  inline ::google::protobuf::uint32 packageid() const;
  inline void set_packageid(::google::protobuf::uint32 value);

  // optional string store_country_code = 4;
  inline bool has_store_country_code() const;
  inline void clear_store_country_code();
  static const int kStoreCountryCodeFieldNumber = 4;
  inline const ::std::string& store_country_code() const;
  inline void set_store_country_code(const ::std::string& value);
  inline void set_store_country_code(const char* value);
  inline void set_store_country_code(const char* value, size_t size);
  inline ::std::string* mutable_store_country_code();
  inline ::std::string* release_store_country_code();
  inline void set_allocated_store_country_code(::std::string* store_country_code);

  // @@protoc_insertion_point(class_scope:CMsgAMAddFreeLicense)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_ip_public();
  inline void clear_has_ip_public();
  inline void set_has_packageid();
  inline void clear_has_packageid();
  inline void set_has_store_country_code();
  inline void clear_has_store_country_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 ip_public_;
  ::google::protobuf::uint32 packageid_;
  ::std::string* store_country_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMAddFreeLicense* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMAddFreeLicenseResponse : public ::google::protobuf::Message {
 public:
  CMsgAMAddFreeLicenseResponse();
  virtual ~CMsgAMAddFreeLicenseResponse();

  CMsgAMAddFreeLicenseResponse(const CMsgAMAddFreeLicenseResponse& from);

  inline CMsgAMAddFreeLicenseResponse& operator=(const CMsgAMAddFreeLicenseResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMAddFreeLicenseResponse& default_instance();

  void Swap(CMsgAMAddFreeLicenseResponse* other);

  // implements Message ----------------------------------------------

  CMsgAMAddFreeLicenseResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMAddFreeLicenseResponse& from);
  void MergeFrom(const CMsgAMAddFreeLicenseResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional int32 purchase_result_detail = 2;
  inline bool has_purchase_result_detail() const;
  inline void clear_purchase_result_detail();
  static const int kPurchaseResultDetailFieldNumber = 2;
  inline ::google::protobuf::int32 purchase_result_detail() const;
  inline void set_purchase_result_detail(::google::protobuf::int32 value);

  // optional fixed64 transid = 3;
  inline bool has_transid() const;
  inline void clear_transid();
  static const int kTransidFieldNumber = 3;
  inline ::google::protobuf::uint64 transid() const;
  inline void set_transid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgAMAddFreeLicenseResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_purchase_result_detail();
  inline void clear_has_purchase_result_detail();
  inline void set_has_transid();
  inline void clear_has_transid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 purchase_result_detail_;
  ::google::protobuf::uint64 transid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMAddFreeLicenseResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGetIPLocation : public ::google::protobuf::Message {
 public:
  CGCMsgGetIPLocation();
  virtual ~CGCMsgGetIPLocation();

  CGCMsgGetIPLocation(const CGCMsgGetIPLocation& from);

  inline CGCMsgGetIPLocation& operator=(const CGCMsgGetIPLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGetIPLocation& default_instance();

  void Swap(CGCMsgGetIPLocation* other);

  // implements Message ----------------------------------------------

  CGCMsgGetIPLocation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGetIPLocation& from);
  void MergeFrom(const CGCMsgGetIPLocation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 ips = 1;
  inline int ips_size() const;
  inline void clear_ips();
  static const int kIpsFieldNumber = 1;
  inline ::google::protobuf::uint32 ips(int index) const;
  inline void set_ips(int index, ::google::protobuf::uint32 value);
  inline void add_ips(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ips() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ips();

  // @@protoc_insertion_point(class_scope:CGCMsgGetIPLocation)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ips_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGetIPLocation* default_instance_;
};
// -------------------------------------------------------------------

class CIPLocationInfo : public ::google::protobuf::Message {
 public:
  CIPLocationInfo();
  virtual ~CIPLocationInfo();

  CIPLocationInfo(const CIPLocationInfo& from);

  inline CIPLocationInfo& operator=(const CIPLocationInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CIPLocationInfo& default_instance();

  void Swap(CIPLocationInfo* other);

  // implements Message ----------------------------------------------

  CIPLocationInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CIPLocationInfo& from);
  void MergeFrom(const CIPLocationInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // optional float latitude = 2;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  inline float latitude() const;
  inline void set_latitude(float value);

  // optional float longitude = 3;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  inline float longitude() const;
  inline void set_longitude(float value);

  // optional string country = 4;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 4;
  inline const ::std::string& country() const;
  inline void set_country(const ::std::string& value);
  inline void set_country(const char* value);
  inline void set_country(const char* value, size_t size);
  inline ::std::string* mutable_country();
  inline ::std::string* release_country();
  inline void set_allocated_country(::std::string* country);

  // optional string state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline const ::std::string& state() const;
  inline void set_state(const ::std::string& value);
  inline void set_state(const char* value);
  inline void set_state(const char* value, size_t size);
  inline ::std::string* mutable_state();
  inline ::std::string* release_state();
  inline void set_allocated_state(::std::string* state);

  // optional string city = 6;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 6;
  inline const ::std::string& city() const;
  inline void set_city(const ::std::string& value);
  inline void set_city(const char* value);
  inline void set_city(const char* value, size_t size);
  inline ::std::string* mutable_city();
  inline ::std::string* release_city();
  inline void set_allocated_city(::std::string* city);

  // @@protoc_insertion_point(class_scope:CIPLocationInfo)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_city();
  inline void clear_has_city();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ip_;
  float latitude_;
  ::std::string* country_;
  ::std::string* state_;
  ::std::string* city_;
  float longitude_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CIPLocationInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGetIPLocationResponse : public ::google::protobuf::Message {
 public:
  CGCMsgGetIPLocationResponse();
  virtual ~CGCMsgGetIPLocationResponse();

  CGCMsgGetIPLocationResponse(const CGCMsgGetIPLocationResponse& from);

  inline CGCMsgGetIPLocationResponse& operator=(const CGCMsgGetIPLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGetIPLocationResponse& default_instance();

  void Swap(CGCMsgGetIPLocationResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgGetIPLocationResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGetIPLocationResponse& from);
  void MergeFrom(const CGCMsgGetIPLocationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CIPLocationInfo infos = 1;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 1;
  inline const ::CIPLocationInfo& infos(int index) const;
  inline ::CIPLocationInfo* mutable_infos(int index);
  inline ::CIPLocationInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CIPLocationInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CIPLocationInfo >*
      mutable_infos();

  // @@protoc_insertion_point(class_scope:CGCMsgGetIPLocationResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CIPLocationInfo > infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGetIPLocationResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgSystemStatsSchema : public ::google::protobuf::Message {
 public:
  CGCMsgSystemStatsSchema();
  virtual ~CGCMsgSystemStatsSchema();

  CGCMsgSystemStatsSchema(const CGCMsgSystemStatsSchema& from);

  inline CGCMsgSystemStatsSchema& operator=(const CGCMsgSystemStatsSchema& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgSystemStatsSchema& default_instance();

  void Swap(CGCMsgSystemStatsSchema* other);

  // implements Message ----------------------------------------------

  CGCMsgSystemStatsSchema* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgSystemStatsSchema& from);
  void MergeFrom(const CGCMsgSystemStatsSchema& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gc_app_id = 1;
  inline bool has_gc_app_id() const;
  inline void clear_gc_app_id();
  static const int kGcAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 gc_app_id() const;
  inline void set_gc_app_id(::google::protobuf::uint32 value);

  // optional bytes schema_kv = 2;
  inline bool has_schema_kv() const;
  inline void clear_schema_kv();
  static const int kSchemaKvFieldNumber = 2;
  inline const ::std::string& schema_kv() const;
  inline void set_schema_kv(const ::std::string& value);
  inline void set_schema_kv(const char* value);
  inline void set_schema_kv(const void* value, size_t size);
  inline ::std::string* mutable_schema_kv();
  inline ::std::string* release_schema_kv();
  inline void set_allocated_schema_kv(::std::string* schema_kv);

  // @@protoc_insertion_point(class_scope:CGCMsgSystemStatsSchema)
 private:
  inline void set_has_gc_app_id();
  inline void clear_has_gc_app_id();
  inline void set_has_schema_kv();
  inline void clear_has_schema_kv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* schema_kv_;
  ::google::protobuf::uint32 gc_app_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgSystemStatsSchema* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGetSystemStats : public ::google::protobuf::Message {
 public:
  CGCMsgGetSystemStats();
  virtual ~CGCMsgGetSystemStats();

  CGCMsgGetSystemStats(const CGCMsgGetSystemStats& from);

  inline CGCMsgGetSystemStats& operator=(const CGCMsgGetSystemStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGetSystemStats& default_instance();

  void Swap(CGCMsgGetSystemStats* other);

  // implements Message ----------------------------------------------

  CGCMsgGetSystemStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGetSystemStats& from);
  void MergeFrom(const CGCMsgGetSystemStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGCMsgGetSystemStats)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGetSystemStats* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGetSystemStatsResponse : public ::google::protobuf::Message {
 public:
  CGCMsgGetSystemStatsResponse();
  virtual ~CGCMsgGetSystemStatsResponse();

  CGCMsgGetSystemStatsResponse(const CGCMsgGetSystemStatsResponse& from);

  inline CGCMsgGetSystemStatsResponse& operator=(const CGCMsgGetSystemStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGetSystemStatsResponse& default_instance();

  void Swap(CGCMsgGetSystemStatsResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgGetSystemStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGetSystemStatsResponse& from);
  void MergeFrom(const CGCMsgGetSystemStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gc_app_id = 1;
  inline bool has_gc_app_id() const;
  inline void clear_gc_app_id();
  static const int kGcAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 gc_app_id() const;
  inline void set_gc_app_id(::google::protobuf::uint32 value);

  // optional bytes stats_kv = 2;
  inline bool has_stats_kv() const;
  inline void clear_stats_kv();
  static const int kStatsKvFieldNumber = 2;
  inline const ::std::string& stats_kv() const;
  inline void set_stats_kv(const ::std::string& value);
  inline void set_stats_kv(const char* value);
  inline void set_stats_kv(const void* value, size_t size);
  inline ::std::string* mutable_stats_kv();
  inline ::std::string* release_stats_kv();
  inline void set_allocated_stats_kv(::std::string* stats_kv);

  // optional uint32 active_jobs = 3;
  inline bool has_active_jobs() const;
  inline void clear_active_jobs();
  static const int kActiveJobsFieldNumber = 3;
  inline ::google::protobuf::uint32 active_jobs() const;
  inline void set_active_jobs(::google::protobuf::uint32 value);

  // optional uint32 yielding_jobs = 4;
  inline bool has_yielding_jobs() const;
  inline void clear_yielding_jobs();
  static const int kYieldingJobsFieldNumber = 4;
  inline ::google::protobuf::uint32 yielding_jobs() const;
  inline void set_yielding_jobs(::google::protobuf::uint32 value);

  // optional uint32 user_sessions = 5;
  inline bool has_user_sessions() const;
  inline void clear_user_sessions();
  static const int kUserSessionsFieldNumber = 5;
  inline ::google::protobuf::uint32 user_sessions() const;
  inline void set_user_sessions(::google::protobuf::uint32 value);

  // optional uint32 game_server_sessions = 6;
  inline bool has_game_server_sessions() const;
  inline void clear_game_server_sessions();
  static const int kGameServerSessionsFieldNumber = 6;
  inline ::google::protobuf::uint32 game_server_sessions() const;
  inline void set_game_server_sessions(::google::protobuf::uint32 value);

  // optional uint32 socaches = 7;
  inline bool has_socaches() const;
  inline void clear_socaches();
  static const int kSocachesFieldNumber = 7;
  inline ::google::protobuf::uint32 socaches() const;
  inline void set_socaches(::google::protobuf::uint32 value);

  // optional uint32 socaches_to_unload = 8;
  inline bool has_socaches_to_unload() const;
  inline void clear_socaches_to_unload();
  static const int kSocachesToUnloadFieldNumber = 8;
  inline ::google::protobuf::uint32 socaches_to_unload() const;
  inline void set_socaches_to_unload(::google::protobuf::uint32 value);

  // optional uint32 socaches_loading = 9;
  inline bool has_socaches_loading() const;
  inline void clear_socaches_loading();
  static const int kSocachesLoadingFieldNumber = 9;
  inline ::google::protobuf::uint32 socaches_loading() const;
  inline void set_socaches_loading(::google::protobuf::uint32 value);

  // optional uint32 writeback_queue = 10;
  inline bool has_writeback_queue() const;
  inline void clear_writeback_queue();
  static const int kWritebackQueueFieldNumber = 10;
  inline ::google::protobuf::uint32 writeback_queue() const;
  inline void set_writeback_queue(::google::protobuf::uint32 value);

  // optional uint32 steamid_locks = 11;
  inline bool has_steamid_locks() const;
  inline void clear_steamid_locks();
  static const int kSteamidLocksFieldNumber = 11;
  inline ::google::protobuf::uint32 steamid_locks() const;
  inline void set_steamid_locks(::google::protobuf::uint32 value);

  // optional uint32 logon_queue = 12;
  inline bool has_logon_queue() const;
  inline void clear_logon_queue();
  static const int kLogonQueueFieldNumber = 12;
  inline ::google::protobuf::uint32 logon_queue() const;
  inline void set_logon_queue(::google::protobuf::uint32 value);

  // optional uint32 logon_jobs = 13;
  inline bool has_logon_jobs() const;
  inline void clear_logon_jobs();
  static const int kLogonJobsFieldNumber = 13;
  inline ::google::protobuf::uint32 logon_jobs() const;
  inline void set_logon_jobs(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGetSystemStatsResponse)
 private:
  inline void set_has_gc_app_id();
  inline void clear_has_gc_app_id();
  inline void set_has_stats_kv();
  inline void clear_has_stats_kv();
  inline void set_has_active_jobs();
  inline void clear_has_active_jobs();
  inline void set_has_yielding_jobs();
  inline void clear_has_yielding_jobs();
  inline void set_has_user_sessions();
  inline void clear_has_user_sessions();
  inline void set_has_game_server_sessions();
  inline void clear_has_game_server_sessions();
  inline void set_has_socaches();
  inline void clear_has_socaches();
  inline void set_has_socaches_to_unload();
  inline void clear_has_socaches_to_unload();
  inline void set_has_socaches_loading();
  inline void clear_has_socaches_loading();
  inline void set_has_writeback_queue();
  inline void clear_has_writeback_queue();
  inline void set_has_steamid_locks();
  inline void clear_has_steamid_locks();
  inline void set_has_logon_queue();
  inline void clear_has_logon_queue();
  inline void set_has_logon_jobs();
  inline void clear_has_logon_jobs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stats_kv_;
  ::google::protobuf::uint32 gc_app_id_;
  ::google::protobuf::uint32 active_jobs_;
  ::google::protobuf::uint32 yielding_jobs_;
  ::google::protobuf::uint32 user_sessions_;
  ::google::protobuf::uint32 game_server_sessions_;
  ::google::protobuf::uint32 socaches_;
  ::google::protobuf::uint32 socaches_to_unload_;
  ::google::protobuf::uint32 socaches_loading_;
  ::google::protobuf::uint32 writeback_queue_;
  ::google::protobuf::uint32 steamid_locks_;
  ::google::protobuf::uint32 logon_queue_;
  ::google::protobuf::uint32 logon_jobs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGetSystemStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMSendEmail_ReplacementToken : public ::google::protobuf::Message {
 public:
  CMsgAMSendEmail_ReplacementToken();
  virtual ~CMsgAMSendEmail_ReplacementToken();

  CMsgAMSendEmail_ReplacementToken(const CMsgAMSendEmail_ReplacementToken& from);

  inline CMsgAMSendEmail_ReplacementToken& operator=(const CMsgAMSendEmail_ReplacementToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMSendEmail_ReplacementToken& default_instance();

  void Swap(CMsgAMSendEmail_ReplacementToken* other);

  // implements Message ----------------------------------------------

  CMsgAMSendEmail_ReplacementToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMSendEmail_ReplacementToken& from);
  void MergeFrom(const CMsgAMSendEmail_ReplacementToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token_name = 1;
  inline bool has_token_name() const;
  inline void clear_token_name();
  static const int kTokenNameFieldNumber = 1;
  inline const ::std::string& token_name() const;
  inline void set_token_name(const ::std::string& value);
  inline void set_token_name(const char* value);
  inline void set_token_name(const char* value, size_t size);
  inline ::std::string* mutable_token_name();
  inline ::std::string* release_token_name();
  inline void set_allocated_token_name(::std::string* token_name);

  // optional string token_value = 2;
  inline bool has_token_value() const;
  inline void clear_token_value();
  static const int kTokenValueFieldNumber = 2;
  inline const ::std::string& token_value() const;
  inline void set_token_value(const ::std::string& value);
  inline void set_token_value(const char* value);
  inline void set_token_value(const char* value, size_t size);
  inline ::std::string* mutable_token_value();
  inline ::std::string* release_token_value();
  inline void set_allocated_token_value(::std::string* token_value);

  // @@protoc_insertion_point(class_scope:CMsgAMSendEmail.ReplacementToken)
 private:
  inline void set_has_token_name();
  inline void clear_has_token_name();
  inline void set_has_token_value();
  inline void clear_has_token_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* token_name_;
  ::std::string* token_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMSendEmail_ReplacementToken* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMSendEmail_PersonaNameReplacementToken : public ::google::protobuf::Message {
 public:
  CMsgAMSendEmail_PersonaNameReplacementToken();
  virtual ~CMsgAMSendEmail_PersonaNameReplacementToken();

  CMsgAMSendEmail_PersonaNameReplacementToken(const CMsgAMSendEmail_PersonaNameReplacementToken& from);

  inline CMsgAMSendEmail_PersonaNameReplacementToken& operator=(const CMsgAMSendEmail_PersonaNameReplacementToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMSendEmail_PersonaNameReplacementToken& default_instance();

  void Swap(CMsgAMSendEmail_PersonaNameReplacementToken* other);

  // implements Message ----------------------------------------------

  CMsgAMSendEmail_PersonaNameReplacementToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from);
  void MergeFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional string token_name = 2;
  inline bool has_token_name() const;
  inline void clear_token_name();
  static const int kTokenNameFieldNumber = 2;
  inline const ::std::string& token_name() const;
  inline void set_token_name(const ::std::string& value);
  inline void set_token_name(const char* value);
  inline void set_token_name(const char* value, size_t size);
  inline ::std::string* mutable_token_name();
  inline ::std::string* release_token_name();
  inline void set_allocated_token_name(::std::string* token_name);

  // @@protoc_insertion_point(class_scope:CMsgAMSendEmail.PersonaNameReplacementToken)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_token_name();
  inline void clear_has_token_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::std::string* token_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMSendEmail_PersonaNameReplacementToken* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMSendEmail : public ::google::protobuf::Message {
 public:
  CMsgAMSendEmail();
  virtual ~CMsgAMSendEmail();

  CMsgAMSendEmail(const CMsgAMSendEmail& from);

  inline CMsgAMSendEmail& operator=(const CMsgAMSendEmail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMSendEmail& default_instance();

  void Swap(CMsgAMSendEmail* other);

  // implements Message ----------------------------------------------

  CMsgAMSendEmail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMSendEmail& from);
  void MergeFrom(const CMsgAMSendEmail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgAMSendEmail_ReplacementToken ReplacementToken;
  typedef CMsgAMSendEmail_PersonaNameReplacementToken PersonaNameReplacementToken;

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 email_msg_type = 2;
  inline bool has_email_msg_type() const;
  inline void clear_email_msg_type();
  static const int kEmailMsgTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 email_msg_type() const;
  inline void set_email_msg_type(::google::protobuf::uint32 value);

  // optional uint32 email_format = 3;
  inline bool has_email_format() const;
  inline void clear_email_format();
  static const int kEmailFormatFieldNumber = 3;
  inline ::google::protobuf::uint32 email_format() const;
  inline void set_email_format(::google::protobuf::uint32 value);

  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  inline int persona_name_tokens_size() const;
  inline void clear_persona_name_tokens();
  static const int kPersonaNameTokensFieldNumber = 5;
  inline const ::CMsgAMSendEmail_PersonaNameReplacementToken& persona_name_tokens(int index) const;
  inline ::CMsgAMSendEmail_PersonaNameReplacementToken* mutable_persona_name_tokens(int index);
  inline ::CMsgAMSendEmail_PersonaNameReplacementToken* add_persona_name_tokens();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_PersonaNameReplacementToken >&
      persona_name_tokens() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_PersonaNameReplacementToken >*
      mutable_persona_name_tokens();

  // optional uint32 source_gc = 6;
  inline bool has_source_gc() const;
  inline void clear_source_gc();
  static const int kSourceGcFieldNumber = 6;
  inline ::google::protobuf::uint32 source_gc() const;
  inline void set_source_gc(::google::protobuf::uint32 value);

  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  inline int tokens_size() const;
  inline void clear_tokens();
  static const int kTokensFieldNumber = 7;
  inline const ::CMsgAMSendEmail_ReplacementToken& tokens(int index) const;
  inline ::CMsgAMSendEmail_ReplacementToken* mutable_tokens(int index);
  inline ::CMsgAMSendEmail_ReplacementToken* add_tokens();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_ReplacementToken >&
      tokens() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_ReplacementToken >*
      mutable_tokens();

  // @@protoc_insertion_point(class_scope:CMsgAMSendEmail)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_email_msg_type();
  inline void clear_has_email_msg_type();
  inline void set_has_email_format();
  inline void clear_has_email_format();
  inline void set_has_source_gc();
  inline void clear_has_source_gc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 email_msg_type_;
  ::google::protobuf::uint32 email_format_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_PersonaNameReplacementToken > persona_name_tokens_;
  ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_ReplacementToken > tokens_;
  ::google::protobuf::uint32 source_gc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMSendEmail* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMSendEmailResponse : public ::google::protobuf::Message {
 public:
  CMsgAMSendEmailResponse();
  virtual ~CMsgAMSendEmailResponse();

  CMsgAMSendEmailResponse(const CMsgAMSendEmailResponse& from);

  inline CMsgAMSendEmailResponse& operator=(const CMsgAMSendEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMSendEmailResponse& default_instance();

  void Swap(CMsgAMSendEmailResponse* other);

  // implements Message ----------------------------------------------

  CMsgAMSendEmailResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMSendEmailResponse& from);
  void MergeFrom(const CMsgAMSendEmailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgAMSendEmailResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMSendEmailResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetEmailTemplate : public ::google::protobuf::Message {
 public:
  CMsgGCGetEmailTemplate();
  virtual ~CMsgGCGetEmailTemplate();

  CMsgGCGetEmailTemplate(const CMsgGCGetEmailTemplate& from);

  inline CMsgGCGetEmailTemplate& operator=(const CMsgGCGetEmailTemplate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetEmailTemplate& default_instance();

  void Swap(CMsgGCGetEmailTemplate* other);

  // implements Message ----------------------------------------------

  CMsgGCGetEmailTemplate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetEmailTemplate& from);
  void MergeFrom(const CMsgGCGetEmailTemplate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 email_msg_type = 2;
  inline bool has_email_msg_type() const;
  inline void clear_email_msg_type();
  static const int kEmailMsgTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 email_msg_type() const;
  inline void set_email_msg_type(::google::protobuf::uint32 value);

  // optional int32 email_lang = 3;
  inline bool has_email_lang() const;
  inline void clear_email_lang();
  static const int kEmailLangFieldNumber = 3;
  inline ::google::protobuf::int32 email_lang() const;
  inline void set_email_lang(::google::protobuf::int32 value);

  // optional int32 email_format = 4;
  inline bool has_email_format() const;
  inline void clear_email_format();
  static const int kEmailFormatFieldNumber = 4;
  inline ::google::protobuf::int32 email_format() const;
  inline void set_email_format(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCGetEmailTemplate)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_email_msg_type();
  inline void clear_has_email_msg_type();
  inline void set_has_email_lang();
  inline void clear_has_email_lang();
  inline void set_has_email_format();
  inline void clear_has_email_format();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 email_msg_type_;
  ::google::protobuf::int32 email_lang_;
  ::google::protobuf::int32 email_format_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetEmailTemplate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetEmailTemplateResponse : public ::google::protobuf::Message {
 public:
  CMsgGCGetEmailTemplateResponse();
  virtual ~CMsgGCGetEmailTemplateResponse();

  CMsgGCGetEmailTemplateResponse(const CMsgGCGetEmailTemplateResponse& from);

  inline CMsgGCGetEmailTemplateResponse& operator=(const CMsgGCGetEmailTemplateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetEmailTemplateResponse& default_instance();

  void Swap(CMsgGCGetEmailTemplateResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCGetEmailTemplateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetEmailTemplateResponse& from);
  void MergeFrom(const CMsgGCGetEmailTemplateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional bool template_exists = 2;
  inline bool has_template_exists() const;
  inline void clear_template_exists();
  static const int kTemplateExistsFieldNumber = 2;
  inline bool template_exists() const;
  inline void set_template_exists(bool value);

  // optional string template = 3;
  inline bool has_template_() const;
  inline void clear_template_();
  static const int kTemplateFieldNumber = 3;
  inline const ::std::string& template_() const;
  inline void set_template_(const ::std::string& value);
  inline void set_template_(const char* value);
  inline void set_template_(const char* value, size_t size);
  inline ::std::string* mutable_template_();
  inline ::std::string* release_template_();
  inline void set_allocated_template_(::std::string* template_);

  // @@protoc_insertion_point(class_scope:CMsgGCGetEmailTemplateResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_template_exists();
  inline void clear_has_template_exists();
  inline void set_has_template_();
  inline void clear_has_template_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;
  bool template_exists_;
  ::std::string* template__;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetEmailTemplateResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMGrantGuestPasses2 : public ::google::protobuf::Message {
 public:
  CMsgAMGrantGuestPasses2();
  virtual ~CMsgAMGrantGuestPasses2();

  CMsgAMGrantGuestPasses2(const CMsgAMGrantGuestPasses2& from);

  inline CMsgAMGrantGuestPasses2& operator=(const CMsgAMGrantGuestPasses2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMGrantGuestPasses2& default_instance();

  void Swap(CMsgAMGrantGuestPasses2* other);

  // implements Message ----------------------------------------------

  CMsgAMGrantGuestPasses2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMGrantGuestPasses2& from);
  void MergeFrom(const CMsgAMGrantGuestPasses2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 package_id = 2;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 package_id() const;
  inline void set_package_id(::google::protobuf::uint32 value);

  // optional int32 passes_to_grant = 3;
  inline bool has_passes_to_grant() const;
  inline void clear_passes_to_grant();
  static const int kPassesToGrantFieldNumber = 3;
  inline ::google::protobuf::int32 passes_to_grant() const;
  inline void set_passes_to_grant(::google::protobuf::int32 value);

  // optional int32 days_to_expiration = 4;
  inline bool has_days_to_expiration() const;
  inline void clear_days_to_expiration();
  static const int kDaysToExpirationFieldNumber = 4;
  inline ::google::protobuf::int32 days_to_expiration() const;
  inline void set_days_to_expiration(::google::protobuf::int32 value);

  // optional int32 action = 5;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 5;
  inline ::google::protobuf::int32 action() const;
  inline void set_action(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgAMGrantGuestPasses2)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_passes_to_grant();
  inline void clear_has_passes_to_grant();
  inline void set_has_days_to_expiration();
  inline void clear_has_days_to_expiration();
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 package_id_;
  ::google::protobuf::int32 passes_to_grant_;
  ::google::protobuf::int32 days_to_expiration_;
  ::google::protobuf::int32 action_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMGrantGuestPasses2* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMGrantGuestPasses2Response : public ::google::protobuf::Message {
 public:
  CMsgAMGrantGuestPasses2Response();
  virtual ~CMsgAMGrantGuestPasses2Response();

  CMsgAMGrantGuestPasses2Response(const CMsgAMGrantGuestPasses2Response& from);

  inline CMsgAMGrantGuestPasses2Response& operator=(const CMsgAMGrantGuestPasses2Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMGrantGuestPasses2Response& default_instance();

  void Swap(CMsgAMGrantGuestPasses2Response* other);

  // implements Message ----------------------------------------------

  CMsgAMGrantGuestPasses2Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMGrantGuestPasses2Response& from);
  void MergeFrom(const CMsgAMGrantGuestPasses2Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional int32 passes_granted = 2 [default = 0];
  inline bool has_passes_granted() const;
  inline void clear_passes_granted();
  static const int kPassesGrantedFieldNumber = 2;
  inline ::google::protobuf::int32 passes_granted() const;
  inline void set_passes_granted(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgAMGrantGuestPasses2Response)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_passes_granted();
  inline void clear_has_passes_granted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 passes_granted_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMGrantGuestPasses2Response* default_instance_;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetAccountDetails : public ::google::protobuf::Message {
 public:
  CGCSystemMsg_GetAccountDetails();
  virtual ~CGCSystemMsg_GetAccountDetails();

  CGCSystemMsg_GetAccountDetails(const CGCSystemMsg_GetAccountDetails& from);

  inline CGCSystemMsg_GetAccountDetails& operator=(const CGCSystemMsg_GetAccountDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCSystemMsg_GetAccountDetails& default_instance();

  void Swap(CGCSystemMsg_GetAccountDetails* other);

  // implements Message ----------------------------------------------

  CGCSystemMsg_GetAccountDetails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCSystemMsg_GetAccountDetails& from);
  void MergeFrom(const CGCSystemMsg_GetAccountDetails& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCSystemMsg_GetAccountDetails)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_appid();
  inline void clear_has_appid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCSystemMsg_GetAccountDetails* default_instance_;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetAccountDetails_Response : public ::google::protobuf::Message {
 public:
  CGCSystemMsg_GetAccountDetails_Response();
  virtual ~CGCSystemMsg_GetAccountDetails_Response();

  CGCSystemMsg_GetAccountDetails_Response(const CGCSystemMsg_GetAccountDetails_Response& from);

  inline CGCSystemMsg_GetAccountDetails_Response& operator=(const CGCSystemMsg_GetAccountDetails_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCSystemMsg_GetAccountDetails_Response& default_instance();

  void Swap(CGCSystemMsg_GetAccountDetails_Response* other);

  // implements Message ----------------------------------------------

  CGCSystemMsg_GetAccountDetails_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCSystemMsg_GetAccountDetails_Response& from);
  void MergeFrom(const CGCSystemMsg_GetAccountDetails_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult_deprecated = 1 [default = 2];
  inline bool has_eresult_deprecated() const;
  inline void clear_eresult_deprecated();
  static const int kEresultDeprecatedFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult_deprecated() const;
  inline void set_eresult_deprecated(::google::protobuf::uint32 value);

  // optional string account_name = 2;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 2;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  inline ::std::string* release_account_name();
  inline void set_allocated_account_name(::std::string* account_name);

  // optional string persona_name = 3;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 3;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // optional bool is_profile_public = 4;
  inline bool has_is_profile_public() const;
  inline void clear_is_profile_public();
  static const int kIsProfilePublicFieldNumber = 4;
  inline bool is_profile_public() const;
  inline void set_is_profile_public(bool value);

  // optional bool is_inventory_public = 5;
  inline bool has_is_inventory_public() const;
  inline void clear_is_inventory_public();
  static const int kIsInventoryPublicFieldNumber = 5;
  inline bool is_inventory_public() const;
  inline void set_is_inventory_public(bool value);

  // optional bool is_vac_banned = 7;
  inline bool has_is_vac_banned() const;
  inline void clear_is_vac_banned();
  static const int kIsVacBannedFieldNumber = 7;
  inline bool is_vac_banned() const;
  inline void set_is_vac_banned(bool value);

  // optional bool is_cyber_cafe = 8;
  inline bool has_is_cyber_cafe() const;
  inline void clear_is_cyber_cafe();
  static const int kIsCyberCafeFieldNumber = 8;
  inline bool is_cyber_cafe() const;
  inline void set_is_cyber_cafe(bool value);

  // optional bool is_school_account = 9;
  inline bool has_is_school_account() const;
  inline void clear_is_school_account();
  static const int kIsSchoolAccountFieldNumber = 9;
  inline bool is_school_account() const;
  inline void set_is_school_account(bool value);

  // optional bool is_limited = 10;
  inline bool has_is_limited() const;
  inline void clear_is_limited();
  static const int kIsLimitedFieldNumber = 10;
  inline bool is_limited() const;
  inline void set_is_limited(bool value);

  // optional bool is_subscribed = 11;
  inline bool has_is_subscribed() const;
  inline void clear_is_subscribed();
  static const int kIsSubscribedFieldNumber = 11;
  inline bool is_subscribed() const;
  inline void set_is_subscribed(bool value);

  // optional uint32 package = 12;
  inline bool has_package() const;
  inline void clear_package();
  static const int kPackageFieldNumber = 12;
  inline ::google::protobuf::uint32 package() const;
  inline void set_package(::google::protobuf::uint32 value);

  // optional bool is_free_trial_account = 13;
  inline bool has_is_free_trial_account() const;
  inline void clear_is_free_trial_account();
  static const int kIsFreeTrialAccountFieldNumber = 13;
  inline bool is_free_trial_account() const;
  inline void set_is_free_trial_account(bool value);

  // optional uint32 free_trial_expiration = 14;
  inline bool has_free_trial_expiration() const;
  inline void clear_free_trial_expiration();
  static const int kFreeTrialExpirationFieldNumber = 14;
  inline ::google::protobuf::uint32 free_trial_expiration() const;
  inline void set_free_trial_expiration(::google::protobuf::uint32 value);

  // optional bool is_low_violence = 15;
  inline bool has_is_low_violence() const;
  inline void clear_is_low_violence();
  static const int kIsLowViolenceFieldNumber = 15;
  inline bool is_low_violence() const;
  inline void set_is_low_violence(bool value);

  // optional bool is_account_locked_down = 16;
  inline bool has_is_account_locked_down() const;
  inline void clear_is_account_locked_down();
  static const int kIsAccountLockedDownFieldNumber = 16;
  inline bool is_account_locked_down() const;
  inline void set_is_account_locked_down(bool value);

  // optional bool is_community_banned = 17;
  inline bool has_is_community_banned() const;
  inline void clear_is_community_banned();
  static const int kIsCommunityBannedFieldNumber = 17;
  inline bool is_community_banned() const;
  inline void set_is_community_banned(bool value);

  // optional bool is_trade_banned = 18;
  inline bool has_is_trade_banned() const;
  inline void clear_is_trade_banned();
  static const int kIsTradeBannedFieldNumber = 18;
  inline bool is_trade_banned() const;
  inline void set_is_trade_banned(bool value);

  // optional uint32 trade_ban_expiration = 19;
  inline bool has_trade_ban_expiration() const;
  inline void clear_trade_ban_expiration();
  static const int kTradeBanExpirationFieldNumber = 19;
  inline ::google::protobuf::uint32 trade_ban_expiration() const;
  inline void set_trade_ban_expiration(::google::protobuf::uint32 value);

  // optional uint32 accountid = 20;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 20;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 suspension_end_time = 21;
  inline bool has_suspension_end_time() const;
  inline void clear_suspension_end_time();
  static const int kSuspensionEndTimeFieldNumber = 21;
  inline ::google::protobuf::uint32 suspension_end_time() const;
  inline void set_suspension_end_time(::google::protobuf::uint32 value);

  // optional string currency = 22;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 22;
  inline const ::std::string& currency() const;
  inline void set_currency(const ::std::string& value);
  inline void set_currency(const char* value);
  inline void set_currency(const char* value, size_t size);
  inline ::std::string* mutable_currency();
  inline ::std::string* release_currency();
  inline void set_allocated_currency(::std::string* currency);

  // optional uint32 steam_level = 23;
  inline bool has_steam_level() const;
  inline void clear_steam_level();
  static const int kSteamLevelFieldNumber = 23;
  inline ::google::protobuf::uint32 steam_level() const;
  inline void set_steam_level(::google::protobuf::uint32 value);

  // optional uint32 friend_count = 24;
  inline bool has_friend_count() const;
  inline void clear_friend_count();
  static const int kFriendCountFieldNumber = 24;
  inline ::google::protobuf::uint32 friend_count() const;
  inline void set_friend_count(::google::protobuf::uint32 value);

  // optional uint32 account_creation_time = 25;
  inline bool has_account_creation_time() const;
  inline void clear_account_creation_time();
  static const int kAccountCreationTimeFieldNumber = 25;
  inline ::google::protobuf::uint32 account_creation_time() const;
  inline void set_account_creation_time(::google::protobuf::uint32 value);

  // optional bool is_steamguard_enabled = 27;
  inline bool has_is_steamguard_enabled() const;
  inline void clear_is_steamguard_enabled();
  static const int kIsSteamguardEnabledFieldNumber = 27;
  inline bool is_steamguard_enabled() const;
  inline void set_is_steamguard_enabled(bool value);

  // optional bool is_phone_verified = 28;
  inline bool has_is_phone_verified() const;
  inline void clear_is_phone_verified();
  static const int kIsPhoneVerifiedFieldNumber = 28;
  inline bool is_phone_verified() const;
  inline void set_is_phone_verified(bool value);

  // optional bool is_two_factor_auth_enabled = 29;
  inline bool has_is_two_factor_auth_enabled() const;
  inline void clear_is_two_factor_auth_enabled();
  static const int kIsTwoFactorAuthEnabledFieldNumber = 29;
  inline bool is_two_factor_auth_enabled() const;
  inline void set_is_two_factor_auth_enabled(bool value);

  // optional uint32 two_factor_enabled_time = 30;
  inline bool has_two_factor_enabled_time() const;
  inline void clear_two_factor_enabled_time();
  static const int kTwoFactorEnabledTimeFieldNumber = 30;
  inline ::google::protobuf::uint32 two_factor_enabled_time() const;
  inline void set_two_factor_enabled_time(::google::protobuf::uint32 value);

  // optional uint32 phone_verification_time = 31;
  inline bool has_phone_verification_time() const;
  inline void clear_phone_verification_time();
  static const int kPhoneVerificationTimeFieldNumber = 31;
  inline ::google::protobuf::uint32 phone_verification_time() const;
  inline void set_phone_verification_time(::google::protobuf::uint32 value);

  // optional uint64 phone_id = 33;
  inline bool has_phone_id() const;
  inline void clear_phone_id();
  static const int kPhoneIdFieldNumber = 33;
  inline ::google::protobuf::uint64 phone_id() const;
  inline void set_phone_id(::google::protobuf::uint64 value);

  // optional bool is_phone_identifying = 34;
  inline bool has_is_phone_identifying() const;
  inline void clear_is_phone_identifying();
  static const int kIsPhoneIdentifyingFieldNumber = 34;
  inline bool is_phone_identifying() const;
  inline void set_is_phone_identifying(bool value);

  // @@protoc_insertion_point(class_scope:CGCSystemMsg_GetAccountDetails_Response)
 private:
  inline void set_has_eresult_deprecated();
  inline void clear_has_eresult_deprecated();
  inline void set_has_account_name();
  inline void clear_has_account_name();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();
  inline void set_has_is_profile_public();
  inline void clear_has_is_profile_public();
  inline void set_has_is_inventory_public();
  inline void clear_has_is_inventory_public();
  inline void set_has_is_vac_banned();
  inline void clear_has_is_vac_banned();
  inline void set_has_is_cyber_cafe();
  inline void clear_has_is_cyber_cafe();
  inline void set_has_is_school_account();
  inline void clear_has_is_school_account();
  inline void set_has_is_limited();
  inline void clear_has_is_limited();
  inline void set_has_is_subscribed();
  inline void clear_has_is_subscribed();
  inline void set_has_package();
  inline void clear_has_package();
  inline void set_has_is_free_trial_account();
  inline void clear_has_is_free_trial_account();
  inline void set_has_free_trial_expiration();
  inline void clear_has_free_trial_expiration();
  inline void set_has_is_low_violence();
  inline void clear_has_is_low_violence();
  inline void set_has_is_account_locked_down();
  inline void clear_has_is_account_locked_down();
  inline void set_has_is_community_banned();
  inline void clear_has_is_community_banned();
  inline void set_has_is_trade_banned();
  inline void clear_has_is_trade_banned();
  inline void set_has_trade_ban_expiration();
  inline void clear_has_trade_ban_expiration();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_suspension_end_time();
  inline void clear_has_suspension_end_time();
  inline void set_has_currency();
  inline void clear_has_currency();
  inline void set_has_steam_level();
  inline void clear_has_steam_level();
  inline void set_has_friend_count();
  inline void clear_has_friend_count();
  inline void set_has_account_creation_time();
  inline void clear_has_account_creation_time();
  inline void set_has_is_steamguard_enabled();
  inline void clear_has_is_steamguard_enabled();
  inline void set_has_is_phone_verified();
  inline void clear_has_is_phone_verified();
  inline void set_has_is_two_factor_auth_enabled();
  inline void clear_has_is_two_factor_auth_enabled();
  inline void set_has_two_factor_enabled_time();
  inline void clear_has_two_factor_enabled_time();
  inline void set_has_phone_verification_time();
  inline void clear_has_phone_verification_time();
  inline void set_has_phone_id();
  inline void clear_has_phone_id();
  inline void set_has_is_phone_identifying();
  inline void clear_has_is_phone_identifying();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_name_;
  ::std::string* persona_name_;
  ::google::protobuf::uint32 eresult_deprecated_;
  bool is_profile_public_;
  bool is_inventory_public_;
  bool is_vac_banned_;
  bool is_cyber_cafe_;
  bool is_school_account_;
  bool is_limited_;
  bool is_subscribed_;
  bool is_free_trial_account_;
  ::google::protobuf::uint32 package_;
  ::google::protobuf::uint32 free_trial_expiration_;
  bool is_low_violence_;
  bool is_account_locked_down_;
  bool is_community_banned_;
  bool is_trade_banned_;
  ::google::protobuf::uint32 trade_ban_expiration_;
  ::google::protobuf::uint32 accountid_;
  ::std::string* currency_;
  ::google::protobuf::uint32 suspension_end_time_;
  ::google::protobuf::uint32 steam_level_;
  ::google::protobuf::uint32 friend_count_;
  ::google::protobuf::uint32 account_creation_time_;
  bool is_steamguard_enabled_;
  bool is_phone_verified_;
  bool is_two_factor_auth_enabled_;
  bool is_phone_identifying_;
  ::google::protobuf::uint32 two_factor_enabled_time_;
  ::google::protobuf::uint64 phone_id_;
  ::google::protobuf::uint32 phone_verification_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(31 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCSystemMsg_GetAccountDetails_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetPersonaNames : public ::google::protobuf::Message {
 public:
  CMsgGCGetPersonaNames();
  virtual ~CMsgGCGetPersonaNames();

  CMsgGCGetPersonaNames(const CMsgGCGetPersonaNames& from);

  inline CMsgGCGetPersonaNames& operator=(const CMsgGCGetPersonaNames& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetPersonaNames& default_instance();

  void Swap(CMsgGCGetPersonaNames* other);

  // implements Message ----------------------------------------------

  CMsgGCGetPersonaNames* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetPersonaNames& from);
  void MergeFrom(const CMsgGCGetPersonaNames& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steamids = 1;
  inline int steamids_size() const;
  inline void clear_steamids();
  static const int kSteamidsFieldNumber = 1;
  inline ::google::protobuf::uint64 steamids(int index) const;
  inline void set_steamids(int index, ::google::protobuf::uint64 value);
  inline void add_steamids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamids();

  // @@protoc_insertion_point(class_scope:CMsgGCGetPersonaNames)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetPersonaNames* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetPersonaNames_Response_PersonaName : public ::google::protobuf::Message {
 public:
  CMsgGCGetPersonaNames_Response_PersonaName();
  virtual ~CMsgGCGetPersonaNames_Response_PersonaName();

  CMsgGCGetPersonaNames_Response_PersonaName(const CMsgGCGetPersonaNames_Response_PersonaName& from);

  inline CMsgGCGetPersonaNames_Response_PersonaName& operator=(const CMsgGCGetPersonaNames_Response_PersonaName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetPersonaNames_Response_PersonaName& default_instance();

  void Swap(CMsgGCGetPersonaNames_Response_PersonaName* other);

  // implements Message ----------------------------------------------

  CMsgGCGetPersonaNames_Response_PersonaName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from);
  void MergeFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // @@protoc_insertion_point(class_scope:CMsgGCGetPersonaNames_Response.PersonaName)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::std::string* persona_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetPersonaNames_Response_PersonaName* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetPersonaNames_Response : public ::google::protobuf::Message {
 public:
  CMsgGCGetPersonaNames_Response();
  virtual ~CMsgGCGetPersonaNames_Response();

  CMsgGCGetPersonaNames_Response(const CMsgGCGetPersonaNames_Response& from);

  inline CMsgGCGetPersonaNames_Response& operator=(const CMsgGCGetPersonaNames_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetPersonaNames_Response& default_instance();

  void Swap(CMsgGCGetPersonaNames_Response* other);

  // implements Message ----------------------------------------------

  CMsgGCGetPersonaNames_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetPersonaNames_Response& from);
  void MergeFrom(const CMsgGCGetPersonaNames_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCGetPersonaNames_Response_PersonaName PersonaName;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  inline int succeeded_lookups_size() const;
  inline void clear_succeeded_lookups();
  static const int kSucceededLookupsFieldNumber = 1;
  inline const ::CMsgGCGetPersonaNames_Response_PersonaName& succeeded_lookups(int index) const;
  inline ::CMsgGCGetPersonaNames_Response_PersonaName* mutable_succeeded_lookups(int index);
  inline ::CMsgGCGetPersonaNames_Response_PersonaName* add_succeeded_lookups();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCGetPersonaNames_Response_PersonaName >&
      succeeded_lookups() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCGetPersonaNames_Response_PersonaName >*
      mutable_succeeded_lookups();

  // repeated fixed64 failed_lookup_steamids = 2;
  inline int failed_lookup_steamids_size() const;
  inline void clear_failed_lookup_steamids();
  static const int kFailedLookupSteamidsFieldNumber = 2;
  inline ::google::protobuf::uint64 failed_lookup_steamids(int index) const;
  inline void set_failed_lookup_steamids(int index, ::google::protobuf::uint64 value);
  inline void add_failed_lookup_steamids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      failed_lookup_steamids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_failed_lookup_steamids();

  // @@protoc_insertion_point(class_scope:CMsgGCGetPersonaNames_Response)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgGCGetPersonaNames_Response_PersonaName > succeeded_lookups_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > failed_lookup_steamids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetPersonaNames_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCCheckFriendship : public ::google::protobuf::Message {
 public:
  CMsgGCCheckFriendship();
  virtual ~CMsgGCCheckFriendship();

  CMsgGCCheckFriendship(const CMsgGCCheckFriendship& from);

  inline CMsgGCCheckFriendship& operator=(const CMsgGCCheckFriendship& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCCheckFriendship& default_instance();

  void Swap(CMsgGCCheckFriendship* other);

  // implements Message ----------------------------------------------

  CMsgGCCheckFriendship* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCCheckFriendship& from);
  void MergeFrom(const CMsgGCCheckFriendship& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid_left = 1;
  inline bool has_steamid_left() const;
  inline void clear_steamid_left();
  static const int kSteamidLeftFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid_left() const;
  inline void set_steamid_left(::google::protobuf::uint64 value);

  // optional fixed64 steamid_right = 2;
  inline bool has_steamid_right() const;
  inline void clear_steamid_right();
  static const int kSteamidRightFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid_right() const;
  inline void set_steamid_right(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCCheckFriendship)
 private:
  inline void set_has_steamid_left();
  inline void clear_has_steamid_left();
  inline void set_has_steamid_right();
  inline void clear_has_steamid_right();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_left_;
  ::google::protobuf::uint64 steamid_right_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCCheckFriendship* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCCheckFriendship_Response : public ::google::protobuf::Message {
 public:
  CMsgGCCheckFriendship_Response();
  virtual ~CMsgGCCheckFriendship_Response();

  CMsgGCCheckFriendship_Response(const CMsgGCCheckFriendship_Response& from);

  inline CMsgGCCheckFriendship_Response& operator=(const CMsgGCCheckFriendship_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCCheckFriendship_Response& default_instance();

  void Swap(CMsgGCCheckFriendship_Response* other);

  // implements Message ----------------------------------------------

  CMsgGCCheckFriendship_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCCheckFriendship_Response& from);
  void MergeFrom(const CMsgGCCheckFriendship_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // optional bool found_friendship = 2;
  inline bool has_found_friendship() const;
  inline void clear_found_friendship();
  static const int kFoundFriendshipFieldNumber = 2;
  inline bool found_friendship() const;
  inline void set_found_friendship(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCCheckFriendship_Response)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_found_friendship();
  inline void clear_has_found_friendship();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool success_;
  bool found_friendship_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCCheckFriendship_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetDirectory_SubGC : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetDirectory_SubGC();
  virtual ~CMsgGCMsgMasterSetDirectory_SubGC();

  CMsgGCMsgMasterSetDirectory_SubGC(const CMsgGCMsgMasterSetDirectory_SubGC& from);

  inline CMsgGCMsgMasterSetDirectory_SubGC& operator=(const CMsgGCMsgMasterSetDirectory_SubGC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetDirectory_SubGC& default_instance();

  void Swap(CMsgGCMsgMasterSetDirectory_SubGC* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetDirectory_SubGC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from);
  void MergeFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dir_index = 1;
  inline bool has_dir_index() const;
  inline void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 dir_index() const;
  inline void set_dir_index(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string box = 3;
  inline bool has_box() const;
  inline void clear_box();
  static const int kBoxFieldNumber = 3;
  inline const ::std::string& box() const;
  inline void set_box(const ::std::string& value);
  inline void set_box(const char* value);
  inline void set_box(const char* value, size_t size);
  inline ::std::string* mutable_box();
  inline ::std::string* release_box();
  inline void set_allocated_box(::std::string* box);

  // optional string command_line = 4;
  inline bool has_command_line() const;
  inline void clear_command_line();
  static const int kCommandLineFieldNumber = 4;
  inline const ::std::string& command_line() const;
  inline void set_command_line(const ::std::string& value);
  inline void set_command_line(const char* value);
  inline void set_command_line(const char* value, size_t size);
  inline ::std::string* mutable_command_line();
  inline ::std::string* release_command_line();
  inline void set_allocated_command_line(::std::string* command_line);

  // optional string gc_binary = 5;
  inline bool has_gc_binary() const;
  inline void clear_gc_binary();
  static const int kGcBinaryFieldNumber = 5;
  inline const ::std::string& gc_binary() const;
  inline void set_gc_binary(const ::std::string& value);
  inline void set_gc_binary(const char* value);
  inline void set_gc_binary(const char* value, size_t size);
  inline ::std::string* mutable_gc_binary();
  inline ::std::string* release_gc_binary();
  inline void set_allocated_gc_binary(::std::string* gc_binary);

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetDirectory.SubGC)
 private:
  inline void set_has_dir_index();
  inline void clear_has_dir_index();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_box();
  inline void clear_has_box();
  inline void set_has_command_line();
  inline void clear_has_command_line();
  inline void set_has_gc_binary();
  inline void clear_has_gc_binary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* box_;
  ::std::string* command_line_;
  ::std::string* gc_binary_;
  ::google::protobuf::uint32 dir_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetDirectory_SubGC* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetDirectory : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetDirectory();
  virtual ~CMsgGCMsgMasterSetDirectory();

  CMsgGCMsgMasterSetDirectory(const CMsgGCMsgMasterSetDirectory& from);

  inline CMsgGCMsgMasterSetDirectory& operator=(const CMsgGCMsgMasterSetDirectory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetDirectory& default_instance();

  void Swap(CMsgGCMsgMasterSetDirectory* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetDirectory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetDirectory& from);
  void MergeFrom(const CMsgGCMsgMasterSetDirectory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCMsgMasterSetDirectory_SubGC SubGC;

  // accessors -------------------------------------------------------

  // optional uint32 master_dir_index = 1;
  inline bool has_master_dir_index() const;
  inline void clear_master_dir_index();
  static const int kMasterDirIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 master_dir_index() const;
  inline void set_master_dir_index(::google::protobuf::uint32 value);

  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  inline int dir_size() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 2;
  inline const ::CMsgGCMsgMasterSetDirectory_SubGC& dir(int index) const;
  inline ::CMsgGCMsgMasterSetDirectory_SubGC* mutable_dir(int index);
  inline ::CMsgGCMsgMasterSetDirectory_SubGC* add_dir();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetDirectory_SubGC >&
      dir() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetDirectory_SubGC >*
      mutable_dir();

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetDirectory)
 private:
  inline void set_has_master_dir_index();
  inline void clear_has_master_dir_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetDirectory_SubGC > dir_;
  ::google::protobuf::uint32 master_dir_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetDirectory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetDirectory_Response : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetDirectory_Response();
  virtual ~CMsgGCMsgMasterSetDirectory_Response();

  CMsgGCMsgMasterSetDirectory_Response(const CMsgGCMsgMasterSetDirectory_Response& from);

  inline CMsgGCMsgMasterSetDirectory_Response& operator=(const CMsgGCMsgMasterSetDirectory_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetDirectory_Response& default_instance();

  void Swap(CMsgGCMsgMasterSetDirectory_Response* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetDirectory_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetDirectory_Response& from);
  void MergeFrom(const CMsgGCMsgMasterSetDirectory_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetDirectory_Response)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetDirectory_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgWebAPIJobRequestForwardResponse : public ::google::protobuf::Message {
 public:
  CMsgGCMsgWebAPIJobRequestForwardResponse();
  virtual ~CMsgGCMsgWebAPIJobRequestForwardResponse();

  CMsgGCMsgWebAPIJobRequestForwardResponse(const CMsgGCMsgWebAPIJobRequestForwardResponse& from);

  inline CMsgGCMsgWebAPIJobRequestForwardResponse& operator=(const CMsgGCMsgWebAPIJobRequestForwardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgWebAPIJobRequestForwardResponse& default_instance();

  void Swap(CMsgGCMsgWebAPIJobRequestForwardResponse* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgWebAPIJobRequestForwardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from);
  void MergeFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dir_index = 1;
  inline bool has_dir_index() const;
  inline void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 dir_index() const;
  inline void set_dir_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCMsgWebAPIJobRequestForwardResponse)
 private:
  inline void set_has_dir_index();
  inline void clear_has_dir_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dir_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgWebAPIJobRequestForwardResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetPurchaseTrust_Request : public ::google::protobuf::Message {
 public:
  CGCSystemMsg_GetPurchaseTrust_Request();
  virtual ~CGCSystemMsg_GetPurchaseTrust_Request();

  CGCSystemMsg_GetPurchaseTrust_Request(const CGCSystemMsg_GetPurchaseTrust_Request& from);

  inline CGCSystemMsg_GetPurchaseTrust_Request& operator=(const CGCSystemMsg_GetPurchaseTrust_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCSystemMsg_GetPurchaseTrust_Request& default_instance();

  void Swap(CGCSystemMsg_GetPurchaseTrust_Request* other);

  // implements Message ----------------------------------------------

  CGCSystemMsg_GetPurchaseTrust_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from);
  void MergeFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CGCSystemMsg_GetPurchaseTrust_Request)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCSystemMsg_GetPurchaseTrust_Request* default_instance_;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetPurchaseTrust_Response : public ::google::protobuf::Message {
 public:
  CGCSystemMsg_GetPurchaseTrust_Response();
  virtual ~CGCSystemMsg_GetPurchaseTrust_Response();

  CGCSystemMsg_GetPurchaseTrust_Response(const CGCSystemMsg_GetPurchaseTrust_Response& from);

  inline CGCSystemMsg_GetPurchaseTrust_Response& operator=(const CGCSystemMsg_GetPurchaseTrust_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCSystemMsg_GetPurchaseTrust_Response& default_instance();

  void Swap(CGCSystemMsg_GetPurchaseTrust_Response* other);

  // implements Message ----------------------------------------------

  CGCSystemMsg_GetPurchaseTrust_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from);
  void MergeFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool has_prior_purchase_history = 1;
  inline bool has_has_prior_purchase_history() const;
  inline void clear_has_prior_purchase_history();
  static const int kHasPriorPurchaseHistoryFieldNumber = 1;
  inline bool has_prior_purchase_history() const;
  inline void set_has_prior_purchase_history(bool value);

  // optional bool has_no_recent_password_resets = 2;
  inline bool has_has_no_recent_password_resets() const;
  inline void clear_has_no_recent_password_resets();
  static const int kHasNoRecentPasswordResetsFieldNumber = 2;
  inline bool has_no_recent_password_resets() const;
  inline void set_has_no_recent_password_resets(bool value);

  // optional bool is_wallet_cash_trusted = 3;
  inline bool has_is_wallet_cash_trusted() const;
  inline void clear_is_wallet_cash_trusted();
  static const int kIsWalletCashTrustedFieldNumber = 3;
  inline bool is_wallet_cash_trusted() const;
  inline void set_is_wallet_cash_trusted(bool value);

  // optional uint32 time_all_trusted = 4;
  inline bool has_time_all_trusted() const;
  inline void clear_time_all_trusted();
  static const int kTimeAllTrustedFieldNumber = 4;
  inline ::google::protobuf::uint32 time_all_trusted() const;
  inline void set_time_all_trusted(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCSystemMsg_GetPurchaseTrust_Response)
 private:
  inline void set_has_has_prior_purchase_history();
  inline void clear_has_has_prior_purchase_history();
  inline void set_has_has_no_recent_password_resets();
  inline void clear_has_has_no_recent_password_resets();
  inline void set_has_is_wallet_cash_trusted();
  inline void clear_has_is_wallet_cash_trusted();
  inline void set_has_time_all_trusted();
  inline void clear_has_time_all_trusted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool has_prior_purchase_history_;
  bool has_no_recent_password_resets_;
  bool is_wallet_cash_trusted_;
  ::google::protobuf::uint32 time_all_trusted_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CGCSystemMsg_GetPurchaseTrust_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCHAccountVacStatusChange : public ::google::protobuf::Message {
 public:
  CMsgGCHAccountVacStatusChange();
  virtual ~CMsgGCHAccountVacStatusChange();

  CMsgGCHAccountVacStatusChange(const CMsgGCHAccountVacStatusChange& from);

  inline CMsgGCHAccountVacStatusChange& operator=(const CMsgGCHAccountVacStatusChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHAccountVacStatusChange& default_instance();

  void Swap(CMsgGCHAccountVacStatusChange* other);

  // implements Message ----------------------------------------------

  CMsgGCHAccountVacStatusChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCHAccountVacStatusChange& from);
  void MergeFrom(const CMsgGCHAccountVacStatusChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 app_id = 2;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 rtime_vacban_starts = 3;
  inline bool has_rtime_vacban_starts() const;
  inline void clear_rtime_vacban_starts();
  static const int kRtimeVacbanStartsFieldNumber = 3;
  inline ::google::protobuf::uint32 rtime_vacban_starts() const;
  inline void set_rtime_vacban_starts(::google::protobuf::uint32 value);

  // optional bool is_banned_now = 4;
  inline bool has_is_banned_now() const;
  inline void clear_is_banned_now();
  static const int kIsBannedNowFieldNumber = 4;
  inline bool is_banned_now() const;
  inline void set_is_banned_now(bool value);

  // optional bool is_banned_future = 5;
  inline bool has_is_banned_future() const;
  inline void clear_is_banned_future();
  static const int kIsBannedFutureFieldNumber = 5;
  inline bool is_banned_future() const;
  inline void set_is_banned_future(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCHAccountVacStatusChange)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_rtime_vacban_starts();
  inline void clear_has_rtime_vacban_starts();
  inline void set_has_is_banned_now();
  inline void clear_has_is_banned_now();
  inline void set_has_is_banned_future();
  inline void clear_has_is_banned_future();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 rtime_vacban_starts_;
  bool is_banned_now_;
  bool is_banned_future_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCHAccountVacStatusChange* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetPartnerAccountLink : public ::google::protobuf::Message {
 public:
  CMsgGCGetPartnerAccountLink();
  virtual ~CMsgGCGetPartnerAccountLink();

  CMsgGCGetPartnerAccountLink(const CMsgGCGetPartnerAccountLink& from);

  inline CMsgGCGetPartnerAccountLink& operator=(const CMsgGCGetPartnerAccountLink& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetPartnerAccountLink& default_instance();

  void Swap(CMsgGCGetPartnerAccountLink* other);

  // implements Message ----------------------------------------------

  CMsgGCGetPartnerAccountLink* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetPartnerAccountLink& from);
  void MergeFrom(const CMsgGCGetPartnerAccountLink& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCGetPartnerAccountLink)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetPartnerAccountLink* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCGetPartnerAccountLink_Response : public ::google::protobuf::Message {
 public:
  CMsgGCGetPartnerAccountLink_Response();
  virtual ~CMsgGCGetPartnerAccountLink_Response();

  CMsgGCGetPartnerAccountLink_Response(const CMsgGCGetPartnerAccountLink_Response& from);

  inline CMsgGCGetPartnerAccountLink_Response& operator=(const CMsgGCGetPartnerAccountLink_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetPartnerAccountLink_Response& default_instance();

  void Swap(CMsgGCGetPartnerAccountLink_Response* other);

  // implements Message ----------------------------------------------

  CMsgGCGetPartnerAccountLink_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCGetPartnerAccountLink_Response& from);
  void MergeFrom(const CMsgGCGetPartnerAccountLink_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pwid = 1;
  inline bool has_pwid() const;
  inline void clear_pwid();
  static const int kPwidFieldNumber = 1;
  inline ::google::protobuf::uint32 pwid() const;
  inline void set_pwid(::google::protobuf::uint32 value);

  // optional uint32 nexonid = 2;
  inline bool has_nexonid() const;
  inline void clear_nexonid();
  static const int kNexonidFieldNumber = 2;
  inline ::google::protobuf::uint32 nexonid() const;
  inline void set_nexonid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCGetPartnerAccountLink_Response)
 private:
  inline void set_has_pwid();
  inline void clear_has_pwid();
  inline void set_has_nexonid();
  inline void clear_has_nexonid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pwid_;
  ::google::protobuf::uint32 nexonid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCGetPartnerAccountLink_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCRoutingInfo : public ::google::protobuf::Message {
 public:
  CMsgGCRoutingInfo();
  virtual ~CMsgGCRoutingInfo();

  CMsgGCRoutingInfo(const CMsgGCRoutingInfo& from);

  inline CMsgGCRoutingInfo& operator=(const CMsgGCRoutingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCRoutingInfo& default_instance();

  void Swap(CMsgGCRoutingInfo* other);

  // implements Message ----------------------------------------------

  CMsgGCRoutingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCRoutingInfo& from);
  void MergeFrom(const CMsgGCRoutingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCRoutingInfo_RoutingMethod RoutingMethod;
  static const RoutingMethod RANDOM = CMsgGCRoutingInfo_RoutingMethod_RANDOM;
  static const RoutingMethod DISCARD = CMsgGCRoutingInfo_RoutingMethod_DISCARD;
  static const RoutingMethod CLIENT_STEAMID = CMsgGCRoutingInfo_RoutingMethod_CLIENT_STEAMID;
  static const RoutingMethod PROTOBUF_FIELD_UINT64 = CMsgGCRoutingInfo_RoutingMethod_PROTOBUF_FIELD_UINT64;
  static const RoutingMethod WEBAPI_PARAM_UINT64 = CMsgGCRoutingInfo_RoutingMethod_WEBAPI_PARAM_UINT64;
  static inline bool RoutingMethod_IsValid(int value) {
    return CMsgGCRoutingInfo_RoutingMethod_IsValid(value);
  }
  static const RoutingMethod RoutingMethod_MIN =
    CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MIN;
  static const RoutingMethod RoutingMethod_MAX =
    CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_MAX;
  static const int RoutingMethod_ARRAYSIZE =
    CMsgGCRoutingInfo_RoutingMethod_RoutingMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RoutingMethod_descriptor() {
    return CMsgGCRoutingInfo_RoutingMethod_descriptor();
  }
  static inline const ::std::string& RoutingMethod_Name(RoutingMethod value) {
    return CMsgGCRoutingInfo_RoutingMethod_Name(value);
  }
  static inline bool RoutingMethod_Parse(const ::std::string& name,
      RoutingMethod* value) {
    return CMsgGCRoutingInfo_RoutingMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 dir_index = 1;
  inline int dir_index_size() const;
  inline void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 dir_index(int index) const;
  inline void set_dir_index(int index, ::google::protobuf::uint32 value);
  inline void add_dir_index(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dir_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dir_index();

  // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
  inline bool has_method() const;
  inline void clear_method();
  static const int kMethodFieldNumber = 2;
  inline ::CMsgGCRoutingInfo_RoutingMethod method() const;
  inline void set_method(::CMsgGCRoutingInfo_RoutingMethod value);

  // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
  inline bool has_fallback() const;
  inline void clear_fallback();
  static const int kFallbackFieldNumber = 3;
  inline ::CMsgGCRoutingInfo_RoutingMethod fallback() const;
  inline void set_fallback(::CMsgGCRoutingInfo_RoutingMethod value);

  // optional uint32 protobuf_field = 4;
  inline bool has_protobuf_field() const;
  inline void clear_protobuf_field();
  static const int kProtobufFieldFieldNumber = 4;
  inline ::google::protobuf::uint32 protobuf_field() const;
  inline void set_protobuf_field(::google::protobuf::uint32 value);

  // optional string webapi_param = 5;
  inline bool has_webapi_param() const;
  inline void clear_webapi_param();
  static const int kWebapiParamFieldNumber = 5;
  inline const ::std::string& webapi_param() const;
  inline void set_webapi_param(const ::std::string& value);
  inline void set_webapi_param(const char* value);
  inline void set_webapi_param(const char* value, size_t size);
  inline ::std::string* mutable_webapi_param();
  inline ::std::string* release_webapi_param();
  inline void set_allocated_webapi_param(::std::string* webapi_param);

  // @@protoc_insertion_point(class_scope:CMsgGCRoutingInfo)
 private:
  inline void set_has_method();
  inline void clear_has_method();
  inline void set_has_fallback();
  inline void clear_has_fallback();
  inline void set_has_protobuf_field();
  inline void clear_has_protobuf_field();
  inline void set_has_webapi_param();
  inline void clear_has_webapi_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dir_index_;
  int method_;
  int fallback_;
  ::std::string* webapi_param_;
  ::google::protobuf::uint32 protobuf_field_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCRoutingInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetWebAPIRouting_Entry : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetWebAPIRouting_Entry();
  virtual ~CMsgGCMsgMasterSetWebAPIRouting_Entry();

  CMsgGCMsgMasterSetWebAPIRouting_Entry(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from);

  inline CMsgGCMsgMasterSetWebAPIRouting_Entry& operator=(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetWebAPIRouting_Entry& default_instance();

  void Swap(CMsgGCMsgMasterSetWebAPIRouting_Entry* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetWebAPIRouting_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from);
  void MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string interface_name = 1;
  inline bool has_interface_name() const;
  inline void clear_interface_name();
  static const int kInterfaceNameFieldNumber = 1;
  inline const ::std::string& interface_name() const;
  inline void set_interface_name(const ::std::string& value);
  inline void set_interface_name(const char* value);
  inline void set_interface_name(const char* value, size_t size);
  inline ::std::string* mutable_interface_name();
  inline ::std::string* release_interface_name();
  inline void set_allocated_interface_name(::std::string* interface_name);

  // optional string method_name = 2;
  inline bool has_method_name() const;
  inline void clear_method_name();
  static const int kMethodNameFieldNumber = 2;
  inline const ::std::string& method_name() const;
  inline void set_method_name(const ::std::string& value);
  inline void set_method_name(const char* value);
  inline void set_method_name(const char* value, size_t size);
  inline ::std::string* mutable_method_name();
  inline ::std::string* release_method_name();
  inline void set_allocated_method_name(::std::string* method_name);

  // optional .CMsgGCRoutingInfo routing = 3;
  inline bool has_routing() const;
  inline void clear_routing();
  static const int kRoutingFieldNumber = 3;
  inline const ::CMsgGCRoutingInfo& routing() const;
  inline ::CMsgGCRoutingInfo* mutable_routing();
  inline ::CMsgGCRoutingInfo* release_routing();
  inline void set_allocated_routing(::CMsgGCRoutingInfo* routing);

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetWebAPIRouting.Entry)
 private:
  inline void set_has_interface_name();
  inline void clear_has_interface_name();
  inline void set_has_method_name();
  inline void clear_has_method_name();
  inline void set_has_routing();
  inline void clear_has_routing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* interface_name_;
  ::std::string* method_name_;
  ::CMsgGCRoutingInfo* routing_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetWebAPIRouting_Entry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetWebAPIRouting : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetWebAPIRouting();
  virtual ~CMsgGCMsgMasterSetWebAPIRouting();

  CMsgGCMsgMasterSetWebAPIRouting(const CMsgGCMsgMasterSetWebAPIRouting& from);

  inline CMsgGCMsgMasterSetWebAPIRouting& operator=(const CMsgGCMsgMasterSetWebAPIRouting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetWebAPIRouting& default_instance();

  void Swap(CMsgGCMsgMasterSetWebAPIRouting* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetWebAPIRouting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting& from);
  void MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCMsgMasterSetWebAPIRouting_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 1;
  inline const ::CMsgGCMsgMasterSetWebAPIRouting_Entry& entries(int index) const;
  inline ::CMsgGCMsgMasterSetWebAPIRouting_Entry* mutable_entries(int index);
  inline ::CMsgGCMsgMasterSetWebAPIRouting_Entry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetWebAPIRouting_Entry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetWebAPIRouting_Entry >*
      mutable_entries();

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetWebAPIRouting)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetWebAPIRouting_Entry > entries_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetWebAPIRouting* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetClientMsgRouting_Entry : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetClientMsgRouting_Entry();
  virtual ~CMsgGCMsgMasterSetClientMsgRouting_Entry();

  CMsgGCMsgMasterSetClientMsgRouting_Entry(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from);

  inline CMsgGCMsgMasterSetClientMsgRouting_Entry& operator=(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetClientMsgRouting_Entry& default_instance();

  void Swap(CMsgGCMsgMasterSetClientMsgRouting_Entry* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetClientMsgRouting_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from);
  void MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 msg_type() const;
  inline void set_msg_type(::google::protobuf::uint32 value);

  // optional .CMsgGCRoutingInfo routing = 2;
  inline bool has_routing() const;
  inline void clear_routing();
  static const int kRoutingFieldNumber = 2;
  inline const ::CMsgGCRoutingInfo& routing() const;
  inline ::CMsgGCRoutingInfo* mutable_routing();
  inline ::CMsgGCRoutingInfo* release_routing();
  inline void set_allocated_routing(::CMsgGCRoutingInfo* routing);

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetClientMsgRouting.Entry)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_routing();
  inline void clear_has_routing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CMsgGCRoutingInfo* routing_;
  ::google::protobuf::uint32 msg_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetClientMsgRouting_Entry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetClientMsgRouting : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetClientMsgRouting();
  virtual ~CMsgGCMsgMasterSetClientMsgRouting();

  CMsgGCMsgMasterSetClientMsgRouting(const CMsgGCMsgMasterSetClientMsgRouting& from);

  inline CMsgGCMsgMasterSetClientMsgRouting& operator=(const CMsgGCMsgMasterSetClientMsgRouting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetClientMsgRouting& default_instance();

  void Swap(CMsgGCMsgMasterSetClientMsgRouting* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetClientMsgRouting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting& from);
  void MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCMsgMasterSetClientMsgRouting_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 1;
  inline const ::CMsgGCMsgMasterSetClientMsgRouting_Entry& entries(int index) const;
  inline ::CMsgGCMsgMasterSetClientMsgRouting_Entry* mutable_entries(int index);
  inline ::CMsgGCMsgMasterSetClientMsgRouting_Entry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetClientMsgRouting_Entry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetClientMsgRouting_Entry >*
      mutable_entries();

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetClientMsgRouting)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetClientMsgRouting_Entry > entries_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetClientMsgRouting* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetWebAPIRouting_Response : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetWebAPIRouting_Response();
  virtual ~CMsgGCMsgMasterSetWebAPIRouting_Response();

  CMsgGCMsgMasterSetWebAPIRouting_Response(const CMsgGCMsgMasterSetWebAPIRouting_Response& from);

  inline CMsgGCMsgMasterSetWebAPIRouting_Response& operator=(const CMsgGCMsgMasterSetWebAPIRouting_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetWebAPIRouting_Response& default_instance();

  void Swap(CMsgGCMsgMasterSetWebAPIRouting_Response* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetWebAPIRouting_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from);
  void MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetWebAPIRouting_Response)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetWebAPIRouting_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgMasterSetClientMsgRouting_Response : public ::google::protobuf::Message {
 public:
  CMsgGCMsgMasterSetClientMsgRouting_Response();
  virtual ~CMsgGCMsgMasterSetClientMsgRouting_Response();

  CMsgGCMsgMasterSetClientMsgRouting_Response(const CMsgGCMsgMasterSetClientMsgRouting_Response& from);

  inline CMsgGCMsgMasterSetClientMsgRouting_Response& operator=(const CMsgGCMsgMasterSetClientMsgRouting_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgMasterSetClientMsgRouting_Response& default_instance();

  void Swap(CMsgGCMsgMasterSetClientMsgRouting_Response* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgMasterSetClientMsgRouting_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from);
  void MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCMsgMasterSetClientMsgRouting_Response)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgMasterSetClientMsgRouting_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgSetOptions_MessageRange : public ::google::protobuf::Message {
 public:
  CMsgGCMsgSetOptions_MessageRange();
  virtual ~CMsgGCMsgSetOptions_MessageRange();

  CMsgGCMsgSetOptions_MessageRange(const CMsgGCMsgSetOptions_MessageRange& from);

  inline CMsgGCMsgSetOptions_MessageRange& operator=(const CMsgGCMsgSetOptions_MessageRange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgSetOptions_MessageRange& default_instance();

  void Swap(CMsgGCMsgSetOptions_MessageRange* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgSetOptions_MessageRange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgSetOptions_MessageRange& from);
  void MergeFrom(const CMsgGCMsgSetOptions_MessageRange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 low = 1;
  inline bool has_low() const;
  inline void clear_low();
  static const int kLowFieldNumber = 1;
  inline ::google::protobuf::uint32 low() const;
  inline void set_low(::google::protobuf::uint32 value);

  // required uint32 high = 2;
  inline bool has_high() const;
  inline void clear_high();
  static const int kHighFieldNumber = 2;
  inline ::google::protobuf::uint32 high() const;
  inline void set_high(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCMsgSetOptions.MessageRange)
 private:
  inline void set_has_low();
  inline void clear_has_low();
  inline void set_has_high();
  inline void clear_has_high();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 low_;
  ::google::protobuf::uint32 high_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgSetOptions_MessageRange* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMsgSetOptions : public ::google::protobuf::Message {
 public:
  CMsgGCMsgSetOptions();
  virtual ~CMsgGCMsgSetOptions();

  CMsgGCMsgSetOptions(const CMsgGCMsgSetOptions& from);

  inline CMsgGCMsgSetOptions& operator=(const CMsgGCMsgSetOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMsgSetOptions& default_instance();

  void Swap(CMsgGCMsgSetOptions* other);

  // implements Message ----------------------------------------------

  CMsgGCMsgSetOptions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMsgSetOptions& from);
  void MergeFrom(const CMsgGCMsgSetOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCMsgSetOptions_MessageRange MessageRange;

  typedef CMsgGCMsgSetOptions_Option Option;
  static const Option NOTIFY_USER_SESSIONS = CMsgGCMsgSetOptions_Option_NOTIFY_USER_SESSIONS;
  static const Option NOTIFY_SERVER_SESSIONS = CMsgGCMsgSetOptions_Option_NOTIFY_SERVER_SESSIONS;
  static const Option NOTIFY_ACHIEVEMENTS = CMsgGCMsgSetOptions_Option_NOTIFY_ACHIEVEMENTS;
  static const Option NOTIFY_VAC_ACTION = CMsgGCMsgSetOptions_Option_NOTIFY_VAC_ACTION;
  static inline bool Option_IsValid(int value) {
    return CMsgGCMsgSetOptions_Option_IsValid(value);
  }
  static const Option Option_MIN =
    CMsgGCMsgSetOptions_Option_Option_MIN;
  static const Option Option_MAX =
    CMsgGCMsgSetOptions_Option_Option_MAX;
  static const int Option_ARRAYSIZE =
    CMsgGCMsgSetOptions_Option_Option_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Option_descriptor() {
    return CMsgGCMsgSetOptions_Option_descriptor();
  }
  static inline const ::std::string& Option_Name(Option value) {
    return CMsgGCMsgSetOptions_Option_Name(value);
  }
  static inline bool Option_Parse(const ::std::string& name,
      Option* value) {
    return CMsgGCMsgSetOptions_Option_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  inline int options_size() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 1;
  inline ::CMsgGCMsgSetOptions_Option options(int index) const;
  inline void set_options(int index, ::CMsgGCMsgSetOptions_Option value);
  inline void add_options(::CMsgGCMsgSetOptions_Option value);
  inline const ::google::protobuf::RepeatedField<int>& options() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_options();

  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  inline int client_msg_ranges_size() const;
  inline void clear_client_msg_ranges();
  static const int kClientMsgRangesFieldNumber = 2;
  inline const ::CMsgGCMsgSetOptions_MessageRange& client_msg_ranges(int index) const;
  inline ::CMsgGCMsgSetOptions_MessageRange* mutable_client_msg_ranges(int index);
  inline ::CMsgGCMsgSetOptions_MessageRange* add_client_msg_ranges();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgSetOptions_MessageRange >&
      client_msg_ranges() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgSetOptions_MessageRange >*
      mutable_client_msg_ranges();

  // @@protoc_insertion_point(class_scope:CMsgGCMsgSetOptions)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField<int> options_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgSetOptions_MessageRange > client_msg_ranges_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCMsgSetOptions* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCHUpdateSession_ExtraField : public ::google::protobuf::Message {
 public:
  CMsgGCHUpdateSession_ExtraField();
  virtual ~CMsgGCHUpdateSession_ExtraField();

  CMsgGCHUpdateSession_ExtraField(const CMsgGCHUpdateSession_ExtraField& from);

  inline CMsgGCHUpdateSession_ExtraField& operator=(const CMsgGCHUpdateSession_ExtraField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHUpdateSession_ExtraField& default_instance();

  void Swap(CMsgGCHUpdateSession_ExtraField* other);

  // implements Message ----------------------------------------------

  CMsgGCHUpdateSession_ExtraField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCHUpdateSession_ExtraField& from);
  void MergeFrom(const CMsgGCHUpdateSession_ExtraField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CMsgGCHUpdateSession.ExtraField)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCHUpdateSession_ExtraField* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCHUpdateSession : public ::google::protobuf::Message {
 public:
  CMsgGCHUpdateSession();
  virtual ~CMsgGCHUpdateSession();

  CMsgGCHUpdateSession(const CMsgGCHUpdateSession& from);

  inline CMsgGCHUpdateSession& operator=(const CMsgGCHUpdateSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHUpdateSession& default_instance();

  void Swap(CMsgGCHUpdateSession* other);

  // implements Message ----------------------------------------------

  CMsgGCHUpdateSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCHUpdateSession& from);
  void MergeFrom(const CMsgGCHUpdateSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGCHUpdateSession_ExtraField ExtraField;

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 app_id = 2;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional bool online = 3;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 3;
  inline bool online() const;
  inline void set_online(bool value);

  // optional fixed64 server_steam_id = 4;
  inline bool has_server_steam_id() const;
  inline void clear_server_steam_id();
  static const int kServerSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 server_steam_id() const;
  inline void set_server_steam_id(::google::protobuf::uint64 value);

  // optional uint32 server_addr = 5;
  inline bool has_server_addr() const;
  inline void clear_server_addr();
  static const int kServerAddrFieldNumber = 5;
  inline ::google::protobuf::uint32 server_addr() const;
  inline void set_server_addr(::google::protobuf::uint32 value);

  // optional uint32 server_port = 6;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 6;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 os_type = 7;
  inline bool has_os_type() const;
  inline void clear_os_type();
  static const int kOsTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 os_type() const;
  inline void set_os_type(::google::protobuf::uint32 value);

  // optional uint32 client_addr = 8;
  inline bool has_client_addr() const;
  inline void clear_client_addr();
  static const int kClientAddrFieldNumber = 8;
  inline ::google::protobuf::uint32 client_addr() const;
  inline void set_client_addr(::google::protobuf::uint32 value);

  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  inline int extra_fields_size() const;
  inline void clear_extra_fields();
  static const int kExtraFieldsFieldNumber = 9;
  inline const ::CMsgGCHUpdateSession_ExtraField& extra_fields(int index) const;
  inline ::CMsgGCHUpdateSession_ExtraField* mutable_extra_fields(int index);
  inline ::CMsgGCHUpdateSession_ExtraField* add_extra_fields();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCHUpdateSession_ExtraField >&
      extra_fields() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCHUpdateSession_ExtraField >*
      mutable_extra_fields();

  // optional fixed64 owner_id = 10;
  inline bool has_owner_id() const;
  inline void clear_owner_id();
  static const int kOwnerIdFieldNumber = 10;
  inline ::google::protobuf::uint64 owner_id() const;
  inline void set_owner_id(::google::protobuf::uint64 value);

  // optional uint32 cm_session_sysid = 11;
  inline bool has_cm_session_sysid() const;
  inline void clear_cm_session_sysid();
  static const int kCmSessionSysidFieldNumber = 11;
  inline ::google::protobuf::uint32 cm_session_sysid() const;
  inline void set_cm_session_sysid(::google::protobuf::uint32 value);

  // optional uint32 cm_session_identifier = 12;
  inline bool has_cm_session_identifier() const;
  inline void clear_cm_session_identifier();
  static const int kCmSessionIdentifierFieldNumber = 12;
  inline ::google::protobuf::uint32 cm_session_identifier() const;
  inline void set_cm_session_identifier(::google::protobuf::uint32 value);

  // repeated uint32 depot_ids = 13;
  inline int depot_ids_size() const;
  inline void clear_depot_ids();
  static const int kDepotIdsFieldNumber = 13;
  inline ::google::protobuf::uint32 depot_ids(int index) const;
  inline void set_depot_ids(int index, ::google::protobuf::uint32 value);
  inline void add_depot_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      depot_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_depot_ids();

  // @@protoc_insertion_point(class_scope:CMsgGCHUpdateSession)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_server_steam_id();
  inline void clear_has_server_steam_id();
  inline void set_has_server_addr();
  inline void clear_has_server_addr();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_os_type();
  inline void clear_has_os_type();
  inline void set_has_client_addr();
  inline void clear_has_client_addr();
  inline void set_has_owner_id();
  inline void clear_has_owner_id();
  inline void set_has_cm_session_sysid();
  inline void clear_has_cm_session_sysid();
  inline void set_has_cm_session_identifier();
  inline void clear_has_cm_session_identifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 app_id_;
  bool online_;
  ::google::protobuf::uint64 server_steam_id_;
  ::google::protobuf::uint32 server_addr_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 os_type_;
  ::google::protobuf::uint32 client_addr_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCHUpdateSession_ExtraField > extra_fields_;
  ::google::protobuf::uint64 owner_id_;
  ::google::protobuf::uint32 cm_session_sysid_;
  ::google::protobuf::uint32 cm_session_identifier_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > depot_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCHUpdateSession* default_instance_;
};
// -------------------------------------------------------------------

class CMsgNotificationOfSuspiciousActivity_MultipleGameInstances : public ::google::protobuf::Message {
 public:
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances();
  virtual ~CMsgNotificationOfSuspiciousActivity_MultipleGameInstances();

  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from);

  inline CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& operator=(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& default_instance();

  void Swap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* other);

  // implements Message ----------------------------------------------

  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from);
  void MergeFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_instance_count = 1;
  inline bool has_app_instance_count() const;
  inline void clear_app_instance_count();
  static const int kAppInstanceCountFieldNumber = 1;
  inline ::google::protobuf::uint32 app_instance_count() const;
  inline void set_app_instance_count(::google::protobuf::uint32 value);

  // repeated fixed64 other_steamids = 2;
  inline int other_steamids_size() const;
  inline void clear_other_steamids();
  static const int kOtherSteamidsFieldNumber = 2;
  inline ::google::protobuf::uint64 other_steamids(int index) const;
  inline void set_other_steamids(int index, ::google::protobuf::uint64 value);
  inline void add_other_steamids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      other_steamids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_other_steamids();

  // @@protoc_insertion_point(class_scope:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
 private:
  inline void set_has_app_instance_count();
  inline void clear_has_app_instance_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > other_steamids_;
  ::google::protobuf::uint32 app_instance_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* default_instance_;
};
// -------------------------------------------------------------------

class CMsgNotificationOfSuspiciousActivity : public ::google::protobuf::Message {
 public:
  CMsgNotificationOfSuspiciousActivity();
  virtual ~CMsgNotificationOfSuspiciousActivity();

  CMsgNotificationOfSuspiciousActivity(const CMsgNotificationOfSuspiciousActivity& from);

  inline CMsgNotificationOfSuspiciousActivity& operator=(const CMsgNotificationOfSuspiciousActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotificationOfSuspiciousActivity& default_instance();

  void Swap(CMsgNotificationOfSuspiciousActivity* other);

  // implements Message ----------------------------------------------

  CMsgNotificationOfSuspiciousActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgNotificationOfSuspiciousActivity& from);
  void MergeFrom(const CMsgNotificationOfSuspiciousActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgNotificationOfSuspiciousActivity_MultipleGameInstances MultipleGameInstances;

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
  inline bool has_multiple_instances() const;
  inline void clear_multiple_instances();
  static const int kMultipleInstancesFieldNumber = 3;
  inline const ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& multiple_instances() const;
  inline ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* mutable_multiple_instances();
  inline ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* release_multiple_instances();
  inline void set_allocated_multiple_instances(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* multiple_instances);

  // @@protoc_insertion_point(class_scope:CMsgNotificationOfSuspiciousActivity)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_multiple_instances();
  inline void clear_has_multiple_instances();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* multiple_instances_;
  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgNotificationOfSuspiciousActivity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDPPartnerMicroTxns_PartnerMicroTxn : public ::google::protobuf::Message {
 public:
  CMsgDPPartnerMicroTxns_PartnerMicroTxn();
  virtual ~CMsgDPPartnerMicroTxns_PartnerMicroTxn();

  CMsgDPPartnerMicroTxns_PartnerMicroTxn(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from);

  inline CMsgDPPartnerMicroTxns_PartnerMicroTxn& operator=(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDPPartnerMicroTxns_PartnerMicroTxn& default_instance();

  void Swap(CMsgDPPartnerMicroTxns_PartnerMicroTxn* other);

  // implements Message ----------------------------------------------

  CMsgDPPartnerMicroTxns_PartnerMicroTxn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from);
  void MergeFrom(const CMsgDPPartnerMicroTxns_PartnerMicroTxn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 init_time = 1;
  inline bool has_init_time() const;
  inline void clear_init_time();
  static const int kInitTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 init_time() const;
  inline void set_init_time(::google::protobuf::uint32 value);

  // optional uint32 last_update_time = 2;
  inline bool has_last_update_time() const;
  inline void clear_last_update_time();
  static const int kLastUpdateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 last_update_time() const;
  inline void set_last_update_time(::google::protobuf::uint32 value);

  // optional uint64 txn_id = 3;
  inline bool has_txn_id() const;
  inline void clear_txn_id();
  static const int kTxnIdFieldNumber = 3;
  inline ::google::protobuf::uint64 txn_id() const;
  inline void set_txn_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 4;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 4;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 line_item = 5;
  inline bool has_line_item() const;
  inline void clear_line_item();
  static const int kLineItemFieldNumber = 5;
  inline ::google::protobuf::uint32 line_item() const;
  inline void set_line_item(::google::protobuf::uint32 value);

  // optional uint64 item_id = 6;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 6;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint32 def_index = 7;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 7;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional uint64 price = 8;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 8;
  inline ::google::protobuf::uint64 price() const;
  inline void set_price(::google::protobuf::uint64 value);

  // optional uint64 tax = 9;
  inline bool has_tax() const;
  inline void clear_tax();
  static const int kTaxFieldNumber = 9;
  inline ::google::protobuf::uint64 tax() const;
  inline void set_tax(::google::protobuf::uint64 value);

  // optional uint64 price_usd = 10;
  inline bool has_price_usd() const;
  inline void clear_price_usd();
  static const int kPriceUsdFieldNumber = 10;
  inline ::google::protobuf::uint64 price_usd() const;
  inline void set_price_usd(::google::protobuf::uint64 value);

  // optional uint64 tax_usd = 11;
  inline bool has_tax_usd() const;
  inline void clear_tax_usd();
  static const int kTaxUsdFieldNumber = 11;
  inline ::google::protobuf::uint64 tax_usd() const;
  inline void set_tax_usd(::google::protobuf::uint64 value);

  // optional uint32 purchase_type = 12;
  inline bool has_purchase_type() const;
  inline void clear_purchase_type();
  static const int kPurchaseTypeFieldNumber = 12;
  inline ::google::protobuf::uint32 purchase_type() const;
  inline void set_purchase_type(::google::protobuf::uint32 value);

  // optional uint32 steam_txn_type = 13;
  inline bool has_steam_txn_type() const;
  inline void clear_steam_txn_type();
  static const int kSteamTxnTypeFieldNumber = 13;
  inline ::google::protobuf::uint32 steam_txn_type() const;
  inline void set_steam_txn_type(::google::protobuf::uint32 value);

  // optional string country_code = 14;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 14;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional string region_code = 15;
  inline bool has_region_code() const;
  inline void clear_region_code();
  static const int kRegionCodeFieldNumber = 15;
  inline const ::std::string& region_code() const;
  inline void set_region_code(const ::std::string& value);
  inline void set_region_code(const char* value);
  inline void set_region_code(const char* value, size_t size);
  inline ::std::string* mutable_region_code();
  inline ::std::string* release_region_code();
  inline void set_allocated_region_code(::std::string* region_code);

  // optional int32 quantity = 16;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 16;
  inline ::google::protobuf::int32 quantity() const;
  inline void set_quantity(::google::protobuf::int32 value);

  // optional uint64 ref_trans_id = 17;
  inline bool has_ref_trans_id() const;
  inline void clear_ref_trans_id();
  static const int kRefTransIdFieldNumber = 17;
  inline ::google::protobuf::uint64 ref_trans_id() const;
  inline void set_ref_trans_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgDPPartnerMicroTxns.PartnerMicroTxn)
 private:
  inline void set_has_init_time();
  inline void clear_has_init_time();
  inline void set_has_last_update_time();
  inline void clear_has_last_update_time();
  inline void set_has_txn_id();
  inline void clear_has_txn_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_line_item();
  inline void clear_has_line_item();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_tax();
  inline void clear_has_tax();
  inline void set_has_price_usd();
  inline void clear_has_price_usd();
  inline void set_has_tax_usd();
  inline void clear_has_tax_usd();
  inline void set_has_purchase_type();
  inline void clear_has_purchase_type();
  inline void set_has_steam_txn_type();
  inline void clear_has_steam_txn_type();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_region_code();
  inline void clear_has_region_code();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_ref_trans_id();
  inline void clear_has_ref_trans_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 init_time_;
  ::google::protobuf::uint32 last_update_time_;
  ::google::protobuf::uint64 txn_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 line_item_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 price_;
  ::google::protobuf::uint64 tax_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 purchase_type_;
  ::google::protobuf::uint64 price_usd_;
  ::google::protobuf::uint64 tax_usd_;
  ::std::string* country_code_;
  ::google::protobuf::uint32 steam_txn_type_;
  ::google::protobuf::int32 quantity_;
  ::std::string* region_code_;
  ::google::protobuf::uint64 ref_trans_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDPPartnerMicroTxns_PartnerMicroTxn* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDPPartnerMicroTxns_PartnerInfo : public ::google::protobuf::Message {
 public:
  CMsgDPPartnerMicroTxns_PartnerInfo();
  virtual ~CMsgDPPartnerMicroTxns_PartnerInfo();

  CMsgDPPartnerMicroTxns_PartnerInfo(const CMsgDPPartnerMicroTxns_PartnerInfo& from);

  inline CMsgDPPartnerMicroTxns_PartnerInfo& operator=(const CMsgDPPartnerMicroTxns_PartnerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDPPartnerMicroTxns_PartnerInfo& default_instance();

  void Swap(CMsgDPPartnerMicroTxns_PartnerInfo* other);

  // implements Message ----------------------------------------------

  CMsgDPPartnerMicroTxns_PartnerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDPPartnerMicroTxns_PartnerInfo& from);
  void MergeFrom(const CMsgDPPartnerMicroTxns_PartnerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 partner_id = 1;
  inline bool has_partner_id() const;
  inline void clear_partner_id();
  static const int kPartnerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 partner_id() const;
  inline void set_partner_id(::google::protobuf::uint32 value);

  // optional string partner_name = 2;
  inline bool has_partner_name() const;
  inline void clear_partner_name();
  static const int kPartnerNameFieldNumber = 2;
  inline const ::std::string& partner_name() const;
  inline void set_partner_name(const ::std::string& value);
  inline void set_partner_name(const char* value);
  inline void set_partner_name(const char* value, size_t size);
  inline ::std::string* mutable_partner_name();
  inline ::std::string* release_partner_name();
  inline void set_allocated_partner_name(::std::string* partner_name);

  // optional string currency_code = 3;
  inline bool has_currency_code() const;
  inline void clear_currency_code();
  static const int kCurrencyCodeFieldNumber = 3;
  inline const ::std::string& currency_code() const;
  inline void set_currency_code(const ::std::string& value);
  inline void set_currency_code(const char* value);
  inline void set_currency_code(const char* value, size_t size);
  inline ::std::string* mutable_currency_code();
  inline ::std::string* release_currency_code();
  inline void set_allocated_currency_code(::std::string* currency_code);

  // optional string currency_name = 4;
  inline bool has_currency_name() const;
  inline void clear_currency_name();
  static const int kCurrencyNameFieldNumber = 4;
  inline const ::std::string& currency_name() const;
  inline void set_currency_name(const ::std::string& value);
  inline void set_currency_name(const char* value);
  inline void set_currency_name(const char* value, size_t size);
  inline ::std::string* mutable_currency_name();
  inline ::std::string* release_currency_name();
  inline void set_allocated_currency_name(::std::string* currency_name);

  // @@protoc_insertion_point(class_scope:CMsgDPPartnerMicroTxns.PartnerInfo)
 private:
  inline void set_has_partner_id();
  inline void clear_has_partner_id();
  inline void set_has_partner_name();
  inline void clear_has_partner_name();
  inline void set_has_currency_code();
  inline void clear_has_currency_code();
  inline void set_has_currency_name();
  inline void clear_has_currency_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* partner_name_;
  ::std::string* currency_code_;
  ::std::string* currency_name_;
  ::google::protobuf::uint32 partner_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDPPartnerMicroTxns_PartnerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDPPartnerMicroTxns : public ::google::protobuf::Message {
 public:
  CMsgDPPartnerMicroTxns();
  virtual ~CMsgDPPartnerMicroTxns();

  CMsgDPPartnerMicroTxns(const CMsgDPPartnerMicroTxns& from);

  inline CMsgDPPartnerMicroTxns& operator=(const CMsgDPPartnerMicroTxns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDPPartnerMicroTxns& default_instance();

  void Swap(CMsgDPPartnerMicroTxns* other);

  // implements Message ----------------------------------------------

  CMsgDPPartnerMicroTxns* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDPPartnerMicroTxns& from);
  void MergeFrom(const CMsgDPPartnerMicroTxns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDPPartnerMicroTxns_PartnerMicroTxn PartnerMicroTxn;
  typedef CMsgDPPartnerMicroTxns_PartnerInfo PartnerInfo;

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional string gc_name = 2;
  inline bool has_gc_name() const;
  inline void clear_gc_name();
  static const int kGcNameFieldNumber = 2;
  inline const ::std::string& gc_name() const;
  inline void set_gc_name(const ::std::string& value);
  inline void set_gc_name(const char* value);
  inline void set_gc_name(const char* value, size_t size);
  inline ::std::string* mutable_gc_name();
  inline ::std::string* release_gc_name();
  inline void set_allocated_gc_name(::std::string* gc_name);

  // optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
  inline bool has_partner() const;
  inline void clear_partner();
  static const int kPartnerFieldNumber = 3;
  inline const ::CMsgDPPartnerMicroTxns_PartnerInfo& partner() const;
  inline ::CMsgDPPartnerMicroTxns_PartnerInfo* mutable_partner();
  inline ::CMsgDPPartnerMicroTxns_PartnerInfo* release_partner();
  inline void set_allocated_partner(::CMsgDPPartnerMicroTxns_PartnerInfo* partner);

  // repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
  inline int transactions_size() const;
  inline void clear_transactions();
  static const int kTransactionsFieldNumber = 4;
  inline const ::CMsgDPPartnerMicroTxns_PartnerMicroTxn& transactions(int index) const;
  inline ::CMsgDPPartnerMicroTxns_PartnerMicroTxn* mutable_transactions(int index);
  inline ::CMsgDPPartnerMicroTxns_PartnerMicroTxn* add_transactions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDPPartnerMicroTxns_PartnerMicroTxn >&
      transactions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDPPartnerMicroTxns_PartnerMicroTxn >*
      mutable_transactions();

  // @@protoc_insertion_point(class_scope:CMsgDPPartnerMicroTxns)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_gc_name();
  inline void clear_has_gc_name();
  inline void set_has_partner();
  inline void clear_has_partner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* gc_name_;
  ::CMsgDPPartnerMicroTxns_PartnerInfo* partner_;
  ::google::protobuf::RepeatedPtrField< ::CMsgDPPartnerMicroTxns_PartnerMicroTxn > transactions_;
  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDPPartnerMicroTxns* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDPPartnerMicroTxnsResponse : public ::google::protobuf::Message {
 public:
  CMsgDPPartnerMicroTxnsResponse();
  virtual ~CMsgDPPartnerMicroTxnsResponse();

  CMsgDPPartnerMicroTxnsResponse(const CMsgDPPartnerMicroTxnsResponse& from);

  inline CMsgDPPartnerMicroTxnsResponse& operator=(const CMsgDPPartnerMicroTxnsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDPPartnerMicroTxnsResponse& default_instance();

  void Swap(CMsgDPPartnerMicroTxnsResponse* other);

  // implements Message ----------------------------------------------

  CMsgDPPartnerMicroTxnsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDPPartnerMicroTxnsResponse& from);
  void MergeFrom(const CMsgDPPartnerMicroTxnsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDPPartnerMicroTxnsResponse_EErrorCode EErrorCode;
  static const EErrorCode k_MsgValid = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgValid;
  static const EErrorCode k_MsgInvalidAppID = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidAppID;
  static const EErrorCode k_MsgInvalidPartnerInfo = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidPartnerInfo;
  static const EErrorCode k_MsgNoTransactions = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgNoTransactions;
  static const EErrorCode k_MsgSQLFailure = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgSQLFailure;
  static const EErrorCode k_MsgPartnerInfoDiscrepancy = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgPartnerInfoDiscrepancy;
  static const EErrorCode k_MsgTransactionInsertFailed = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgTransactionInsertFailed;
  static const EErrorCode k_MsgAlreadyRunning = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgAlreadyRunning;
  static const EErrorCode k_MsgInvalidTransactionData = CMsgDPPartnerMicroTxnsResponse_EErrorCode_k_MsgInvalidTransactionData;
  static inline bool EErrorCode_IsValid(int value) {
    return CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(value);
  }
  static const EErrorCode EErrorCode_MIN =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MIN;
  static const EErrorCode EErrorCode_MAX =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_MAX;
  static const int EErrorCode_ARRAYSIZE =
    CMsgDPPartnerMicroTxnsResponse_EErrorCode_EErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EErrorCode_descriptor() {
    return CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor();
  }
  static inline const ::std::string& EErrorCode_Name(EErrorCode value) {
    return CMsgDPPartnerMicroTxnsResponse_EErrorCode_Name(value);
  }
  static inline bool EErrorCode_Parse(const ::std::string& name,
      EErrorCode* value) {
    return CMsgDPPartnerMicroTxnsResponse_EErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
  inline bool has_eerrorcode() const;
  inline void clear_eerrorcode();
  static const int kEerrorcodeFieldNumber = 2;
  inline ::CMsgDPPartnerMicroTxnsResponse_EErrorCode eerrorcode() const;
  inline void set_eerrorcode(::CMsgDPPartnerMicroTxnsResponse_EErrorCode value);

  // @@protoc_insertion_point(class_scope:CMsgDPPartnerMicroTxnsResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_eerrorcode();
  inline void clear_has_eerrorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;
  int eerrorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_2eproto();
  friend void protobuf_AssignDesc_steammessages_2eproto();
  friend void protobuf_ShutdownFile_steammessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgDPPartnerMicroTxnsResponse* default_instance_;
};
// ===================================================================

static const int kKeyFieldFieldNumber = 60000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  key_field;
static const int kMsgpoolSoftLimitFieldNumber = 60000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_soft_limit;
static const int kMsgpoolHardLimitFieldNumber = 60001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_hard_limit;

// ===================================================================

// CMsgProtoBufHeader

// optional fixed64 client_steam_id = 1;
inline bool CMsgProtoBufHeader::has_client_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProtoBufHeader::set_has_client_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgProtoBufHeader::clear_has_client_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgProtoBufHeader::clear_client_steam_id() {
  client_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_client_steam_id();
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::client_steam_id() const {
  return client_steam_id_;
}
inline void CMsgProtoBufHeader::set_client_steam_id(::google::protobuf::uint64 value) {
  set_has_client_steam_id();
  client_steam_id_ = value;
}

// optional int32 client_session_id = 2;
inline bool CMsgProtoBufHeader::has_client_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgProtoBufHeader::set_has_client_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgProtoBufHeader::clear_has_client_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgProtoBufHeader::clear_client_session_id() {
  client_session_id_ = 0;
  clear_has_client_session_id();
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::client_session_id() const {
  return client_session_id_;
}
inline void CMsgProtoBufHeader::set_client_session_id(::google::protobuf::int32 value) {
  set_has_client_session_id();
  client_session_id_ = value;
}

// optional uint32 source_app_id = 3;
inline bool CMsgProtoBufHeader::has_source_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgProtoBufHeader::set_has_source_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgProtoBufHeader::clear_has_source_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgProtoBufHeader::clear_source_app_id() {
  source_app_id_ = 0u;
  clear_has_source_app_id();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::source_app_id() const {
  return source_app_id_;
}
inline void CMsgProtoBufHeader::set_source_app_id(::google::protobuf::uint32 value) {
  set_has_source_app_id();
  source_app_id_ = value;
}

// optional fixed64 job_id_source = 10 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_job_id_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgProtoBufHeader::set_has_job_id_source() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgProtoBufHeader::clear_has_job_id_source() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgProtoBufHeader::clear_job_id_source() {
  job_id_source_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_job_id_source();
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::job_id_source() const {
  return job_id_source_;
}
inline void CMsgProtoBufHeader::set_job_id_source(::google::protobuf::uint64 value) {
  set_has_job_id_source();
  job_id_source_ = value;
}

// optional fixed64 job_id_target = 11 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_job_id_target() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgProtoBufHeader::set_has_job_id_target() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgProtoBufHeader::clear_has_job_id_target() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgProtoBufHeader::clear_job_id_target() {
  job_id_target_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_job_id_target();
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::job_id_target() const {
  return job_id_target_;
}
inline void CMsgProtoBufHeader::set_job_id_target(::google::protobuf::uint64 value) {
  set_has_job_id_target();
  job_id_target_ = value;
}

// optional string target_job_name = 12;
inline bool CMsgProtoBufHeader::has_target_job_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgProtoBufHeader::set_has_target_job_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgProtoBufHeader::clear_has_target_job_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgProtoBufHeader::clear_target_job_name() {
  if (target_job_name_ != &::google::protobuf::internal::kEmptyString) {
    target_job_name_->clear();
  }
  clear_has_target_job_name();
}
inline const ::std::string& CMsgProtoBufHeader::target_job_name() const {
  return *target_job_name_;
}
inline void CMsgProtoBufHeader::set_target_job_name(const ::std::string& value) {
  set_has_target_job_name();
  if (target_job_name_ == &::google::protobuf::internal::kEmptyString) {
    target_job_name_ = new ::std::string;
  }
  target_job_name_->assign(value);
}
inline void CMsgProtoBufHeader::set_target_job_name(const char* value) {
  set_has_target_job_name();
  if (target_job_name_ == &::google::protobuf::internal::kEmptyString) {
    target_job_name_ = new ::std::string;
  }
  target_job_name_->assign(value);
}
inline void CMsgProtoBufHeader::set_target_job_name(const char* value, size_t size) {
  set_has_target_job_name();
  if (target_job_name_ == &::google::protobuf::internal::kEmptyString) {
    target_job_name_ = new ::std::string;
  }
  target_job_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgProtoBufHeader::mutable_target_job_name() {
  set_has_target_job_name();
  if (target_job_name_ == &::google::protobuf::internal::kEmptyString) {
    target_job_name_ = new ::std::string;
  }
  return target_job_name_;
}
inline ::std::string* CMsgProtoBufHeader::release_target_job_name() {
  clear_has_target_job_name();
  if (target_job_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = target_job_name_;
    target_job_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgProtoBufHeader::set_allocated_target_job_name(::std::string* target_job_name) {
  if (target_job_name_ != &::google::protobuf::internal::kEmptyString) {
    delete target_job_name_;
  }
  if (target_job_name) {
    set_has_target_job_name();
    target_job_name_ = target_job_name;
  } else {
    clear_has_target_job_name();
    target_job_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 eresult = 13 [default = 2];
inline bool CMsgProtoBufHeader::has_eresult() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgProtoBufHeader::set_has_eresult() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgProtoBufHeader::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgProtoBufHeader::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::eresult() const {
  return eresult_;
}
inline void CMsgProtoBufHeader::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional string error_message = 14;
inline bool CMsgProtoBufHeader::has_error_message() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgProtoBufHeader::set_has_error_message() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgProtoBufHeader::clear_has_error_message() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgProtoBufHeader::clear_error_message() {
  if (error_message_ != &::google::protobuf::internal::kEmptyString) {
    error_message_->clear();
  }
  clear_has_error_message();
}
inline const ::std::string& CMsgProtoBufHeader::error_message() const {
  return *error_message_;
}
inline void CMsgProtoBufHeader::set_error_message(const ::std::string& value) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::kEmptyString) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(value);
}
inline void CMsgProtoBufHeader::set_error_message(const char* value) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::kEmptyString) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(value);
}
inline void CMsgProtoBufHeader::set_error_message(const char* value, size_t size) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::kEmptyString) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgProtoBufHeader::mutable_error_message() {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::kEmptyString) {
    error_message_ = new ::std::string;
  }
  return error_message_;
}
inline ::std::string* CMsgProtoBufHeader::release_error_message() {
  clear_has_error_message();
  if (error_message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = error_message_;
    error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgProtoBufHeader::set_allocated_error_message(::std::string* error_message) {
  if (error_message_ != &::google::protobuf::internal::kEmptyString) {
    delete error_message_;
  }
  if (error_message) {
    set_has_error_message();
    error_message_ = error_message;
  } else {
    clear_has_error_message();
    error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
inline bool CMsgProtoBufHeader::has_gc_msg_src() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgProtoBufHeader::set_has_gc_msg_src() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgProtoBufHeader::clear_has_gc_msg_src() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgProtoBufHeader::clear_gc_msg_src() {
  gc_msg_src_ = 0;
  clear_has_gc_msg_src();
}
inline ::GCProtoBufMsgSrc CMsgProtoBufHeader::gc_msg_src() const {
  return static_cast< ::GCProtoBufMsgSrc >(gc_msg_src_);
}
inline void CMsgProtoBufHeader::set_gc_msg_src(::GCProtoBufMsgSrc value) {
  assert(::GCProtoBufMsgSrc_IsValid(value));
  set_has_gc_msg_src();
  gc_msg_src_ = value;
}

// optional uint32 gc_dir_index_source = 201;
inline bool CMsgProtoBufHeader::has_gc_dir_index_source() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgProtoBufHeader::set_has_gc_dir_index_source() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgProtoBufHeader::clear_has_gc_dir_index_source() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgProtoBufHeader::clear_gc_dir_index_source() {
  gc_dir_index_source_ = 0u;
  clear_has_gc_dir_index_source();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::gc_dir_index_source() const {
  return gc_dir_index_source_;
}
inline void CMsgProtoBufHeader::set_gc_dir_index_source(::google::protobuf::uint32 value) {
  set_has_gc_dir_index_source();
  gc_dir_index_source_ = value;
}

// -------------------------------------------------------------------

// CMsgWebAPIKey

// optional uint32 status = 1 [default = 255];
inline bool CMsgWebAPIKey::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgWebAPIKey::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgWebAPIKey::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgWebAPIKey::clear_status() {
  status_ = 255u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CMsgWebAPIKey::status() const {
  return status_;
}
inline void CMsgWebAPIKey::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 account_id = 2 [default = 0];
inline bool CMsgWebAPIKey::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgWebAPIKey::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgWebAPIKey::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgWebAPIKey::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgWebAPIKey::account_id() const {
  return account_id_;
}
inline void CMsgWebAPIKey::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional uint32 publisher_group_id = 3 [default = 0];
inline bool CMsgWebAPIKey::has_publisher_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgWebAPIKey::set_has_publisher_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgWebAPIKey::clear_has_publisher_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgWebAPIKey::clear_publisher_group_id() {
  publisher_group_id_ = 0u;
  clear_has_publisher_group_id();
}
inline ::google::protobuf::uint32 CMsgWebAPIKey::publisher_group_id() const {
  return publisher_group_id_;
}
inline void CMsgWebAPIKey::set_publisher_group_id(::google::protobuf::uint32 value) {
  set_has_publisher_group_id();
  publisher_group_id_ = value;
}

// optional uint32 key_id = 4;
inline bool CMsgWebAPIKey::has_key_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgWebAPIKey::set_has_key_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgWebAPIKey::clear_has_key_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgWebAPIKey::clear_key_id() {
  key_id_ = 0u;
  clear_has_key_id();
}
inline ::google::protobuf::uint32 CMsgWebAPIKey::key_id() const {
  return key_id_;
}
inline void CMsgWebAPIKey::set_key_id(::google::protobuf::uint32 value) {
  set_has_key_id();
  key_id_ = value;
}

// optional string domain = 5;
inline bool CMsgWebAPIKey::has_domain() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgWebAPIKey::set_has_domain() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgWebAPIKey::clear_has_domain() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgWebAPIKey::clear_domain() {
  if (domain_ != &::google::protobuf::internal::kEmptyString) {
    domain_->clear();
  }
  clear_has_domain();
}
inline const ::std::string& CMsgWebAPIKey::domain() const {
  return *domain_;
}
inline void CMsgWebAPIKey::set_domain(const ::std::string& value) {
  set_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    domain_ = new ::std::string;
  }
  domain_->assign(value);
}
inline void CMsgWebAPIKey::set_domain(const char* value) {
  set_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    domain_ = new ::std::string;
  }
  domain_->assign(value);
}
inline void CMsgWebAPIKey::set_domain(const char* value, size_t size) {
  set_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    domain_ = new ::std::string;
  }
  domain_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgWebAPIKey::mutable_domain() {
  set_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    domain_ = new ::std::string;
  }
  return domain_;
}
inline ::std::string* CMsgWebAPIKey::release_domain() {
  clear_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = domain_;
    domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgWebAPIKey::set_allocated_domain(::std::string* domain) {
  if (domain_ != &::google::protobuf::internal::kEmptyString) {
    delete domain_;
  }
  if (domain) {
    set_has_domain();
    domain_ = domain;
  } else {
    clear_has_domain();
    domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgHttpRequest_RequestHeader

// optional string name = 1;
inline bool CMsgHttpRequest_RequestHeader::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpRequest_RequestHeader::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHttpRequest_RequestHeader::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHttpRequest_RequestHeader::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgHttpRequest_RequestHeader::name() const {
  return *name_;
}
inline void CMsgHttpRequest_RequestHeader::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgHttpRequest_RequestHeader::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgHttpRequest_RequestHeader::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpRequest_RequestHeader::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgHttpRequest_RequestHeader::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpRequest_RequestHeader::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string value = 2;
inline bool CMsgHttpRequest_RequestHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpRequest_RequestHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHttpRequest_RequestHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHttpRequest_RequestHeader::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CMsgHttpRequest_RequestHeader::value() const {
  return *value_;
}
inline void CMsgHttpRequest_RequestHeader::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgHttpRequest_RequestHeader::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgHttpRequest_RequestHeader::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpRequest_RequestHeader::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CMsgHttpRequest_RequestHeader::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpRequest_RequestHeader::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgHttpRequest_QueryParam

// optional string name = 1;
inline bool CMsgHttpRequest_QueryParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpRequest_QueryParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHttpRequest_QueryParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHttpRequest_QueryParam::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgHttpRequest_QueryParam::name() const {
  return *name_;
}
inline void CMsgHttpRequest_QueryParam::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgHttpRequest_QueryParam::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgHttpRequest_QueryParam::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpRequest_QueryParam::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgHttpRequest_QueryParam::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpRequest_QueryParam::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes value = 2;
inline bool CMsgHttpRequest_QueryParam::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpRequest_QueryParam::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHttpRequest_QueryParam::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHttpRequest_QueryParam::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CMsgHttpRequest_QueryParam::value() const {
  return *value_;
}
inline void CMsgHttpRequest_QueryParam::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgHttpRequest_QueryParam::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgHttpRequest_QueryParam::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpRequest_QueryParam::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CMsgHttpRequest_QueryParam::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpRequest_QueryParam::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgHttpRequest

// optional uint32 request_method = 1;
inline bool CMsgHttpRequest::has_request_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpRequest::set_has_request_method() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHttpRequest::clear_has_request_method() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHttpRequest::clear_request_method() {
  request_method_ = 0u;
  clear_has_request_method();
}
inline ::google::protobuf::uint32 CMsgHttpRequest::request_method() const {
  return request_method_;
}
inline void CMsgHttpRequest::set_request_method(::google::protobuf::uint32 value) {
  set_has_request_method();
  request_method_ = value;
}

// optional string hostname = 2;
inline bool CMsgHttpRequest::has_hostname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpRequest::set_has_hostname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHttpRequest::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHttpRequest::clear_hostname() {
  if (hostname_ != &::google::protobuf::internal::kEmptyString) {
    hostname_->clear();
  }
  clear_has_hostname();
}
inline const ::std::string& CMsgHttpRequest::hostname() const {
  return *hostname_;
}
inline void CMsgHttpRequest::set_hostname(const ::std::string& value) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::kEmptyString) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(value);
}
inline void CMsgHttpRequest::set_hostname(const char* value) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::kEmptyString) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(value);
}
inline void CMsgHttpRequest::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::kEmptyString) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpRequest::mutable_hostname() {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::kEmptyString) {
    hostname_ = new ::std::string;
  }
  return hostname_;
}
inline ::std::string* CMsgHttpRequest::release_hostname() {
  clear_has_hostname();
  if (hostname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hostname_;
    hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpRequest::set_allocated_hostname(::std::string* hostname) {
  if (hostname_ != &::google::protobuf::internal::kEmptyString) {
    delete hostname_;
  }
  if (hostname) {
    set_has_hostname();
    hostname_ = hostname;
  } else {
    clear_has_hostname();
    hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string url = 3;
inline bool CMsgHttpRequest::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHttpRequest::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHttpRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHttpRequest::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CMsgHttpRequest::url() const {
  return *url_;
}
inline void CMsgHttpRequest::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void CMsgHttpRequest::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void CMsgHttpRequest::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpRequest::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* CMsgHttpRequest::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpRequest::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .CMsgHttpRequest.RequestHeader headers = 4;
inline int CMsgHttpRequest::headers_size() const {
  return headers_.size();
}
inline void CMsgHttpRequest::clear_headers() {
  headers_.Clear();
}
inline const ::CMsgHttpRequest_RequestHeader& CMsgHttpRequest::headers(int index) const {
  return headers_.Get(index);
}
inline ::CMsgHttpRequest_RequestHeader* CMsgHttpRequest::mutable_headers(int index) {
  return headers_.Mutable(index);
}
inline ::CMsgHttpRequest_RequestHeader* CMsgHttpRequest::add_headers() {
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_RequestHeader >&
CMsgHttpRequest::headers() const {
  return headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_RequestHeader >*
CMsgHttpRequest::mutable_headers() {
  return &headers_;
}

// repeated .CMsgHttpRequest.QueryParam get_params = 5;
inline int CMsgHttpRequest::get_params_size() const {
  return get_params_.size();
}
inline void CMsgHttpRequest::clear_get_params() {
  get_params_.Clear();
}
inline const ::CMsgHttpRequest_QueryParam& CMsgHttpRequest::get_params(int index) const {
  return get_params_.Get(index);
}
inline ::CMsgHttpRequest_QueryParam* CMsgHttpRequest::mutable_get_params(int index) {
  return get_params_.Mutable(index);
}
inline ::CMsgHttpRequest_QueryParam* CMsgHttpRequest::add_get_params() {
  return get_params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >&
CMsgHttpRequest::get_params() const {
  return get_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >*
CMsgHttpRequest::mutable_get_params() {
  return &get_params_;
}

// repeated .CMsgHttpRequest.QueryParam post_params = 6;
inline int CMsgHttpRequest::post_params_size() const {
  return post_params_.size();
}
inline void CMsgHttpRequest::clear_post_params() {
  post_params_.Clear();
}
inline const ::CMsgHttpRequest_QueryParam& CMsgHttpRequest::post_params(int index) const {
  return post_params_.Get(index);
}
inline ::CMsgHttpRequest_QueryParam* CMsgHttpRequest::mutable_post_params(int index) {
  return post_params_.Mutable(index);
}
inline ::CMsgHttpRequest_QueryParam* CMsgHttpRequest::add_post_params() {
  return post_params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >&
CMsgHttpRequest::post_params() const {
  return post_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgHttpRequest_QueryParam >*
CMsgHttpRequest::mutable_post_params() {
  return &post_params_;
}

// optional bytes body = 7;
inline bool CMsgHttpRequest::has_body() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgHttpRequest::set_has_body() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgHttpRequest::clear_has_body() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgHttpRequest::clear_body() {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    body_->clear();
  }
  clear_has_body();
}
inline const ::std::string& CMsgHttpRequest::body() const {
  return *body_;
}
inline void CMsgHttpRequest::set_body(const ::std::string& value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void CMsgHttpRequest::set_body(const char* value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void CMsgHttpRequest::set_body(const void* value, size_t size) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpRequest::mutable_body() {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  return body_;
}
inline ::std::string* CMsgHttpRequest::release_body() {
  clear_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = body_;
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpRequest::set_allocated_body(::std::string* body) {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    delete body_;
  }
  if (body) {
    set_has_body();
    body_ = body;
  } else {
    clear_has_body();
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 absolute_timeout = 8;
inline bool CMsgHttpRequest::has_absolute_timeout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgHttpRequest::set_has_absolute_timeout() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgHttpRequest::clear_has_absolute_timeout() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgHttpRequest::clear_absolute_timeout() {
  absolute_timeout_ = 0u;
  clear_has_absolute_timeout();
}
inline ::google::protobuf::uint32 CMsgHttpRequest::absolute_timeout() const {
  return absolute_timeout_;
}
inline void CMsgHttpRequest::set_absolute_timeout(::google::protobuf::uint32 value) {
  set_has_absolute_timeout();
  absolute_timeout_ = value;
}

// -------------------------------------------------------------------

// CMsgWebAPIRequest

// optional string UNUSED_job_name = 1;
inline bool CMsgWebAPIRequest::has_unused_job_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgWebAPIRequest::set_has_unused_job_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgWebAPIRequest::clear_has_unused_job_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgWebAPIRequest::clear_unused_job_name() {
  if (unused_job_name_ != &::google::protobuf::internal::kEmptyString) {
    unused_job_name_->clear();
  }
  clear_has_unused_job_name();
}
inline const ::std::string& CMsgWebAPIRequest::unused_job_name() const {
  return *unused_job_name_;
}
inline void CMsgWebAPIRequest::set_unused_job_name(const ::std::string& value) {
  set_has_unused_job_name();
  if (unused_job_name_ == &::google::protobuf::internal::kEmptyString) {
    unused_job_name_ = new ::std::string;
  }
  unused_job_name_->assign(value);
}
inline void CMsgWebAPIRequest::set_unused_job_name(const char* value) {
  set_has_unused_job_name();
  if (unused_job_name_ == &::google::protobuf::internal::kEmptyString) {
    unused_job_name_ = new ::std::string;
  }
  unused_job_name_->assign(value);
}
inline void CMsgWebAPIRequest::set_unused_job_name(const char* value, size_t size) {
  set_has_unused_job_name();
  if (unused_job_name_ == &::google::protobuf::internal::kEmptyString) {
    unused_job_name_ = new ::std::string;
  }
  unused_job_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgWebAPIRequest::mutable_unused_job_name() {
  set_has_unused_job_name();
  if (unused_job_name_ == &::google::protobuf::internal::kEmptyString) {
    unused_job_name_ = new ::std::string;
  }
  return unused_job_name_;
}
inline ::std::string* CMsgWebAPIRequest::release_unused_job_name() {
  clear_has_unused_job_name();
  if (unused_job_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = unused_job_name_;
    unused_job_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgWebAPIRequest::set_allocated_unused_job_name(::std::string* unused_job_name) {
  if (unused_job_name_ != &::google::protobuf::internal::kEmptyString) {
    delete unused_job_name_;
  }
  if (unused_job_name) {
    set_has_unused_job_name();
    unused_job_name_ = unused_job_name;
  } else {
    clear_has_unused_job_name();
    unused_job_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string interface_name = 2;
inline bool CMsgWebAPIRequest::has_interface_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgWebAPIRequest::set_has_interface_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgWebAPIRequest::clear_has_interface_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgWebAPIRequest::clear_interface_name() {
  if (interface_name_ != &::google::protobuf::internal::kEmptyString) {
    interface_name_->clear();
  }
  clear_has_interface_name();
}
inline const ::std::string& CMsgWebAPIRequest::interface_name() const {
  return *interface_name_;
}
inline void CMsgWebAPIRequest::set_interface_name(const ::std::string& value) {
  set_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    interface_name_ = new ::std::string;
  }
  interface_name_->assign(value);
}
inline void CMsgWebAPIRequest::set_interface_name(const char* value) {
  set_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    interface_name_ = new ::std::string;
  }
  interface_name_->assign(value);
}
inline void CMsgWebAPIRequest::set_interface_name(const char* value, size_t size) {
  set_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    interface_name_ = new ::std::string;
  }
  interface_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgWebAPIRequest::mutable_interface_name() {
  set_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    interface_name_ = new ::std::string;
  }
  return interface_name_;
}
inline ::std::string* CMsgWebAPIRequest::release_interface_name() {
  clear_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = interface_name_;
    interface_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgWebAPIRequest::set_allocated_interface_name(::std::string* interface_name) {
  if (interface_name_ != &::google::protobuf::internal::kEmptyString) {
    delete interface_name_;
  }
  if (interface_name) {
    set_has_interface_name();
    interface_name_ = interface_name;
  } else {
    clear_has_interface_name();
    interface_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string method_name = 3;
inline bool CMsgWebAPIRequest::has_method_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgWebAPIRequest::set_has_method_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgWebAPIRequest::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgWebAPIRequest::clear_method_name() {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    method_name_->clear();
  }
  clear_has_method_name();
}
inline const ::std::string& CMsgWebAPIRequest::method_name() const {
  return *method_name_;
}
inline void CMsgWebAPIRequest::set_method_name(const ::std::string& value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void CMsgWebAPIRequest::set_method_name(const char* value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void CMsgWebAPIRequest::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgWebAPIRequest::mutable_method_name() {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  return method_name_;
}
inline ::std::string* CMsgWebAPIRequest::release_method_name() {
  clear_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = method_name_;
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgWebAPIRequest::set_allocated_method_name(::std::string* method_name) {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    delete method_name_;
  }
  if (method_name) {
    set_has_method_name();
    method_name_ = method_name;
  } else {
    clear_has_method_name();
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 version = 4;
inline bool CMsgWebAPIRequest::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgWebAPIRequest::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgWebAPIRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgWebAPIRequest::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 CMsgWebAPIRequest::version() const {
  return version_;
}
inline void CMsgWebAPIRequest::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// optional .CMsgWebAPIKey api_key = 5;
inline bool CMsgWebAPIRequest::has_api_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgWebAPIRequest::set_has_api_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgWebAPIRequest::clear_has_api_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgWebAPIRequest::clear_api_key() {
  if (api_key_ != NULL) api_key_->::CMsgWebAPIKey::Clear();
  clear_has_api_key();
}
inline const ::CMsgWebAPIKey& CMsgWebAPIRequest::api_key() const {
  return api_key_ != NULL ? *api_key_ : *default_instance_->api_key_;
}
inline ::CMsgWebAPIKey* CMsgWebAPIRequest::mutable_api_key() {
  set_has_api_key();
  if (api_key_ == NULL) api_key_ = new ::CMsgWebAPIKey;
  return api_key_;
}
inline ::CMsgWebAPIKey* CMsgWebAPIRequest::release_api_key() {
  clear_has_api_key();
  ::CMsgWebAPIKey* temp = api_key_;
  api_key_ = NULL;
  return temp;
}
inline void CMsgWebAPIRequest::set_allocated_api_key(::CMsgWebAPIKey* api_key) {
  delete api_key_;
  api_key_ = api_key;
  if (api_key) {
    set_has_api_key();
  } else {
    clear_has_api_key();
  }
}

// optional .CMsgHttpRequest request = 6;
inline bool CMsgWebAPIRequest::has_request() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgWebAPIRequest::set_has_request() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgWebAPIRequest::clear_has_request() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgWebAPIRequest::clear_request() {
  if (request_ != NULL) request_->::CMsgHttpRequest::Clear();
  clear_has_request();
}
inline const ::CMsgHttpRequest& CMsgWebAPIRequest::request() const {
  return request_ != NULL ? *request_ : *default_instance_->request_;
}
inline ::CMsgHttpRequest* CMsgWebAPIRequest::mutable_request() {
  set_has_request();
  if (request_ == NULL) request_ = new ::CMsgHttpRequest;
  return request_;
}
inline ::CMsgHttpRequest* CMsgWebAPIRequest::release_request() {
  clear_has_request();
  ::CMsgHttpRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline void CMsgWebAPIRequest::set_allocated_request(::CMsgHttpRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
}

// optional uint32 routing_app_id = 7;
inline bool CMsgWebAPIRequest::has_routing_app_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgWebAPIRequest::set_has_routing_app_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgWebAPIRequest::clear_has_routing_app_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgWebAPIRequest::clear_routing_app_id() {
  routing_app_id_ = 0u;
  clear_has_routing_app_id();
}
inline ::google::protobuf::uint32 CMsgWebAPIRequest::routing_app_id() const {
  return routing_app_id_;
}
inline void CMsgWebAPIRequest::set_routing_app_id(::google::protobuf::uint32 value) {
  set_has_routing_app_id();
  routing_app_id_ = value;
}

// -------------------------------------------------------------------

// CMsgHttpResponse_ResponseHeader

// optional string name = 1;
inline bool CMsgHttpResponse_ResponseHeader::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpResponse_ResponseHeader::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHttpResponse_ResponseHeader::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHttpResponse_ResponseHeader::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgHttpResponse_ResponseHeader::name() const {
  return *name_;
}
inline void CMsgHttpResponse_ResponseHeader::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgHttpResponse_ResponseHeader::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgHttpResponse_ResponseHeader::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpResponse_ResponseHeader::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgHttpResponse_ResponseHeader::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpResponse_ResponseHeader::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string value = 2;
inline bool CMsgHttpResponse_ResponseHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHttpResponse_ResponseHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHttpResponse_ResponseHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHttpResponse_ResponseHeader::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CMsgHttpResponse_ResponseHeader::value() const {
  return *value_;
}
inline void CMsgHttpResponse_ResponseHeader::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgHttpResponse_ResponseHeader::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgHttpResponse_ResponseHeader::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpResponse_ResponseHeader::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CMsgHttpResponse_ResponseHeader::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpResponse_ResponseHeader::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgHttpResponse

// optional uint32 status_code = 1;
inline bool CMsgHttpResponse::has_status_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHttpResponse::set_has_status_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHttpResponse::clear_has_status_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHttpResponse::clear_status_code() {
  status_code_ = 0u;
  clear_has_status_code();
}
inline ::google::protobuf::uint32 CMsgHttpResponse::status_code() const {
  return status_code_;
}
inline void CMsgHttpResponse::set_status_code(::google::protobuf::uint32 value) {
  set_has_status_code();
  status_code_ = value;
}

// repeated .CMsgHttpResponse.ResponseHeader headers = 2;
inline int CMsgHttpResponse::headers_size() const {
  return headers_.size();
}
inline void CMsgHttpResponse::clear_headers() {
  headers_.Clear();
}
inline const ::CMsgHttpResponse_ResponseHeader& CMsgHttpResponse::headers(int index) const {
  return headers_.Get(index);
}
inline ::CMsgHttpResponse_ResponseHeader* CMsgHttpResponse::mutable_headers(int index) {
  return headers_.Mutable(index);
}
inline ::CMsgHttpResponse_ResponseHeader* CMsgHttpResponse::add_headers() {
  return headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgHttpResponse_ResponseHeader >&
CMsgHttpResponse::headers() const {
  return headers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgHttpResponse_ResponseHeader >*
CMsgHttpResponse::mutable_headers() {
  return &headers_;
}

// optional bytes body = 3;
inline bool CMsgHttpResponse::has_body() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHttpResponse::set_has_body() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHttpResponse::clear_has_body() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHttpResponse::clear_body() {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    body_->clear();
  }
  clear_has_body();
}
inline const ::std::string& CMsgHttpResponse::body() const {
  return *body_;
}
inline void CMsgHttpResponse::set_body(const ::std::string& value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void CMsgHttpResponse::set_body(const char* value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void CMsgHttpResponse::set_body(const void* value, size_t size) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgHttpResponse::mutable_body() {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  return body_;
}
inline ::std::string* CMsgHttpResponse::release_body() {
  clear_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = body_;
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgHttpResponse::set_allocated_body(::std::string* body) {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    delete body_;
  }
  if (body) {
    set_has_body();
    body_ = body;
  } else {
    clear_has_body();
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgAMFindAccounts

// optional uint32 search_type = 1;
inline bool CMsgAMFindAccounts::has_search_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMFindAccounts::set_has_search_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMFindAccounts::clear_has_search_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMFindAccounts::clear_search_type() {
  search_type_ = 0u;
  clear_has_search_type();
}
inline ::google::protobuf::uint32 CMsgAMFindAccounts::search_type() const {
  return search_type_;
}
inline void CMsgAMFindAccounts::set_search_type(::google::protobuf::uint32 value) {
  set_has_search_type();
  search_type_ = value;
}

// optional string search_string = 2;
inline bool CMsgAMFindAccounts::has_search_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMFindAccounts::set_has_search_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMFindAccounts::clear_has_search_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMFindAccounts::clear_search_string() {
  if (search_string_ != &::google::protobuf::internal::kEmptyString) {
    search_string_->clear();
  }
  clear_has_search_string();
}
inline const ::std::string& CMsgAMFindAccounts::search_string() const {
  return *search_string_;
}
inline void CMsgAMFindAccounts::set_search_string(const ::std::string& value) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::kEmptyString) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(value);
}
inline void CMsgAMFindAccounts::set_search_string(const char* value) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::kEmptyString) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(value);
}
inline void CMsgAMFindAccounts::set_search_string(const char* value, size_t size) {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::kEmptyString) {
    search_string_ = new ::std::string;
  }
  search_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgAMFindAccounts::mutable_search_string() {
  set_has_search_string();
  if (search_string_ == &::google::protobuf::internal::kEmptyString) {
    search_string_ = new ::std::string;
  }
  return search_string_;
}
inline ::std::string* CMsgAMFindAccounts::release_search_string() {
  clear_has_search_string();
  if (search_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = search_string_;
    search_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgAMFindAccounts::set_allocated_search_string(::std::string* search_string) {
  if (search_string_ != &::google::protobuf::internal::kEmptyString) {
    delete search_string_;
  }
  if (search_string) {
    set_has_search_string();
    search_string_ = search_string;
  } else {
    clear_has_search_string();
    search_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgAMFindAccountsResponse

// repeated fixed64 steam_id = 1;
inline int CMsgAMFindAccountsResponse::steam_id_size() const {
  return steam_id_.size();
}
inline void CMsgAMFindAccountsResponse::clear_steam_id() {
  steam_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgAMFindAccountsResponse::steam_id(int index) const {
  return steam_id_.Get(index);
}
inline void CMsgAMFindAccountsResponse::set_steam_id(int index, ::google::protobuf::uint64 value) {
  steam_id_.Set(index, value);
}
inline void CMsgAMFindAccountsResponse::add_steam_id(::google::protobuf::uint64 value) {
  steam_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgAMFindAccountsResponse::steam_id() const {
  return steam_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgAMFindAccountsResponse::mutable_steam_id() {
  return &steam_id_;
}

// -------------------------------------------------------------------

// CMsgNotifyWatchdog

// optional uint32 source = 1;
inline bool CMsgNotifyWatchdog::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNotifyWatchdog::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNotifyWatchdog::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNotifyWatchdog::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::source() const {
  return source_;
}
inline void CMsgNotifyWatchdog::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
}

// optional uint32 alert_type = 2;
inline bool CMsgNotifyWatchdog::has_alert_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNotifyWatchdog::set_has_alert_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgNotifyWatchdog::clear_has_alert_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgNotifyWatchdog::clear_alert_type() {
  alert_type_ = 0u;
  clear_has_alert_type();
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::alert_type() const {
  return alert_type_;
}
inline void CMsgNotifyWatchdog::set_alert_type(::google::protobuf::uint32 value) {
  set_has_alert_type();
  alert_type_ = value;
}

// optional uint32 alert_destination = 3;
inline bool CMsgNotifyWatchdog::has_alert_destination() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgNotifyWatchdog::set_has_alert_destination() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgNotifyWatchdog::clear_has_alert_destination() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgNotifyWatchdog::clear_alert_destination() {
  alert_destination_ = 0u;
  clear_has_alert_destination();
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::alert_destination() const {
  return alert_destination_;
}
inline void CMsgNotifyWatchdog::set_alert_destination(::google::protobuf::uint32 value) {
  set_has_alert_destination();
  alert_destination_ = value;
}

// optional bool critical = 4;
inline bool CMsgNotifyWatchdog::has_critical() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgNotifyWatchdog::set_has_critical() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgNotifyWatchdog::clear_has_critical() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgNotifyWatchdog::clear_critical() {
  critical_ = false;
  clear_has_critical();
}
inline bool CMsgNotifyWatchdog::critical() const {
  return critical_;
}
inline void CMsgNotifyWatchdog::set_critical(bool value) {
  set_has_critical();
  critical_ = value;
}

// optional uint32 time = 5;
inline bool CMsgNotifyWatchdog::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgNotifyWatchdog::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgNotifyWatchdog::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgNotifyWatchdog::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::time() const {
  return time_;
}
inline void CMsgNotifyWatchdog::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 appid = 6;
inline bool CMsgNotifyWatchdog::has_appid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgNotifyWatchdog::set_has_appid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgNotifyWatchdog::clear_has_appid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgNotifyWatchdog::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgNotifyWatchdog::appid() const {
  return appid_;
}
inline void CMsgNotifyWatchdog::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional string text = 7;
inline bool CMsgNotifyWatchdog::has_text() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgNotifyWatchdog::set_has_text() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgNotifyWatchdog::clear_has_text() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgNotifyWatchdog::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CMsgNotifyWatchdog::text() const {
  return *text_;
}
inline void CMsgNotifyWatchdog::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CMsgNotifyWatchdog::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CMsgNotifyWatchdog::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgNotifyWatchdog::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CMsgNotifyWatchdog::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgNotifyWatchdog::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgAMGetLicenses

// optional fixed64 steamid = 1;
inline bool CMsgAMGetLicenses::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetLicenses::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMGetLicenses::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMGetLicenses::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgAMGetLicenses::steamid() const {
  return steamid_;
}
inline void CMsgAMGetLicenses::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// -------------------------------------------------------------------

// CMsgPackageLicense

// optional uint32 package_id = 1;
inline bool CMsgPackageLicense::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPackageLicense::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPackageLicense::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPackageLicense::clear_package_id() {
  package_id_ = 0u;
  clear_has_package_id();
}
inline ::google::protobuf::uint32 CMsgPackageLicense::package_id() const {
  return package_id_;
}
inline void CMsgPackageLicense::set_package_id(::google::protobuf::uint32 value) {
  set_has_package_id();
  package_id_ = value;
}

// optional uint32 time_created = 2;
inline bool CMsgPackageLicense::has_time_created() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPackageLicense::set_has_time_created() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPackageLicense::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPackageLicense::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
inline ::google::protobuf::uint32 CMsgPackageLicense::time_created() const {
  return time_created_;
}
inline void CMsgPackageLicense::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
}

// optional uint32 owner_id = 3;
inline bool CMsgPackageLicense::has_owner_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPackageLicense::set_has_owner_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPackageLicense::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPackageLicense::clear_owner_id() {
  owner_id_ = 0u;
  clear_has_owner_id();
}
inline ::google::protobuf::uint32 CMsgPackageLicense::owner_id() const {
  return owner_id_;
}
inline void CMsgPackageLicense::set_owner_id(::google::protobuf::uint32 value) {
  set_has_owner_id();
  owner_id_ = value;
}

// -------------------------------------------------------------------

// CMsgAMGetLicensesResponse

// repeated .CMsgPackageLicense license = 1;
inline int CMsgAMGetLicensesResponse::license_size() const {
  return license_.size();
}
inline void CMsgAMGetLicensesResponse::clear_license() {
  license_.Clear();
}
inline const ::CMsgPackageLicense& CMsgAMGetLicensesResponse::license(int index) const {
  return license_.Get(index);
}
inline ::CMsgPackageLicense* CMsgAMGetLicensesResponse::mutable_license(int index) {
  return license_.Mutable(index);
}
inline ::CMsgPackageLicense* CMsgAMGetLicensesResponse::add_license() {
  return license_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgPackageLicense >&
CMsgAMGetLicensesResponse::license() const {
  return license_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgPackageLicense >*
CMsgAMGetLicensesResponse::mutable_license() {
  return &license_;
}

// optional uint32 result = 2;
inline bool CMsgAMGetLicensesResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetLicensesResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMGetLicensesResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMGetLicensesResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgAMGetLicensesResponse::result() const {
  return result_;
}
inline void CMsgAMGetLicensesResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStats

// optional fixed64 steam_id = 1;
inline bool CMsgAMGetUserGameStats::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetUserGameStats::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMGetUserGameStats::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMGetUserGameStats::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgAMGetUserGameStats::steam_id() const {
  return steam_id_;
}
inline void CMsgAMGetUserGameStats::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// optional fixed64 game_id = 2;
inline bool CMsgAMGetUserGameStats::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetUserGameStats::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMGetUserGameStats::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMGetUserGameStats::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 CMsgAMGetUserGameStats::game_id() const {
  return game_id_;
}
inline void CMsgAMGetUserGameStats::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// repeated uint32 stats = 3;
inline int CMsgAMGetUserGameStats::stats_size() const {
  return stats_.size();
}
inline void CMsgAMGetUserGameStats::clear_stats() {
  stats_.Clear();
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStats::stats(int index) const {
  return stats_.Get(index);
}
inline void CMsgAMGetUserGameStats::set_stats(int index, ::google::protobuf::uint32 value) {
  stats_.Set(index, value);
}
inline void CMsgAMGetUserGameStats::add_stats(::google::protobuf::uint32 value) {
  stats_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgAMGetUserGameStats::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgAMGetUserGameStats::mutable_stats() {
  return &stats_;
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStatsResponse_Stats

// optional uint32 stat_id = 1;
inline bool CMsgAMGetUserGameStatsResponse_Stats::has_stat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::set_has_stat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::clear_has_stat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::clear_stat_id() {
  stat_id_ = 0u;
  clear_has_stat_id();
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Stats::stat_id() const {
  return stat_id_;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::set_stat_id(::google::protobuf::uint32 value) {
  set_has_stat_id();
  stat_id_ = value;
}

// optional uint32 stat_value = 2;
inline bool CMsgAMGetUserGameStatsResponse_Stats::has_stat_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::set_has_stat_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::clear_has_stat_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::clear_stat_value() {
  stat_value_ = 0u;
  clear_has_stat_value();
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Stats::stat_value() const {
  return stat_value_;
}
inline void CMsgAMGetUserGameStatsResponse_Stats::set_stat_value(::google::protobuf::uint32 value) {
  set_has_stat_value();
  stat_value_ = value;
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStatsResponse_Achievement_Blocks

// optional uint32 achievement_id = 1;
inline bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_achievement_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_has_achievement_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_has_achievement_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_achievement_id() {
  achievement_id_ = 0u;
  clear_has_achievement_id();
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::achievement_id() const {
  return achievement_id_;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_achievement_id(::google::protobuf::uint32 value) {
  set_has_achievement_id();
  achievement_id_ = value;
}

// optional uint32 achievement_bit_id = 2;
inline bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_achievement_bit_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_has_achievement_bit_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_has_achievement_bit_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_achievement_bit_id() {
  achievement_bit_id_ = 0u;
  clear_has_achievement_bit_id();
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::achievement_bit_id() const {
  return achievement_bit_id_;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_achievement_bit_id(::google::protobuf::uint32 value) {
  set_has_achievement_bit_id();
  achievement_bit_id_ = value;
}

// optional fixed32 unlock_time = 3;
inline bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::has_unlock_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_has_unlock_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_has_unlock_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::clear_unlock_time() {
  unlock_time_ = 0u;
  clear_has_unlock_time();
}
inline ::google::protobuf::uint32 CMsgAMGetUserGameStatsResponse_Achievement_Blocks::unlock_time() const {
  return unlock_time_;
}
inline void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::set_unlock_time(::google::protobuf::uint32 value) {
  set_has_unlock_time();
  unlock_time_ = value;
}

// -------------------------------------------------------------------

// CMsgAMGetUserGameStatsResponse

// optional fixed64 steam_id = 1;
inline bool CMsgAMGetUserGameStatsResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMGetUserGameStatsResponse::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMGetUserGameStatsResponse::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgAMGetUserGameStatsResponse::steam_id() const {
  return steam_id_;
}
inline void CMsgAMGetUserGameStatsResponse::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// optional fixed64 game_id = 2;
inline bool CMsgAMGetUserGameStatsResponse::has_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse::set_has_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMGetUserGameStatsResponse::clear_has_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMGetUserGameStatsResponse::clear_game_id() {
  game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_game_id();
}
inline ::google::protobuf::uint64 CMsgAMGetUserGameStatsResponse::game_id() const {
  return game_id_;
}
inline void CMsgAMGetUserGameStatsResponse::set_game_id(::google::protobuf::uint64 value) {
  set_has_game_id();
  game_id_ = value;
}

// optional int32 eresult = 3 [default = 2];
inline bool CMsgAMGetUserGameStatsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMGetUserGameStatsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAMGetUserGameStatsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAMGetUserGameStatsResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgAMGetUserGameStatsResponse::eresult() const {
  return eresult_;
}
inline void CMsgAMGetUserGameStatsResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
inline int CMsgAMGetUserGameStatsResponse::stats_size() const {
  return stats_.size();
}
inline void CMsgAMGetUserGameStatsResponse::clear_stats() {
  stats_.Clear();
}
inline const ::CMsgAMGetUserGameStatsResponse_Stats& CMsgAMGetUserGameStatsResponse::stats(int index) const {
  return stats_.Get(index);
}
inline ::CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Stats >&
CMsgAMGetUserGameStatsResponse::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Stats >*
CMsgAMGetUserGameStatsResponse::mutable_stats() {
  return &stats_;
}

// repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
inline int CMsgAMGetUserGameStatsResponse::achievement_blocks_size() const {
  return achievement_blocks_.size();
}
inline void CMsgAMGetUserGameStatsResponse::clear_achievement_blocks() {
  achievement_blocks_.Clear();
}
inline const ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks& CMsgAMGetUserGameStatsResponse::achievement_blocks(int index) const {
  return achievement_blocks_.Get(index);
}
inline ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse::mutable_achievement_blocks(int index) {
  return achievement_blocks_.Mutable(index);
}
inline ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse::add_achievement_blocks() {
  return achievement_blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >&
CMsgAMGetUserGameStatsResponse::achievement_blocks() const {
  return achievement_blocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks >*
CMsgAMGetUserGameStatsResponse::mutable_achievement_blocks() {
  return &achievement_blocks_;
}

// -------------------------------------------------------------------

// CMsgGCGetCommandList

// optional uint32 app_id = 1;
inline bool CMsgGCGetCommandList::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetCommandList::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetCommandList::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetCommandList::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgGCGetCommandList::app_id() const {
  return app_id_;
}
inline void CMsgGCGetCommandList::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional string command_prefix = 2;
inline bool CMsgGCGetCommandList::has_command_prefix() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetCommandList::set_has_command_prefix() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCGetCommandList::clear_has_command_prefix() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCGetCommandList::clear_command_prefix() {
  if (command_prefix_ != &::google::protobuf::internal::kEmptyString) {
    command_prefix_->clear();
  }
  clear_has_command_prefix();
}
inline const ::std::string& CMsgGCGetCommandList::command_prefix() const {
  return *command_prefix_;
}
inline void CMsgGCGetCommandList::set_command_prefix(const ::std::string& value) {
  set_has_command_prefix();
  if (command_prefix_ == &::google::protobuf::internal::kEmptyString) {
    command_prefix_ = new ::std::string;
  }
  command_prefix_->assign(value);
}
inline void CMsgGCGetCommandList::set_command_prefix(const char* value) {
  set_has_command_prefix();
  if (command_prefix_ == &::google::protobuf::internal::kEmptyString) {
    command_prefix_ = new ::std::string;
  }
  command_prefix_->assign(value);
}
inline void CMsgGCGetCommandList::set_command_prefix(const char* value, size_t size) {
  set_has_command_prefix();
  if (command_prefix_ == &::google::protobuf::internal::kEmptyString) {
    command_prefix_ = new ::std::string;
  }
  command_prefix_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCGetCommandList::mutable_command_prefix() {
  set_has_command_prefix();
  if (command_prefix_ == &::google::protobuf::internal::kEmptyString) {
    command_prefix_ = new ::std::string;
  }
  return command_prefix_;
}
inline ::std::string* CMsgGCGetCommandList::release_command_prefix() {
  clear_has_command_prefix();
  if (command_prefix_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = command_prefix_;
    command_prefix_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCGetCommandList::set_allocated_command_prefix(::std::string* command_prefix) {
  if (command_prefix_ != &::google::protobuf::internal::kEmptyString) {
    delete command_prefix_;
  }
  if (command_prefix) {
    set_has_command_prefix();
    command_prefix_ = command_prefix;
  } else {
    clear_has_command_prefix();
    command_prefix_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgGCGetCommandListResponse

// repeated string command_name = 1;
inline int CMsgGCGetCommandListResponse::command_name_size() const {
  return command_name_.size();
}
inline void CMsgGCGetCommandListResponse::clear_command_name() {
  command_name_.Clear();
}
inline const ::std::string& CMsgGCGetCommandListResponse::command_name(int index) const {
  return command_name_.Get(index);
}
inline ::std::string* CMsgGCGetCommandListResponse::mutable_command_name(int index) {
  return command_name_.Mutable(index);
}
inline void CMsgGCGetCommandListResponse::set_command_name(int index, const ::std::string& value) {
  command_name_.Mutable(index)->assign(value);
}
inline void CMsgGCGetCommandListResponse::set_command_name(int index, const char* value) {
  command_name_.Mutable(index)->assign(value);
}
inline void CMsgGCGetCommandListResponse::set_command_name(int index, const char* value, size_t size) {
  command_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCGetCommandListResponse::add_command_name() {
  return command_name_.Add();
}
inline void CMsgGCGetCommandListResponse::add_command_name(const ::std::string& value) {
  command_name_.Add()->assign(value);
}
inline void CMsgGCGetCommandListResponse::add_command_name(const char* value) {
  command_name_.Add()->assign(value);
}
inline void CMsgGCGetCommandListResponse::add_command_name(const char* value, size_t size) {
  command_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgGCGetCommandListResponse::command_name() const {
  return command_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgGCGetCommandListResponse::mutable_command_name() {
  return &command_name_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedGet

// repeated string keys = 1;
inline int CGCMsgMemCachedGet::keys_size() const {
  return keys_.size();
}
inline void CGCMsgMemCachedGet::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& CGCMsgMemCachedGet::keys(int index) const {
  return keys_.Get(index);
}
inline ::std::string* CGCMsgMemCachedGet::mutable_keys(int index) {
  return keys_.Mutable(index);
}
inline void CGCMsgMemCachedGet::set_keys(int index, const ::std::string& value) {
  keys_.Mutable(index)->assign(value);
}
inline void CGCMsgMemCachedGet::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
}
inline void CGCMsgMemCachedGet::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgMemCachedGet::add_keys() {
  return keys_.Add();
}
inline void CGCMsgMemCachedGet::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
}
inline void CGCMsgMemCachedGet::add_keys(const char* value) {
  keys_.Add()->assign(value);
}
inline void CGCMsgMemCachedGet::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CGCMsgMemCachedGet::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CGCMsgMemCachedGet::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedGetResponse_ValueTag

// optional bool found = 1;
inline bool CGCMsgMemCachedGetResponse_ValueTag::has_found() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_has_found() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::clear_has_found() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::clear_found() {
  found_ = false;
  clear_has_found();
}
inline bool CGCMsgMemCachedGetResponse_ValueTag::found() const {
  return found_;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_found(bool value) {
  set_has_found();
  found_ = value;
}

// optional bytes value = 2;
inline bool CGCMsgMemCachedGetResponse_ValueTag::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CGCMsgMemCachedGetResponse_ValueTag::value() const {
  return *value_;
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgMemCachedGetResponse_ValueTag::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CGCMsgMemCachedGetResponse_ValueTag::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CGCMsgMemCachedGetResponse_ValueTag::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CGCMsgMemCachedGetResponse

// repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
inline int CGCMsgMemCachedGetResponse::values_size() const {
  return values_.size();
}
inline void CGCMsgMemCachedGetResponse::clear_values() {
  values_.Clear();
}
inline const ::CGCMsgMemCachedGetResponse_ValueTag& CGCMsgMemCachedGetResponse::values(int index) const {
  return values_.Get(index);
}
inline ::CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedGetResponse_ValueTag >&
CGCMsgMemCachedGetResponse::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedGetResponse_ValueTag >*
CGCMsgMemCachedGetResponse::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedSet_KeyPair

// optional string name = 1;
inline bool CGCMsgMemCachedSet_KeyPair::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgMemCachedSet_KeyPair::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgMemCachedSet_KeyPair::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgMemCachedSet_KeyPair::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CGCMsgMemCachedSet_KeyPair::name() const {
  return *name_;
}
inline void CGCMsgMemCachedSet_KeyPair::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CGCMsgMemCachedSet_KeyPair::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CGCMsgMemCachedSet_KeyPair::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgMemCachedSet_KeyPair::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CGCMsgMemCachedSet_KeyPair::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CGCMsgMemCachedSet_KeyPair::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes value = 2;
inline bool CGCMsgMemCachedSet_KeyPair::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgMemCachedSet_KeyPair::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgMemCachedSet_KeyPair::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgMemCachedSet_KeyPair::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CGCMsgMemCachedSet_KeyPair::value() const {
  return *value_;
}
inline void CGCMsgMemCachedSet_KeyPair::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CGCMsgMemCachedSet_KeyPair::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CGCMsgMemCachedSet_KeyPair::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgMemCachedSet_KeyPair::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CGCMsgMemCachedSet_KeyPair::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CGCMsgMemCachedSet_KeyPair::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CGCMsgMemCachedSet

// repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
inline int CGCMsgMemCachedSet::keys_size() const {
  return keys_.size();
}
inline void CGCMsgMemCachedSet::clear_keys() {
  keys_.Clear();
}
inline const ::CGCMsgMemCachedSet_KeyPair& CGCMsgMemCachedSet::keys(int index) const {
  return keys_.Get(index);
}
inline ::CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet::mutable_keys(int index) {
  return keys_.Mutable(index);
}
inline ::CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet::add_keys() {
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedSet_KeyPair >&
CGCMsgMemCachedSet::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CGCMsgMemCachedSet_KeyPair >*
CGCMsgMemCachedSet::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedDelete

// repeated string keys = 1;
inline int CGCMsgMemCachedDelete::keys_size() const {
  return keys_.size();
}
inline void CGCMsgMemCachedDelete::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& CGCMsgMemCachedDelete::keys(int index) const {
  return keys_.Get(index);
}
inline ::std::string* CGCMsgMemCachedDelete::mutable_keys(int index) {
  return keys_.Mutable(index);
}
inline void CGCMsgMemCachedDelete::set_keys(int index, const ::std::string& value) {
  keys_.Mutable(index)->assign(value);
}
inline void CGCMsgMemCachedDelete::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
}
inline void CGCMsgMemCachedDelete::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgMemCachedDelete::add_keys() {
  return keys_.Add();
}
inline void CGCMsgMemCachedDelete::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
}
inline void CGCMsgMemCachedDelete::add_keys(const char* value) {
  keys_.Add()->assign(value);
}
inline void CGCMsgMemCachedDelete::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CGCMsgMemCachedDelete::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CGCMsgMemCachedDelete::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CGCMsgMemCachedStats

// -------------------------------------------------------------------

// CGCMsgMemCachedStatsResponse

// optional uint64 curr_connections = 1;
inline bool CGCMsgMemCachedStatsResponse::has_curr_connections() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_curr_connections() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_curr_connections() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgMemCachedStatsResponse::clear_curr_connections() {
  curr_connections_ = GOOGLE_ULONGLONG(0);
  clear_has_curr_connections();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::curr_connections() const {
  return curr_connections_;
}
inline void CGCMsgMemCachedStatsResponse::set_curr_connections(::google::protobuf::uint64 value) {
  set_has_curr_connections();
  curr_connections_ = value;
}

// optional uint64 cmd_get = 2;
inline bool CGCMsgMemCachedStatsResponse::has_cmd_get() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_cmd_get() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_cmd_get() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgMemCachedStatsResponse::clear_cmd_get() {
  cmd_get_ = GOOGLE_ULONGLONG(0);
  clear_has_cmd_get();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_get() const {
  return cmd_get_;
}
inline void CGCMsgMemCachedStatsResponse::set_cmd_get(::google::protobuf::uint64 value) {
  set_has_cmd_get();
  cmd_get_ = value;
}

// optional uint64 cmd_set = 3;
inline bool CGCMsgMemCachedStatsResponse::has_cmd_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_cmd_set() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_cmd_set() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgMemCachedStatsResponse::clear_cmd_set() {
  cmd_set_ = GOOGLE_ULONGLONG(0);
  clear_has_cmd_set();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_set() const {
  return cmd_set_;
}
inline void CGCMsgMemCachedStatsResponse::set_cmd_set(::google::protobuf::uint64 value) {
  set_has_cmd_set();
  cmd_set_ = value;
}

// optional uint64 cmd_flush = 4;
inline bool CGCMsgMemCachedStatsResponse::has_cmd_flush() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_cmd_flush() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_cmd_flush() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgMemCachedStatsResponse::clear_cmd_flush() {
  cmd_flush_ = GOOGLE_ULONGLONG(0);
  clear_has_cmd_flush();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::cmd_flush() const {
  return cmd_flush_;
}
inline void CGCMsgMemCachedStatsResponse::set_cmd_flush(::google::protobuf::uint64 value) {
  set_has_cmd_flush();
  cmd_flush_ = value;
}

// optional uint64 get_hits = 5;
inline bool CGCMsgMemCachedStatsResponse::has_get_hits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_get_hits() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_get_hits() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsgMemCachedStatsResponse::clear_get_hits() {
  get_hits_ = GOOGLE_ULONGLONG(0);
  clear_has_get_hits();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::get_hits() const {
  return get_hits_;
}
inline void CGCMsgMemCachedStatsResponse::set_get_hits(::google::protobuf::uint64 value) {
  set_has_get_hits();
  get_hits_ = value;
}

// optional uint64 get_misses = 6;
inline bool CGCMsgMemCachedStatsResponse::has_get_misses() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_get_misses() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_get_misses() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGCMsgMemCachedStatsResponse::clear_get_misses() {
  get_misses_ = GOOGLE_ULONGLONG(0);
  clear_has_get_misses();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::get_misses() const {
  return get_misses_;
}
inline void CGCMsgMemCachedStatsResponse::set_get_misses(::google::protobuf::uint64 value) {
  set_has_get_misses();
  get_misses_ = value;
}

// optional uint64 delete_hits = 7;
inline bool CGCMsgMemCachedStatsResponse::has_delete_hits() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_delete_hits() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_delete_hits() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGCMsgMemCachedStatsResponse::clear_delete_hits() {
  delete_hits_ = GOOGLE_ULONGLONG(0);
  clear_has_delete_hits();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::delete_hits() const {
  return delete_hits_;
}
inline void CGCMsgMemCachedStatsResponse::set_delete_hits(::google::protobuf::uint64 value) {
  set_has_delete_hits();
  delete_hits_ = value;
}

// optional uint64 delete_misses = 8;
inline bool CGCMsgMemCachedStatsResponse::has_delete_misses() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_delete_misses() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_delete_misses() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGCMsgMemCachedStatsResponse::clear_delete_misses() {
  delete_misses_ = GOOGLE_ULONGLONG(0);
  clear_has_delete_misses();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::delete_misses() const {
  return delete_misses_;
}
inline void CGCMsgMemCachedStatsResponse::set_delete_misses(::google::protobuf::uint64 value) {
  set_has_delete_misses();
  delete_misses_ = value;
}

// optional uint64 bytes_read = 9;
inline bool CGCMsgMemCachedStatsResponse::has_bytes_read() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_bytes_read() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_bytes_read() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CGCMsgMemCachedStatsResponse::clear_bytes_read() {
  bytes_read_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_read();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes_read() const {
  return bytes_read_;
}
inline void CGCMsgMemCachedStatsResponse::set_bytes_read(::google::protobuf::uint64 value) {
  set_has_bytes_read();
  bytes_read_ = value;
}

// optional uint64 bytes_written = 10;
inline bool CGCMsgMemCachedStatsResponse::has_bytes_written() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_bytes_written() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_bytes_written() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CGCMsgMemCachedStatsResponse::clear_bytes_written() {
  bytes_written_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_written();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes_written() const {
  return bytes_written_;
}
inline void CGCMsgMemCachedStatsResponse::set_bytes_written(::google::protobuf::uint64 value) {
  set_has_bytes_written();
  bytes_written_ = value;
}

// optional uint64 limit_maxbytes = 11;
inline bool CGCMsgMemCachedStatsResponse::has_limit_maxbytes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_limit_maxbytes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_limit_maxbytes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CGCMsgMemCachedStatsResponse::clear_limit_maxbytes() {
  limit_maxbytes_ = GOOGLE_ULONGLONG(0);
  clear_has_limit_maxbytes();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::limit_maxbytes() const {
  return limit_maxbytes_;
}
inline void CGCMsgMemCachedStatsResponse::set_limit_maxbytes(::google::protobuf::uint64 value) {
  set_has_limit_maxbytes();
  limit_maxbytes_ = value;
}

// optional uint64 curr_items = 12;
inline bool CGCMsgMemCachedStatsResponse::has_curr_items() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_curr_items() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_curr_items() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CGCMsgMemCachedStatsResponse::clear_curr_items() {
  curr_items_ = GOOGLE_ULONGLONG(0);
  clear_has_curr_items();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::curr_items() const {
  return curr_items_;
}
inline void CGCMsgMemCachedStatsResponse::set_curr_items(::google::protobuf::uint64 value) {
  set_has_curr_items();
  curr_items_ = value;
}

// optional uint64 evictions = 13;
inline bool CGCMsgMemCachedStatsResponse::has_evictions() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_evictions() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_evictions() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CGCMsgMemCachedStatsResponse::clear_evictions() {
  evictions_ = GOOGLE_ULONGLONG(0);
  clear_has_evictions();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::evictions() const {
  return evictions_;
}
inline void CGCMsgMemCachedStatsResponse::set_evictions(::google::protobuf::uint64 value) {
  set_has_evictions();
  evictions_ = value;
}

// optional uint64 bytes = 14;
inline bool CGCMsgMemCachedStatsResponse::has_bytes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CGCMsgMemCachedStatsResponse::set_has_bytes() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CGCMsgMemCachedStatsResponse::clear_has_bytes() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CGCMsgMemCachedStatsResponse::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes();
}
inline ::google::protobuf::uint64 CGCMsgMemCachedStatsResponse::bytes() const {
  return bytes_;
}
inline void CGCMsgMemCachedStatsResponse::set_bytes(::google::protobuf::uint64 value) {
  set_has_bytes();
  bytes_ = value;
}

// -------------------------------------------------------------------

// CGCMsgSQLStats

// optional uint32 schema_catalog = 1;
inline bool CGCMsgSQLStats::has_schema_catalog() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgSQLStats::set_has_schema_catalog() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgSQLStats::clear_has_schema_catalog() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgSQLStats::clear_schema_catalog() {
  schema_catalog_ = 0u;
  clear_has_schema_catalog();
}
inline ::google::protobuf::uint32 CGCMsgSQLStats::schema_catalog() const {
  return schema_catalog_;
}
inline void CGCMsgSQLStats::set_schema_catalog(::google::protobuf::uint32 value) {
  set_has_schema_catalog();
  schema_catalog_ = value;
}

// -------------------------------------------------------------------

// CGCMsgSQLStatsResponse

// optional uint32 threads = 1;
inline bool CGCMsgSQLStatsResponse::has_threads() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_threads() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgSQLStatsResponse::clear_has_threads() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgSQLStatsResponse::clear_threads() {
  threads_ = 0u;
  clear_has_threads();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads() const {
  return threads_;
}
inline void CGCMsgSQLStatsResponse::set_threads(::google::protobuf::uint32 value) {
  set_has_threads();
  threads_ = value;
}

// optional uint32 threads_connected = 2;
inline bool CGCMsgSQLStatsResponse::has_threads_connected() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_threads_connected() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgSQLStatsResponse::clear_has_threads_connected() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgSQLStatsResponse::clear_threads_connected() {
  threads_connected_ = 0u;
  clear_has_threads_connected();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads_connected() const {
  return threads_connected_;
}
inline void CGCMsgSQLStatsResponse::set_threads_connected(::google::protobuf::uint32 value) {
  set_has_threads_connected();
  threads_connected_ = value;
}

// optional uint32 threads_active = 3;
inline bool CGCMsgSQLStatsResponse::has_threads_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_threads_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgSQLStatsResponse::clear_has_threads_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgSQLStatsResponse::clear_threads_active() {
  threads_active_ = 0u;
  clear_has_threads_active();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::threads_active() const {
  return threads_active_;
}
inline void CGCMsgSQLStatsResponse::set_threads_active(::google::protobuf::uint32 value) {
  set_has_threads_active();
  threads_active_ = value;
}

// optional uint32 operations_submitted = 4;
inline bool CGCMsgSQLStatsResponse::has_operations_submitted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_operations_submitted() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgSQLStatsResponse::clear_has_operations_submitted() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgSQLStatsResponse::clear_operations_submitted() {
  operations_submitted_ = 0u;
  clear_has_operations_submitted();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::operations_submitted() const {
  return operations_submitted_;
}
inline void CGCMsgSQLStatsResponse::set_operations_submitted(::google::protobuf::uint32 value) {
  set_has_operations_submitted();
  operations_submitted_ = value;
}

// optional uint32 prepared_statements_executed = 5;
inline bool CGCMsgSQLStatsResponse::has_prepared_statements_executed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_prepared_statements_executed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsgSQLStatsResponse::clear_has_prepared_statements_executed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsgSQLStatsResponse::clear_prepared_statements_executed() {
  prepared_statements_executed_ = 0u;
  clear_has_prepared_statements_executed();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::prepared_statements_executed() const {
  return prepared_statements_executed_;
}
inline void CGCMsgSQLStatsResponse::set_prepared_statements_executed(::google::protobuf::uint32 value) {
  set_has_prepared_statements_executed();
  prepared_statements_executed_ = value;
}

// optional uint32 non_prepared_statements_executed = 6;
inline bool CGCMsgSQLStatsResponse::has_non_prepared_statements_executed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_non_prepared_statements_executed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGCMsgSQLStatsResponse::clear_has_non_prepared_statements_executed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGCMsgSQLStatsResponse::clear_non_prepared_statements_executed() {
  non_prepared_statements_executed_ = 0u;
  clear_has_non_prepared_statements_executed();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::non_prepared_statements_executed() const {
  return non_prepared_statements_executed_;
}
inline void CGCMsgSQLStatsResponse::set_non_prepared_statements_executed(::google::protobuf::uint32 value) {
  set_has_non_prepared_statements_executed();
  non_prepared_statements_executed_ = value;
}

// optional uint32 deadlock_retries = 7;
inline bool CGCMsgSQLStatsResponse::has_deadlock_retries() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_deadlock_retries() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGCMsgSQLStatsResponse::clear_has_deadlock_retries() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGCMsgSQLStatsResponse::clear_deadlock_retries() {
  deadlock_retries_ = 0u;
  clear_has_deadlock_retries();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::deadlock_retries() const {
  return deadlock_retries_;
}
inline void CGCMsgSQLStatsResponse::set_deadlock_retries(::google::protobuf::uint32 value) {
  set_has_deadlock_retries();
  deadlock_retries_ = value;
}

// optional uint32 operations_timed_out_in_queue = 8;
inline bool CGCMsgSQLStatsResponse::has_operations_timed_out_in_queue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_operations_timed_out_in_queue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGCMsgSQLStatsResponse::clear_has_operations_timed_out_in_queue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGCMsgSQLStatsResponse::clear_operations_timed_out_in_queue() {
  operations_timed_out_in_queue_ = 0u;
  clear_has_operations_timed_out_in_queue();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::operations_timed_out_in_queue() const {
  return operations_timed_out_in_queue_;
}
inline void CGCMsgSQLStatsResponse::set_operations_timed_out_in_queue(::google::protobuf::uint32 value) {
  set_has_operations_timed_out_in_queue();
  operations_timed_out_in_queue_ = value;
}

// optional uint32 errors = 9;
inline bool CGCMsgSQLStatsResponse::has_errors() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCMsgSQLStatsResponse::set_has_errors() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CGCMsgSQLStatsResponse::clear_has_errors() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CGCMsgSQLStatsResponse::clear_errors() {
  errors_ = 0u;
  clear_has_errors();
}
inline ::google::protobuf::uint32 CGCMsgSQLStatsResponse::errors() const {
  return errors_;
}
inline void CGCMsgSQLStatsResponse::set_errors(::google::protobuf::uint32 value) {
  set_has_errors();
  errors_ = value;
}

// -------------------------------------------------------------------

// CMsgAMAddFreeLicense

// optional fixed64 steamid = 1;
inline bool CMsgAMAddFreeLicense::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMAddFreeLicense::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMAddFreeLicense::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMAddFreeLicense::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgAMAddFreeLicense::steamid() const {
  return steamid_;
}
inline void CMsgAMAddFreeLicense::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 ip_public = 2;
inline bool CMsgAMAddFreeLicense::has_ip_public() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMAddFreeLicense::set_has_ip_public() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMAddFreeLicense::clear_has_ip_public() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMAddFreeLicense::clear_ip_public() {
  ip_public_ = 0u;
  clear_has_ip_public();
}
inline ::google::protobuf::uint32 CMsgAMAddFreeLicense::ip_public() const {
  return ip_public_;
}
inline void CMsgAMAddFreeLicense::set_ip_public(::google::protobuf::uint32 value) {
  set_has_ip_public();
  ip_public_ = value;
}

// optional uint32 packageid = 3;
inline bool CMsgAMAddFreeLicense::has_packageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMAddFreeLicense::set_has_packageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAMAddFreeLicense::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAMAddFreeLicense::clear_packageid() {
  packageid_ = 0u;
  clear_has_packageid();
}
inline ::google::protobuf::uint32 CMsgAMAddFreeLicense::packageid() const {
  return packageid_;
}
inline void CMsgAMAddFreeLicense::set_packageid(::google::protobuf::uint32 value) {
  set_has_packageid();
  packageid_ = value;
}

// optional string store_country_code = 4;
inline bool CMsgAMAddFreeLicense::has_store_country_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAMAddFreeLicense::set_has_store_country_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgAMAddFreeLicense::clear_has_store_country_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgAMAddFreeLicense::clear_store_country_code() {
  if (store_country_code_ != &::google::protobuf::internal::kEmptyString) {
    store_country_code_->clear();
  }
  clear_has_store_country_code();
}
inline const ::std::string& CMsgAMAddFreeLicense::store_country_code() const {
  return *store_country_code_;
}
inline void CMsgAMAddFreeLicense::set_store_country_code(const ::std::string& value) {
  set_has_store_country_code();
  if (store_country_code_ == &::google::protobuf::internal::kEmptyString) {
    store_country_code_ = new ::std::string;
  }
  store_country_code_->assign(value);
}
inline void CMsgAMAddFreeLicense::set_store_country_code(const char* value) {
  set_has_store_country_code();
  if (store_country_code_ == &::google::protobuf::internal::kEmptyString) {
    store_country_code_ = new ::std::string;
  }
  store_country_code_->assign(value);
}
inline void CMsgAMAddFreeLicense::set_store_country_code(const char* value, size_t size) {
  set_has_store_country_code();
  if (store_country_code_ == &::google::protobuf::internal::kEmptyString) {
    store_country_code_ = new ::std::string;
  }
  store_country_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgAMAddFreeLicense::mutable_store_country_code() {
  set_has_store_country_code();
  if (store_country_code_ == &::google::protobuf::internal::kEmptyString) {
    store_country_code_ = new ::std::string;
  }
  return store_country_code_;
}
inline ::std::string* CMsgAMAddFreeLicense::release_store_country_code() {
  clear_has_store_country_code();
  if (store_country_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = store_country_code_;
    store_country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgAMAddFreeLicense::set_allocated_store_country_code(::std::string* store_country_code) {
  if (store_country_code_ != &::google::protobuf::internal::kEmptyString) {
    delete store_country_code_;
  }
  if (store_country_code) {
    set_has_store_country_code();
    store_country_code_ = store_country_code;
  } else {
    clear_has_store_country_code();
    store_country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgAMAddFreeLicenseResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgAMAddFreeLicenseResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMAddFreeLicenseResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMAddFreeLicenseResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMAddFreeLicenseResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgAMAddFreeLicenseResponse::eresult() const {
  return eresult_;
}
inline void CMsgAMAddFreeLicenseResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional int32 purchase_result_detail = 2;
inline bool CMsgAMAddFreeLicenseResponse::has_purchase_result_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMAddFreeLicenseResponse::set_has_purchase_result_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMAddFreeLicenseResponse::clear_has_purchase_result_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMAddFreeLicenseResponse::clear_purchase_result_detail() {
  purchase_result_detail_ = 0;
  clear_has_purchase_result_detail();
}
inline ::google::protobuf::int32 CMsgAMAddFreeLicenseResponse::purchase_result_detail() const {
  return purchase_result_detail_;
}
inline void CMsgAMAddFreeLicenseResponse::set_purchase_result_detail(::google::protobuf::int32 value) {
  set_has_purchase_result_detail();
  purchase_result_detail_ = value;
}

// optional fixed64 transid = 3;
inline bool CMsgAMAddFreeLicenseResponse::has_transid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMAddFreeLicenseResponse::set_has_transid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAMAddFreeLicenseResponse::clear_has_transid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAMAddFreeLicenseResponse::clear_transid() {
  transid_ = GOOGLE_ULONGLONG(0);
  clear_has_transid();
}
inline ::google::protobuf::uint64 CMsgAMAddFreeLicenseResponse::transid() const {
  return transid_;
}
inline void CMsgAMAddFreeLicenseResponse::set_transid(::google::protobuf::uint64 value) {
  set_has_transid();
  transid_ = value;
}

// -------------------------------------------------------------------

// CGCMsgGetIPLocation

// repeated fixed32 ips = 1;
inline int CGCMsgGetIPLocation::ips_size() const {
  return ips_.size();
}
inline void CGCMsgGetIPLocation::clear_ips() {
  ips_.Clear();
}
inline ::google::protobuf::uint32 CGCMsgGetIPLocation::ips(int index) const {
  return ips_.Get(index);
}
inline void CGCMsgGetIPLocation::set_ips(int index, ::google::protobuf::uint32 value) {
  ips_.Set(index, value);
}
inline void CGCMsgGetIPLocation::add_ips(::google::protobuf::uint32 value) {
  ips_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGCMsgGetIPLocation::ips() const {
  return ips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGCMsgGetIPLocation::mutable_ips() {
  return &ips_;
}

// -------------------------------------------------------------------

// CIPLocationInfo

// optional uint32 ip = 1;
inline bool CIPLocationInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CIPLocationInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CIPLocationInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CIPLocationInfo::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CIPLocationInfo::ip() const {
  return ip_;
}
inline void CIPLocationInfo::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
}

// optional float latitude = 2;
inline bool CIPLocationInfo::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CIPLocationInfo::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CIPLocationInfo::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CIPLocationInfo::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float CIPLocationInfo::latitude() const {
  return latitude_;
}
inline void CIPLocationInfo::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
}

// optional float longitude = 3;
inline bool CIPLocationInfo::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CIPLocationInfo::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CIPLocationInfo::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CIPLocationInfo::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float CIPLocationInfo::longitude() const {
  return longitude_;
}
inline void CIPLocationInfo::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
}

// optional string country = 4;
inline bool CIPLocationInfo::has_country() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CIPLocationInfo::set_has_country() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CIPLocationInfo::clear_has_country() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CIPLocationInfo::clear_country() {
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    country_->clear();
  }
  clear_has_country();
}
inline const ::std::string& CIPLocationInfo::country() const {
  return *country_;
}
inline void CIPLocationInfo::set_country(const ::std::string& value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void CIPLocationInfo::set_country(const char* value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void CIPLocationInfo::set_country(const char* value, size_t size) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CIPLocationInfo::mutable_country() {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  return country_;
}
inline ::std::string* CIPLocationInfo::release_country() {
  clear_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = country_;
    country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CIPLocationInfo::set_allocated_country(::std::string* country) {
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    delete country_;
  }
  if (country) {
    set_has_country();
    country_ = country;
  } else {
    clear_has_country();
    country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string state = 5;
inline bool CIPLocationInfo::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CIPLocationInfo::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CIPLocationInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CIPLocationInfo::clear_state() {
  if (state_ != &::google::protobuf::internal::kEmptyString) {
    state_->clear();
  }
  clear_has_state();
}
inline const ::std::string& CIPLocationInfo::state() const {
  return *state_;
}
inline void CIPLocationInfo::set_state(const ::std::string& value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    state_ = new ::std::string;
  }
  state_->assign(value);
}
inline void CIPLocationInfo::set_state(const char* value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    state_ = new ::std::string;
  }
  state_->assign(value);
}
inline void CIPLocationInfo::set_state(const char* value, size_t size) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    state_ = new ::std::string;
  }
  state_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CIPLocationInfo::mutable_state() {
  set_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    state_ = new ::std::string;
  }
  return state_;
}
inline ::std::string* CIPLocationInfo::release_state() {
  clear_has_state();
  if (state_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = state_;
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CIPLocationInfo::set_allocated_state(::std::string* state) {
  if (state_ != &::google::protobuf::internal::kEmptyString) {
    delete state_;
  }
  if (state) {
    set_has_state();
    state_ = state;
  } else {
    clear_has_state();
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string city = 6;
inline bool CIPLocationInfo::has_city() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CIPLocationInfo::set_has_city() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CIPLocationInfo::clear_has_city() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CIPLocationInfo::clear_city() {
  if (city_ != &::google::protobuf::internal::kEmptyString) {
    city_->clear();
  }
  clear_has_city();
}
inline const ::std::string& CIPLocationInfo::city() const {
  return *city_;
}
inline void CIPLocationInfo::set_city(const ::std::string& value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    city_ = new ::std::string;
  }
  city_->assign(value);
}
inline void CIPLocationInfo::set_city(const char* value) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    city_ = new ::std::string;
  }
  city_->assign(value);
}
inline void CIPLocationInfo::set_city(const char* value, size_t size) {
  set_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    city_ = new ::std::string;
  }
  city_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CIPLocationInfo::mutable_city() {
  set_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    city_ = new ::std::string;
  }
  return city_;
}
inline ::std::string* CIPLocationInfo::release_city() {
  clear_has_city();
  if (city_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = city_;
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CIPLocationInfo::set_allocated_city(::std::string* city) {
  if (city_ != &::google::protobuf::internal::kEmptyString) {
    delete city_;
  }
  if (city) {
    set_has_city();
    city_ = city;
  } else {
    clear_has_city();
    city_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CGCMsgGetIPLocationResponse

// repeated .CIPLocationInfo infos = 1;
inline int CGCMsgGetIPLocationResponse::infos_size() const {
  return infos_.size();
}
inline void CGCMsgGetIPLocationResponse::clear_infos() {
  infos_.Clear();
}
inline const ::CIPLocationInfo& CGCMsgGetIPLocationResponse::infos(int index) const {
  return infos_.Get(index);
}
inline ::CIPLocationInfo* CGCMsgGetIPLocationResponse::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CIPLocationInfo* CGCMsgGetIPLocationResponse::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CIPLocationInfo >&
CGCMsgGetIPLocationResponse::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CIPLocationInfo >*
CGCMsgGetIPLocationResponse::mutable_infos() {
  return &infos_;
}

// -------------------------------------------------------------------

// CGCMsgSystemStatsSchema

// optional uint32 gc_app_id = 1;
inline bool CGCMsgSystemStatsSchema::has_gc_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgSystemStatsSchema::set_has_gc_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgSystemStatsSchema::clear_has_gc_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgSystemStatsSchema::clear_gc_app_id() {
  gc_app_id_ = 0u;
  clear_has_gc_app_id();
}
inline ::google::protobuf::uint32 CGCMsgSystemStatsSchema::gc_app_id() const {
  return gc_app_id_;
}
inline void CGCMsgSystemStatsSchema::set_gc_app_id(::google::protobuf::uint32 value) {
  set_has_gc_app_id();
  gc_app_id_ = value;
}

// optional bytes schema_kv = 2;
inline bool CGCMsgSystemStatsSchema::has_schema_kv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgSystemStatsSchema::set_has_schema_kv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgSystemStatsSchema::clear_has_schema_kv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgSystemStatsSchema::clear_schema_kv() {
  if (schema_kv_ != &::google::protobuf::internal::kEmptyString) {
    schema_kv_->clear();
  }
  clear_has_schema_kv();
}
inline const ::std::string& CGCMsgSystemStatsSchema::schema_kv() const {
  return *schema_kv_;
}
inline void CGCMsgSystemStatsSchema::set_schema_kv(const ::std::string& value) {
  set_has_schema_kv();
  if (schema_kv_ == &::google::protobuf::internal::kEmptyString) {
    schema_kv_ = new ::std::string;
  }
  schema_kv_->assign(value);
}
inline void CGCMsgSystemStatsSchema::set_schema_kv(const char* value) {
  set_has_schema_kv();
  if (schema_kv_ == &::google::protobuf::internal::kEmptyString) {
    schema_kv_ = new ::std::string;
  }
  schema_kv_->assign(value);
}
inline void CGCMsgSystemStatsSchema::set_schema_kv(const void* value, size_t size) {
  set_has_schema_kv();
  if (schema_kv_ == &::google::protobuf::internal::kEmptyString) {
    schema_kv_ = new ::std::string;
  }
  schema_kv_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgSystemStatsSchema::mutable_schema_kv() {
  set_has_schema_kv();
  if (schema_kv_ == &::google::protobuf::internal::kEmptyString) {
    schema_kv_ = new ::std::string;
  }
  return schema_kv_;
}
inline ::std::string* CGCMsgSystemStatsSchema::release_schema_kv() {
  clear_has_schema_kv();
  if (schema_kv_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = schema_kv_;
    schema_kv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CGCMsgSystemStatsSchema::set_allocated_schema_kv(::std::string* schema_kv) {
  if (schema_kv_ != &::google::protobuf::internal::kEmptyString) {
    delete schema_kv_;
  }
  if (schema_kv) {
    set_has_schema_kv();
    schema_kv_ = schema_kv;
  } else {
    clear_has_schema_kv();
    schema_kv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CGCMsgGetSystemStats

// -------------------------------------------------------------------

// CGCMsgGetSystemStatsResponse

// optional uint32 gc_app_id = 1;
inline bool CGCMsgGetSystemStatsResponse::has_gc_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_gc_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_gc_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGetSystemStatsResponse::clear_gc_app_id() {
  gc_app_id_ = 0u;
  clear_has_gc_app_id();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::gc_app_id() const {
  return gc_app_id_;
}
inline void CGCMsgGetSystemStatsResponse::set_gc_app_id(::google::protobuf::uint32 value) {
  set_has_gc_app_id();
  gc_app_id_ = value;
}

// optional bytes stats_kv = 2;
inline bool CGCMsgGetSystemStatsResponse::has_stats_kv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_stats_kv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_stats_kv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGetSystemStatsResponse::clear_stats_kv() {
  if (stats_kv_ != &::google::protobuf::internal::kEmptyString) {
    stats_kv_->clear();
  }
  clear_has_stats_kv();
}
inline const ::std::string& CGCMsgGetSystemStatsResponse::stats_kv() const {
  return *stats_kv_;
}
inline void CGCMsgGetSystemStatsResponse::set_stats_kv(const ::std::string& value) {
  set_has_stats_kv();
  if (stats_kv_ == &::google::protobuf::internal::kEmptyString) {
    stats_kv_ = new ::std::string;
  }
  stats_kv_->assign(value);
}
inline void CGCMsgGetSystemStatsResponse::set_stats_kv(const char* value) {
  set_has_stats_kv();
  if (stats_kv_ == &::google::protobuf::internal::kEmptyString) {
    stats_kv_ = new ::std::string;
  }
  stats_kv_->assign(value);
}
inline void CGCMsgGetSystemStatsResponse::set_stats_kv(const void* value, size_t size) {
  set_has_stats_kv();
  if (stats_kv_ == &::google::protobuf::internal::kEmptyString) {
    stats_kv_ = new ::std::string;
  }
  stats_kv_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCMsgGetSystemStatsResponse::mutable_stats_kv() {
  set_has_stats_kv();
  if (stats_kv_ == &::google::protobuf::internal::kEmptyString) {
    stats_kv_ = new ::std::string;
  }
  return stats_kv_;
}
inline ::std::string* CGCMsgGetSystemStatsResponse::release_stats_kv() {
  clear_has_stats_kv();
  if (stats_kv_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stats_kv_;
    stats_kv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CGCMsgGetSystemStatsResponse::set_allocated_stats_kv(::std::string* stats_kv) {
  if (stats_kv_ != &::google::protobuf::internal::kEmptyString) {
    delete stats_kv_;
  }
  if (stats_kv) {
    set_has_stats_kv();
    stats_kv_ = stats_kv;
  } else {
    clear_has_stats_kv();
    stats_kv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 active_jobs = 3;
inline bool CGCMsgGetSystemStatsResponse::has_active_jobs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_active_jobs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_active_jobs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgGetSystemStatsResponse::clear_active_jobs() {
  active_jobs_ = 0u;
  clear_has_active_jobs();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::active_jobs() const {
  return active_jobs_;
}
inline void CGCMsgGetSystemStatsResponse::set_active_jobs(::google::protobuf::uint32 value) {
  set_has_active_jobs();
  active_jobs_ = value;
}

// optional uint32 yielding_jobs = 4;
inline bool CGCMsgGetSystemStatsResponse::has_yielding_jobs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_yielding_jobs() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_yielding_jobs() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgGetSystemStatsResponse::clear_yielding_jobs() {
  yielding_jobs_ = 0u;
  clear_has_yielding_jobs();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::yielding_jobs() const {
  return yielding_jobs_;
}
inline void CGCMsgGetSystemStatsResponse::set_yielding_jobs(::google::protobuf::uint32 value) {
  set_has_yielding_jobs();
  yielding_jobs_ = value;
}

// optional uint32 user_sessions = 5;
inline bool CGCMsgGetSystemStatsResponse::has_user_sessions() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_user_sessions() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_user_sessions() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsgGetSystemStatsResponse::clear_user_sessions() {
  user_sessions_ = 0u;
  clear_has_user_sessions();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::user_sessions() const {
  return user_sessions_;
}
inline void CGCMsgGetSystemStatsResponse::set_user_sessions(::google::protobuf::uint32 value) {
  set_has_user_sessions();
  user_sessions_ = value;
}

// optional uint32 game_server_sessions = 6;
inline bool CGCMsgGetSystemStatsResponse::has_game_server_sessions() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_game_server_sessions() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_game_server_sessions() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGCMsgGetSystemStatsResponse::clear_game_server_sessions() {
  game_server_sessions_ = 0u;
  clear_has_game_server_sessions();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::game_server_sessions() const {
  return game_server_sessions_;
}
inline void CGCMsgGetSystemStatsResponse::set_game_server_sessions(::google::protobuf::uint32 value) {
  set_has_game_server_sessions();
  game_server_sessions_ = value;
}

// optional uint32 socaches = 7;
inline bool CGCMsgGetSystemStatsResponse::has_socaches() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_socaches() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_socaches() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGCMsgGetSystemStatsResponse::clear_socaches() {
  socaches_ = 0u;
  clear_has_socaches();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches() const {
  return socaches_;
}
inline void CGCMsgGetSystemStatsResponse::set_socaches(::google::protobuf::uint32 value) {
  set_has_socaches();
  socaches_ = value;
}

// optional uint32 socaches_to_unload = 8;
inline bool CGCMsgGetSystemStatsResponse::has_socaches_to_unload() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_socaches_to_unload() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_socaches_to_unload() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGCMsgGetSystemStatsResponse::clear_socaches_to_unload() {
  socaches_to_unload_ = 0u;
  clear_has_socaches_to_unload();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches_to_unload() const {
  return socaches_to_unload_;
}
inline void CGCMsgGetSystemStatsResponse::set_socaches_to_unload(::google::protobuf::uint32 value) {
  set_has_socaches_to_unload();
  socaches_to_unload_ = value;
}

// optional uint32 socaches_loading = 9;
inline bool CGCMsgGetSystemStatsResponse::has_socaches_loading() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_socaches_loading() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_socaches_loading() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CGCMsgGetSystemStatsResponse::clear_socaches_loading() {
  socaches_loading_ = 0u;
  clear_has_socaches_loading();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::socaches_loading() const {
  return socaches_loading_;
}
inline void CGCMsgGetSystemStatsResponse::set_socaches_loading(::google::protobuf::uint32 value) {
  set_has_socaches_loading();
  socaches_loading_ = value;
}

// optional uint32 writeback_queue = 10;
inline bool CGCMsgGetSystemStatsResponse::has_writeback_queue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_writeback_queue() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_writeback_queue() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CGCMsgGetSystemStatsResponse::clear_writeback_queue() {
  writeback_queue_ = 0u;
  clear_has_writeback_queue();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::writeback_queue() const {
  return writeback_queue_;
}
inline void CGCMsgGetSystemStatsResponse::set_writeback_queue(::google::protobuf::uint32 value) {
  set_has_writeback_queue();
  writeback_queue_ = value;
}

// optional uint32 steamid_locks = 11;
inline bool CGCMsgGetSystemStatsResponse::has_steamid_locks() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_steamid_locks() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_steamid_locks() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CGCMsgGetSystemStatsResponse::clear_steamid_locks() {
  steamid_locks_ = 0u;
  clear_has_steamid_locks();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::steamid_locks() const {
  return steamid_locks_;
}
inline void CGCMsgGetSystemStatsResponse::set_steamid_locks(::google::protobuf::uint32 value) {
  set_has_steamid_locks();
  steamid_locks_ = value;
}

// optional uint32 logon_queue = 12;
inline bool CGCMsgGetSystemStatsResponse::has_logon_queue() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_logon_queue() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_logon_queue() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CGCMsgGetSystemStatsResponse::clear_logon_queue() {
  logon_queue_ = 0u;
  clear_has_logon_queue();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::logon_queue() const {
  return logon_queue_;
}
inline void CGCMsgGetSystemStatsResponse::set_logon_queue(::google::protobuf::uint32 value) {
  set_has_logon_queue();
  logon_queue_ = value;
}

// optional uint32 logon_jobs = 13;
inline bool CGCMsgGetSystemStatsResponse::has_logon_jobs() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CGCMsgGetSystemStatsResponse::set_has_logon_jobs() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CGCMsgGetSystemStatsResponse::clear_has_logon_jobs() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CGCMsgGetSystemStatsResponse::clear_logon_jobs() {
  logon_jobs_ = 0u;
  clear_has_logon_jobs();
}
inline ::google::protobuf::uint32 CGCMsgGetSystemStatsResponse::logon_jobs() const {
  return logon_jobs_;
}
inline void CGCMsgGetSystemStatsResponse::set_logon_jobs(::google::protobuf::uint32 value) {
  set_has_logon_jobs();
  logon_jobs_ = value;
}

// -------------------------------------------------------------------

// CMsgAMSendEmail_ReplacementToken

// optional string token_name = 1;
inline bool CMsgAMSendEmail_ReplacementToken::has_token_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMSendEmail_ReplacementToken::set_has_token_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMSendEmail_ReplacementToken::clear_has_token_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMSendEmail_ReplacementToken::clear_token_name() {
  if (token_name_ != &::google::protobuf::internal::kEmptyString) {
    token_name_->clear();
  }
  clear_has_token_name();
}
inline const ::std::string& CMsgAMSendEmail_ReplacementToken::token_name() const {
  return *token_name_;
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_name(const ::std::string& value) {
  set_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    token_name_ = new ::std::string;
  }
  token_name_->assign(value);
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_name(const char* value) {
  set_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    token_name_ = new ::std::string;
  }
  token_name_->assign(value);
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_name(const char* value, size_t size) {
  set_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    token_name_ = new ::std::string;
  }
  token_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgAMSendEmail_ReplacementToken::mutable_token_name() {
  set_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    token_name_ = new ::std::string;
  }
  return token_name_;
}
inline ::std::string* CMsgAMSendEmail_ReplacementToken::release_token_name() {
  clear_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_name_;
    token_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgAMSendEmail_ReplacementToken::set_allocated_token_name(::std::string* token_name) {
  if (token_name_ != &::google::protobuf::internal::kEmptyString) {
    delete token_name_;
  }
  if (token_name) {
    set_has_token_name();
    token_name_ = token_name;
  } else {
    clear_has_token_name();
    token_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string token_value = 2;
inline bool CMsgAMSendEmail_ReplacementToken::has_token_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMSendEmail_ReplacementToken::set_has_token_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMSendEmail_ReplacementToken::clear_has_token_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMSendEmail_ReplacementToken::clear_token_value() {
  if (token_value_ != &::google::protobuf::internal::kEmptyString) {
    token_value_->clear();
  }
  clear_has_token_value();
}
inline const ::std::string& CMsgAMSendEmail_ReplacementToken::token_value() const {
  return *token_value_;
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_value(const ::std::string& value) {
  set_has_token_value();
  if (token_value_ == &::google::protobuf::internal::kEmptyString) {
    token_value_ = new ::std::string;
  }
  token_value_->assign(value);
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_value(const char* value) {
  set_has_token_value();
  if (token_value_ == &::google::protobuf::internal::kEmptyString) {
    token_value_ = new ::std::string;
  }
  token_value_->assign(value);
}
inline void CMsgAMSendEmail_ReplacementToken::set_token_value(const char* value, size_t size) {
  set_has_token_value();
  if (token_value_ == &::google::protobuf::internal::kEmptyString) {
    token_value_ = new ::std::string;
  }
  token_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgAMSendEmail_ReplacementToken::mutable_token_value() {
  set_has_token_value();
  if (token_value_ == &::google::protobuf::internal::kEmptyString) {
    token_value_ = new ::std::string;
  }
  return token_value_;
}
inline ::std::string* CMsgAMSendEmail_ReplacementToken::release_token_value() {
  clear_has_token_value();
  if (token_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_value_;
    token_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgAMSendEmail_ReplacementToken::set_allocated_token_value(::std::string* token_value) {
  if (token_value_ != &::google::protobuf::internal::kEmptyString) {
    delete token_value_;
  }
  if (token_value) {
    set_has_token_value();
    token_value_ = token_value;
  } else {
    clear_has_token_value();
    token_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgAMSendEmail_PersonaNameReplacementToken

// optional fixed64 steamid = 1;
inline bool CMsgAMSendEmail_PersonaNameReplacementToken::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgAMSendEmail_PersonaNameReplacementToken::steamid() const {
  return steamid_;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional string token_name = 2;
inline bool CMsgAMSendEmail_PersonaNameReplacementToken::has_token_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_has_token_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::clear_has_token_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::clear_token_name() {
  if (token_name_ != &::google::protobuf::internal::kEmptyString) {
    token_name_->clear();
  }
  clear_has_token_name();
}
inline const ::std::string& CMsgAMSendEmail_PersonaNameReplacementToken::token_name() const {
  return *token_name_;
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const ::std::string& value) {
  set_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    token_name_ = new ::std::string;
  }
  token_name_->assign(value);
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const char* value) {
  set_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    token_name_ = new ::std::string;
  }
  token_name_->assign(value);
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_token_name(const char* value, size_t size) {
  set_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    token_name_ = new ::std::string;
  }
  token_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgAMSendEmail_PersonaNameReplacementToken::mutable_token_name() {
  set_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    token_name_ = new ::std::string;
  }
  return token_name_;
}
inline ::std::string* CMsgAMSendEmail_PersonaNameReplacementToken::release_token_name() {
  clear_has_token_name();
  if (token_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_name_;
    token_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgAMSendEmail_PersonaNameReplacementToken::set_allocated_token_name(::std::string* token_name) {
  if (token_name_ != &::google::protobuf::internal::kEmptyString) {
    delete token_name_;
  }
  if (token_name) {
    set_has_token_name();
    token_name_ = token_name;
  } else {
    clear_has_token_name();
    token_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgAMSendEmail

// optional fixed64 steamid = 1;
inline bool CMsgAMSendEmail::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMSendEmail::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMSendEmail::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMSendEmail::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgAMSendEmail::steamid() const {
  return steamid_;
}
inline void CMsgAMSendEmail::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 email_msg_type = 2;
inline bool CMsgAMSendEmail::has_email_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMSendEmail::set_has_email_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMSendEmail::clear_has_email_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMSendEmail::clear_email_msg_type() {
  email_msg_type_ = 0u;
  clear_has_email_msg_type();
}
inline ::google::protobuf::uint32 CMsgAMSendEmail::email_msg_type() const {
  return email_msg_type_;
}
inline void CMsgAMSendEmail::set_email_msg_type(::google::protobuf::uint32 value) {
  set_has_email_msg_type();
  email_msg_type_ = value;
}

// optional uint32 email_format = 3;
inline bool CMsgAMSendEmail::has_email_format() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMSendEmail::set_has_email_format() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAMSendEmail::clear_has_email_format() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAMSendEmail::clear_email_format() {
  email_format_ = 0u;
  clear_has_email_format();
}
inline ::google::protobuf::uint32 CMsgAMSendEmail::email_format() const {
  return email_format_;
}
inline void CMsgAMSendEmail::set_email_format(::google::protobuf::uint32 value) {
  set_has_email_format();
  email_format_ = value;
}

// repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
inline int CMsgAMSendEmail::persona_name_tokens_size() const {
  return persona_name_tokens_.size();
}
inline void CMsgAMSendEmail::clear_persona_name_tokens() {
  persona_name_tokens_.Clear();
}
inline const ::CMsgAMSendEmail_PersonaNameReplacementToken& CMsgAMSendEmail::persona_name_tokens(int index) const {
  return persona_name_tokens_.Get(index);
}
inline ::CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail::mutable_persona_name_tokens(int index) {
  return persona_name_tokens_.Mutable(index);
}
inline ::CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail::add_persona_name_tokens() {
  return persona_name_tokens_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_PersonaNameReplacementToken >&
CMsgAMSendEmail::persona_name_tokens() const {
  return persona_name_tokens_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_PersonaNameReplacementToken >*
CMsgAMSendEmail::mutable_persona_name_tokens() {
  return &persona_name_tokens_;
}

// optional uint32 source_gc = 6;
inline bool CMsgAMSendEmail::has_source_gc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAMSendEmail::set_has_source_gc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgAMSendEmail::clear_has_source_gc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgAMSendEmail::clear_source_gc() {
  source_gc_ = 0u;
  clear_has_source_gc();
}
inline ::google::protobuf::uint32 CMsgAMSendEmail::source_gc() const {
  return source_gc_;
}
inline void CMsgAMSendEmail::set_source_gc(::google::protobuf::uint32 value) {
  set_has_source_gc();
  source_gc_ = value;
}

// repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
inline int CMsgAMSendEmail::tokens_size() const {
  return tokens_.size();
}
inline void CMsgAMSendEmail::clear_tokens() {
  tokens_.Clear();
}
inline const ::CMsgAMSendEmail_ReplacementToken& CMsgAMSendEmail::tokens(int index) const {
  return tokens_.Get(index);
}
inline ::CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail::mutable_tokens(int index) {
  return tokens_.Mutable(index);
}
inline ::CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail::add_tokens() {
  return tokens_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_ReplacementToken >&
CMsgAMSendEmail::tokens() const {
  return tokens_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgAMSendEmail_ReplacementToken >*
CMsgAMSendEmail::mutable_tokens() {
  return &tokens_;
}

// -------------------------------------------------------------------

// CMsgAMSendEmailResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgAMSendEmailResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMSendEmailResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMSendEmailResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMSendEmailResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgAMSendEmailResponse::eresult() const {
  return eresult_;
}
inline void CMsgAMSendEmailResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgGCGetEmailTemplate

// optional uint32 app_id = 1;
inline bool CMsgGCGetEmailTemplate::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetEmailTemplate::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetEmailTemplate::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetEmailTemplate::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgGCGetEmailTemplate::app_id() const {
  return app_id_;
}
inline void CMsgGCGetEmailTemplate::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional uint32 email_msg_type = 2;
inline bool CMsgGCGetEmailTemplate::has_email_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetEmailTemplate::set_has_email_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCGetEmailTemplate::clear_has_email_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCGetEmailTemplate::clear_email_msg_type() {
  email_msg_type_ = 0u;
  clear_has_email_msg_type();
}
inline ::google::protobuf::uint32 CMsgGCGetEmailTemplate::email_msg_type() const {
  return email_msg_type_;
}
inline void CMsgGCGetEmailTemplate::set_email_msg_type(::google::protobuf::uint32 value) {
  set_has_email_msg_type();
  email_msg_type_ = value;
}

// optional int32 email_lang = 3;
inline bool CMsgGCGetEmailTemplate::has_email_lang() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetEmailTemplate::set_has_email_lang() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCGetEmailTemplate::clear_has_email_lang() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCGetEmailTemplate::clear_email_lang() {
  email_lang_ = 0;
  clear_has_email_lang();
}
inline ::google::protobuf::int32 CMsgGCGetEmailTemplate::email_lang() const {
  return email_lang_;
}
inline void CMsgGCGetEmailTemplate::set_email_lang(::google::protobuf::int32 value) {
  set_has_email_lang();
  email_lang_ = value;
}

// optional int32 email_format = 4;
inline bool CMsgGCGetEmailTemplate::has_email_format() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCGetEmailTemplate::set_has_email_format() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCGetEmailTemplate::clear_has_email_format() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCGetEmailTemplate::clear_email_format() {
  email_format_ = 0;
  clear_has_email_format();
}
inline ::google::protobuf::int32 CMsgGCGetEmailTemplate::email_format() const {
  return email_format_;
}
inline void CMsgGCGetEmailTemplate::set_email_format(::google::protobuf::int32 value) {
  set_has_email_format();
  email_format_ = value;
}

// -------------------------------------------------------------------

// CMsgGCGetEmailTemplateResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgGCGetEmailTemplateResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetEmailTemplateResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetEmailTemplateResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetEmailTemplateResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgGCGetEmailTemplateResponse::eresult() const {
  return eresult_;
}
inline void CMsgGCGetEmailTemplateResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional bool template_exists = 2;
inline bool CMsgGCGetEmailTemplateResponse::has_template_exists() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetEmailTemplateResponse::set_has_template_exists() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCGetEmailTemplateResponse::clear_has_template_exists() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCGetEmailTemplateResponse::clear_template_exists() {
  template_exists_ = false;
  clear_has_template_exists();
}
inline bool CMsgGCGetEmailTemplateResponse::template_exists() const {
  return template_exists_;
}
inline void CMsgGCGetEmailTemplateResponse::set_template_exists(bool value) {
  set_has_template_exists();
  template_exists_ = value;
}

// optional string template = 3;
inline bool CMsgGCGetEmailTemplateResponse::has_template_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetEmailTemplateResponse::set_has_template_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCGetEmailTemplateResponse::clear_has_template_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCGetEmailTemplateResponse::clear_template_() {
  if (template__ != &::google::protobuf::internal::kEmptyString) {
    template__->clear();
  }
  clear_has_template_();
}
inline const ::std::string& CMsgGCGetEmailTemplateResponse::template_() const {
  return *template__;
}
inline void CMsgGCGetEmailTemplateResponse::set_template_(const ::std::string& value) {
  set_has_template_();
  if (template__ == &::google::protobuf::internal::kEmptyString) {
    template__ = new ::std::string;
  }
  template__->assign(value);
}
inline void CMsgGCGetEmailTemplateResponse::set_template_(const char* value) {
  set_has_template_();
  if (template__ == &::google::protobuf::internal::kEmptyString) {
    template__ = new ::std::string;
  }
  template__->assign(value);
}
inline void CMsgGCGetEmailTemplateResponse::set_template_(const char* value, size_t size) {
  set_has_template_();
  if (template__ == &::google::protobuf::internal::kEmptyString) {
    template__ = new ::std::string;
  }
  template__->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCGetEmailTemplateResponse::mutable_template_() {
  set_has_template_();
  if (template__ == &::google::protobuf::internal::kEmptyString) {
    template__ = new ::std::string;
  }
  return template__;
}
inline ::std::string* CMsgGCGetEmailTemplateResponse::release_template_() {
  clear_has_template_();
  if (template__ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = template__;
    template__ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCGetEmailTemplateResponse::set_allocated_template_(::std::string* template_) {
  if (template__ != &::google::protobuf::internal::kEmptyString) {
    delete template__;
  }
  if (template_) {
    set_has_template_();
    template__ = template_;
  } else {
    clear_has_template_();
    template__ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgAMGrantGuestPasses2

// optional fixed64 steam_id = 1;
inline bool CMsgAMGrantGuestPasses2::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGrantGuestPasses2::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMGrantGuestPasses2::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMGrantGuestPasses2::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgAMGrantGuestPasses2::steam_id() const {
  return steam_id_;
}
inline void CMsgAMGrantGuestPasses2::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// optional uint32 package_id = 2;
inline bool CMsgAMGrantGuestPasses2::has_package_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGrantGuestPasses2::set_has_package_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMGrantGuestPasses2::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMGrantGuestPasses2::clear_package_id() {
  package_id_ = 0u;
  clear_has_package_id();
}
inline ::google::protobuf::uint32 CMsgAMGrantGuestPasses2::package_id() const {
  return package_id_;
}
inline void CMsgAMGrantGuestPasses2::set_package_id(::google::protobuf::uint32 value) {
  set_has_package_id();
  package_id_ = value;
}

// optional int32 passes_to_grant = 3;
inline bool CMsgAMGrantGuestPasses2::has_passes_to_grant() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAMGrantGuestPasses2::set_has_passes_to_grant() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAMGrantGuestPasses2::clear_has_passes_to_grant() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAMGrantGuestPasses2::clear_passes_to_grant() {
  passes_to_grant_ = 0;
  clear_has_passes_to_grant();
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2::passes_to_grant() const {
  return passes_to_grant_;
}
inline void CMsgAMGrantGuestPasses2::set_passes_to_grant(::google::protobuf::int32 value) {
  set_has_passes_to_grant();
  passes_to_grant_ = value;
}

// optional int32 days_to_expiration = 4;
inline bool CMsgAMGrantGuestPasses2::has_days_to_expiration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAMGrantGuestPasses2::set_has_days_to_expiration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgAMGrantGuestPasses2::clear_has_days_to_expiration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgAMGrantGuestPasses2::clear_days_to_expiration() {
  days_to_expiration_ = 0;
  clear_has_days_to_expiration();
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2::days_to_expiration() const {
  return days_to_expiration_;
}
inline void CMsgAMGrantGuestPasses2::set_days_to_expiration(::google::protobuf::int32 value) {
  set_has_days_to_expiration();
  days_to_expiration_ = value;
}

// optional int32 action = 5;
inline bool CMsgAMGrantGuestPasses2::has_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAMGrantGuestPasses2::set_has_action() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgAMGrantGuestPasses2::clear_has_action() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgAMGrantGuestPasses2::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2::action() const {
  return action_;
}
inline void CMsgAMGrantGuestPasses2::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
}

// -------------------------------------------------------------------

// CMsgAMGrantGuestPasses2Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgAMGrantGuestPasses2Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMGrantGuestPasses2Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMGrantGuestPasses2Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMGrantGuestPasses2Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2Response::eresult() const {
  return eresult_;
}
inline void CMsgAMGrantGuestPasses2Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional int32 passes_granted = 2 [default = 0];
inline bool CMsgAMGrantGuestPasses2Response::has_passes_granted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMGrantGuestPasses2Response::set_has_passes_granted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMGrantGuestPasses2Response::clear_has_passes_granted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMGrantGuestPasses2Response::clear_passes_granted() {
  passes_granted_ = 0;
  clear_has_passes_granted();
}
inline ::google::protobuf::int32 CMsgAMGrantGuestPasses2Response::passes_granted() const {
  return passes_granted_;
}
inline void CMsgAMGrantGuestPasses2Response::set_passes_granted(::google::protobuf::int32 value) {
  set_has_passes_granted();
  passes_granted_ = value;
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetAccountDetails

// optional fixed64 steamid = 1;
inline bool CGCSystemMsg_GetAccountDetails::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCSystemMsg_GetAccountDetails::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCSystemMsg_GetAccountDetails::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CGCSystemMsg_GetAccountDetails::steamid() const {
  return steamid_;
}
inline void CGCSystemMsg_GetAccountDetails::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 appid = 2;
inline bool CGCSystemMsg_GetAccountDetails::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCSystemMsg_GetAccountDetails::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCSystemMsg_GetAccountDetails::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails::appid() const {
  return appid_;
}
inline void CGCSystemMsg_GetAccountDetails::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetAccountDetails_Response

// optional uint32 eresult_deprecated = 1 [default = 2];
inline bool CGCSystemMsg_GetAccountDetails_Response::has_eresult_deprecated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_eresult_deprecated() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_eresult_deprecated() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_eresult_deprecated() {
  eresult_deprecated_ = 2u;
  clear_has_eresult_deprecated();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::eresult_deprecated() const {
  return eresult_deprecated_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_eresult_deprecated(::google::protobuf::uint32 value) {
  set_has_eresult_deprecated();
  eresult_deprecated_ = value;
}

// optional string account_name = 2;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_account_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_account_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_account_name() {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    account_name_->clear();
  }
  clear_has_account_name();
}
inline const ::std::string& CGCSystemMsg_GetAccountDetails_Response::account_name() const {
  return *account_name_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const ::std::string& value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const char* value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_account_name() {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  return account_name_;
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_account_name() {
  clear_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_name_;
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_account_name(::std::string* account_name) {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    delete account_name_;
  }
  if (account_name) {
    set_has_account_name();
    account_name_ = account_name;
  } else {
    clear_has_account_name();
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string persona_name = 3;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_persona_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_persona_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::kEmptyString) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CGCSystemMsg_GetAccountDetails_Response::persona_name() const {
  return *persona_name_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    persona_name_ = new ::std::string;
  }
  return persona_name_;
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::kEmptyString) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool is_profile_public = 4;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_profile_public() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_profile_public() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_profile_public() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_profile_public() {
  is_profile_public_ = false;
  clear_has_is_profile_public();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_profile_public() const {
  return is_profile_public_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_profile_public(bool value) {
  set_has_is_profile_public();
  is_profile_public_ = value;
}

// optional bool is_inventory_public = 5;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_inventory_public() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_inventory_public() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_inventory_public() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_inventory_public() {
  is_inventory_public_ = false;
  clear_has_is_inventory_public();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_inventory_public() const {
  return is_inventory_public_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_inventory_public(bool value) {
  set_has_is_inventory_public();
  is_inventory_public_ = value;
}

// optional bool is_vac_banned = 7;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_vac_banned() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_vac_banned() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_vac_banned() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_vac_banned() {
  is_vac_banned_ = false;
  clear_has_is_vac_banned();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_vac_banned() const {
  return is_vac_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_vac_banned(bool value) {
  set_has_is_vac_banned();
  is_vac_banned_ = value;
}

// optional bool is_cyber_cafe = 8;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_cyber_cafe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_cyber_cafe() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_cyber_cafe() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_cyber_cafe() {
  is_cyber_cafe_ = false;
  clear_has_is_cyber_cafe();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_cyber_cafe() const {
  return is_cyber_cafe_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_cyber_cafe(bool value) {
  set_has_is_cyber_cafe();
  is_cyber_cafe_ = value;
}

// optional bool is_school_account = 9;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_school_account() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_school_account() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_school_account() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_school_account() {
  is_school_account_ = false;
  clear_has_is_school_account();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_school_account() const {
  return is_school_account_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_school_account(bool value) {
  set_has_is_school_account();
  is_school_account_ = value;
}

// optional bool is_limited = 10;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_limited() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_limited() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_limited() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_limited() {
  is_limited_ = false;
  clear_has_is_limited();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_limited() const {
  return is_limited_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_limited(bool value) {
  set_has_is_limited();
  is_limited_ = value;
}

// optional bool is_subscribed = 11;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_subscribed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_subscribed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_subscribed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_subscribed() {
  is_subscribed_ = false;
  clear_has_is_subscribed();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_subscribed() const {
  return is_subscribed_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_subscribed(bool value) {
  set_has_is_subscribed();
  is_subscribed_ = value;
}

// optional uint32 package = 12;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_package() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_package() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_package() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_package() {
  package_ = 0u;
  clear_has_package();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::package() const {
  return package_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_package(::google::protobuf::uint32 value) {
  set_has_package();
  package_ = value;
}

// optional bool is_free_trial_account = 13;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_free_trial_account() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_free_trial_account() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_free_trial_account() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_free_trial_account() {
  is_free_trial_account_ = false;
  clear_has_is_free_trial_account();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_free_trial_account() const {
  return is_free_trial_account_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_free_trial_account(bool value) {
  set_has_is_free_trial_account();
  is_free_trial_account_ = value;
}

// optional uint32 free_trial_expiration = 14;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_free_trial_expiration() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_free_trial_expiration() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_free_trial_expiration() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_free_trial_expiration() {
  free_trial_expiration_ = 0u;
  clear_has_free_trial_expiration();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::free_trial_expiration() const {
  return free_trial_expiration_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_free_trial_expiration(::google::protobuf::uint32 value) {
  set_has_free_trial_expiration();
  free_trial_expiration_ = value;
}

// optional bool is_low_violence = 15;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_low_violence() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_low_violence() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_low_violence() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_low_violence() {
  is_low_violence_ = false;
  clear_has_is_low_violence();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_low_violence() const {
  return is_low_violence_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_low_violence(bool value) {
  set_has_is_low_violence();
  is_low_violence_ = value;
}

// optional bool is_account_locked_down = 16;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_account_locked_down() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_account_locked_down() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_account_locked_down() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_account_locked_down() {
  is_account_locked_down_ = false;
  clear_has_is_account_locked_down();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_account_locked_down() const {
  return is_account_locked_down_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_account_locked_down(bool value) {
  set_has_is_account_locked_down();
  is_account_locked_down_ = value;
}

// optional bool is_community_banned = 17;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_community_banned() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_community_banned() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_community_banned() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_community_banned() {
  is_community_banned_ = false;
  clear_has_is_community_banned();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_community_banned() const {
  return is_community_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_community_banned(bool value) {
  set_has_is_community_banned();
  is_community_banned_ = value;
}

// optional bool is_trade_banned = 18;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_trade_banned() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_trade_banned() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_trade_banned() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_trade_banned() {
  is_trade_banned_ = false;
  clear_has_is_trade_banned();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_trade_banned() const {
  return is_trade_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_trade_banned(bool value) {
  set_has_is_trade_banned();
  is_trade_banned_ = value;
}

// optional uint32 trade_ban_expiration = 19;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_trade_ban_expiration() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_trade_ban_expiration() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_trade_ban_expiration() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_trade_ban_expiration() {
  trade_ban_expiration_ = 0u;
  clear_has_trade_ban_expiration();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::trade_ban_expiration() const {
  return trade_ban_expiration_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_trade_ban_expiration(::google::protobuf::uint32 value) {
  set_has_trade_ban_expiration();
  trade_ban_expiration_ = value;
}

// optional uint32 accountid = 20;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_accountid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_accountid() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_accountid() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::accountid() const {
  return accountid_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 suspension_end_time = 21;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_suspension_end_time() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_suspension_end_time() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_suspension_end_time() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_suspension_end_time() {
  suspension_end_time_ = 0u;
  clear_has_suspension_end_time();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::suspension_end_time() const {
  return suspension_end_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_suspension_end_time(::google::protobuf::uint32 value) {
  set_has_suspension_end_time();
  suspension_end_time_ = value;
}

// optional string currency = 22;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_currency() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_currency() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_currency() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_currency() {
  if (currency_ != &::google::protobuf::internal::kEmptyString) {
    currency_->clear();
  }
  clear_has_currency();
}
inline const ::std::string& CGCSystemMsg_GetAccountDetails_Response::currency() const {
  return *currency_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_currency(const ::std::string& value) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    currency_ = new ::std::string;
  }
  currency_->assign(value);
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_currency(const char* value) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    currency_ = new ::std::string;
  }
  currency_->assign(value);
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_currency(const char* value, size_t size) {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    currency_ = new ::std::string;
  }
  currency_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_currency() {
  set_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    currency_ = new ::std::string;
  }
  return currency_;
}
inline ::std::string* CGCSystemMsg_GetAccountDetails_Response::release_currency() {
  clear_has_currency();
  if (currency_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = currency_;
    currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_currency(::std::string* currency) {
  if (currency_ != &::google::protobuf::internal::kEmptyString) {
    delete currency_;
  }
  if (currency) {
    set_has_currency();
    currency_ = currency;
  } else {
    clear_has_currency();
    currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 steam_level = 23;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_steam_level() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_steam_level() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_steam_level() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_steam_level() {
  steam_level_ = 0u;
  clear_has_steam_level();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::steam_level() const {
  return steam_level_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_steam_level(::google::protobuf::uint32 value) {
  set_has_steam_level();
  steam_level_ = value;
}

// optional uint32 friend_count = 24;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_friend_count() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_friend_count() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_friend_count() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_friend_count() {
  friend_count_ = 0u;
  clear_has_friend_count();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::friend_count() const {
  return friend_count_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_friend_count(::google::protobuf::uint32 value) {
  set_has_friend_count();
  friend_count_ = value;
}

// optional uint32 account_creation_time = 25;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_account_creation_time() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_account_creation_time() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_account_creation_time() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_account_creation_time() {
  account_creation_time_ = 0u;
  clear_has_account_creation_time();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::account_creation_time() const {
  return account_creation_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_creation_time(::google::protobuf::uint32 value) {
  set_has_account_creation_time();
  account_creation_time_ = value;
}

// optional bool is_steamguard_enabled = 27;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_steamguard_enabled() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_steamguard_enabled() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_steamguard_enabled() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_steamguard_enabled() {
  is_steamguard_enabled_ = false;
  clear_has_is_steamguard_enabled();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_steamguard_enabled() const {
  return is_steamguard_enabled_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_steamguard_enabled(bool value) {
  set_has_is_steamguard_enabled();
  is_steamguard_enabled_ = value;
}

// optional bool is_phone_verified = 28;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_phone_verified() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_phone_verified() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_phone_verified() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_phone_verified() {
  is_phone_verified_ = false;
  clear_has_is_phone_verified();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_phone_verified() const {
  return is_phone_verified_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_phone_verified(bool value) {
  set_has_is_phone_verified();
  is_phone_verified_ = value;
}

// optional bool is_two_factor_auth_enabled = 29;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_two_factor_auth_enabled() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_two_factor_auth_enabled() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_two_factor_auth_enabled() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_two_factor_auth_enabled() {
  is_two_factor_auth_enabled_ = false;
  clear_has_is_two_factor_auth_enabled();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_two_factor_auth_enabled() const {
  return is_two_factor_auth_enabled_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_two_factor_auth_enabled(bool value) {
  set_has_is_two_factor_auth_enabled();
  is_two_factor_auth_enabled_ = value;
}

// optional uint32 two_factor_enabled_time = 30;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_two_factor_enabled_time() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_two_factor_enabled_time() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_two_factor_enabled_time() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_two_factor_enabled_time() {
  two_factor_enabled_time_ = 0u;
  clear_has_two_factor_enabled_time();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::two_factor_enabled_time() const {
  return two_factor_enabled_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_two_factor_enabled_time(::google::protobuf::uint32 value) {
  set_has_two_factor_enabled_time();
  two_factor_enabled_time_ = value;
}

// optional uint32 phone_verification_time = 31;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_phone_verification_time() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_phone_verification_time() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_phone_verification_time() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_phone_verification_time() {
  phone_verification_time_ = 0u;
  clear_has_phone_verification_time();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetAccountDetails_Response::phone_verification_time() const {
  return phone_verification_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_phone_verification_time(::google::protobuf::uint32 value) {
  set_has_phone_verification_time();
  phone_verification_time_ = value;
}

// optional uint64 phone_id = 33;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_phone_id() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_phone_id() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_phone_id() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_phone_id() {
  phone_id_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_id();
}
inline ::google::protobuf::uint64 CGCSystemMsg_GetAccountDetails_Response::phone_id() const {
  return phone_id_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_phone_id(::google::protobuf::uint64 value) {
  set_has_phone_id();
  phone_id_ = value;
}

// optional bool is_phone_identifying = 34;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_phone_identifying() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_is_phone_identifying() {
  _has_bits_[0] |= 0x40000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_is_phone_identifying() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_phone_identifying() {
  is_phone_identifying_ = false;
  clear_has_is_phone_identifying();
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_phone_identifying() const {
  return is_phone_identifying_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_phone_identifying(bool value) {
  set_has_is_phone_identifying();
  is_phone_identifying_ = value;
}

// -------------------------------------------------------------------

// CMsgGCGetPersonaNames

// repeated fixed64 steamids = 1;
inline int CMsgGCGetPersonaNames::steamids_size() const {
  return steamids_.size();
}
inline void CMsgGCGetPersonaNames::clear_steamids() {
  steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGCGetPersonaNames::steamids(int index) const {
  return steamids_.Get(index);
}
inline void CMsgGCGetPersonaNames::set_steamids(int index, ::google::protobuf::uint64 value) {
  steamids_.Set(index, value);
}
inline void CMsgGCGetPersonaNames::add_steamids(::google::protobuf::uint64 value) {
  steamids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCGetPersonaNames::steamids() const {
  return steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCGetPersonaNames::mutable_steamids() {
  return &steamids_;
}

// -------------------------------------------------------------------

// CMsgGCGetPersonaNames_Response_PersonaName

// optional fixed64 steamid = 1;
inline bool CMsgGCGetPersonaNames_Response_PersonaName::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCGetPersonaNames_Response_PersonaName::steamid() const {
  return steamid_;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional string persona_name = 2;
inline bool CMsgGCGetPersonaNames_Response_PersonaName::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::kEmptyString) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgGCGetPersonaNames_Response_PersonaName::persona_name() const {
  return *persona_name_;
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCGetPersonaNames_Response_PersonaName::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    persona_name_ = new ::std::string;
  }
  return persona_name_;
}
inline ::std::string* CMsgGCGetPersonaNames_Response_PersonaName::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCGetPersonaNames_Response_PersonaName::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::kEmptyString) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgGCGetPersonaNames_Response

// repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
inline int CMsgGCGetPersonaNames_Response::succeeded_lookups_size() const {
  return succeeded_lookups_.size();
}
inline void CMsgGCGetPersonaNames_Response::clear_succeeded_lookups() {
  succeeded_lookups_.Clear();
}
inline const ::CMsgGCGetPersonaNames_Response_PersonaName& CMsgGCGetPersonaNames_Response::succeeded_lookups(int index) const {
  return succeeded_lookups_.Get(index);
}
inline ::CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response::mutable_succeeded_lookups(int index) {
  return succeeded_lookups_.Mutable(index);
}
inline ::CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response::add_succeeded_lookups() {
  return succeeded_lookups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCGetPersonaNames_Response_PersonaName >&
CMsgGCGetPersonaNames_Response::succeeded_lookups() const {
  return succeeded_lookups_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCGetPersonaNames_Response_PersonaName >*
CMsgGCGetPersonaNames_Response::mutable_succeeded_lookups() {
  return &succeeded_lookups_;
}

// repeated fixed64 failed_lookup_steamids = 2;
inline int CMsgGCGetPersonaNames_Response::failed_lookup_steamids_size() const {
  return failed_lookup_steamids_.size();
}
inline void CMsgGCGetPersonaNames_Response::clear_failed_lookup_steamids() {
  failed_lookup_steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGCGetPersonaNames_Response::failed_lookup_steamids(int index) const {
  return failed_lookup_steamids_.Get(index);
}
inline void CMsgGCGetPersonaNames_Response::set_failed_lookup_steamids(int index, ::google::protobuf::uint64 value) {
  failed_lookup_steamids_.Set(index, value);
}
inline void CMsgGCGetPersonaNames_Response::add_failed_lookup_steamids(::google::protobuf::uint64 value) {
  failed_lookup_steamids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCGetPersonaNames_Response::failed_lookup_steamids() const {
  return failed_lookup_steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCGetPersonaNames_Response::mutable_failed_lookup_steamids() {
  return &failed_lookup_steamids_;
}

// -------------------------------------------------------------------

// CMsgGCCheckFriendship

// optional fixed64 steamid_left = 1;
inline bool CMsgGCCheckFriendship::has_steamid_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCCheckFriendship::set_has_steamid_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCCheckFriendship::clear_has_steamid_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCCheckFriendship::clear_steamid_left() {
  steamid_left_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_left();
}
inline ::google::protobuf::uint64 CMsgGCCheckFriendship::steamid_left() const {
  return steamid_left_;
}
inline void CMsgGCCheckFriendship::set_steamid_left(::google::protobuf::uint64 value) {
  set_has_steamid_left();
  steamid_left_ = value;
}

// optional fixed64 steamid_right = 2;
inline bool CMsgGCCheckFriendship::has_steamid_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCCheckFriendship::set_has_steamid_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCCheckFriendship::clear_has_steamid_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCCheckFriendship::clear_steamid_right() {
  steamid_right_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_right();
}
inline ::google::protobuf::uint64 CMsgGCCheckFriendship::steamid_right() const {
  return steamid_right_;
}
inline void CMsgGCCheckFriendship::set_steamid_right(::google::protobuf::uint64 value) {
  set_has_steamid_right();
  steamid_right_ = value;
}

// -------------------------------------------------------------------

// CMsgGCCheckFriendship_Response

// optional bool success = 1;
inline bool CMsgGCCheckFriendship_Response::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCCheckFriendship_Response::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCCheckFriendship_Response::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCCheckFriendship_Response::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCCheckFriendship_Response::success() const {
  return success_;
}
inline void CMsgGCCheckFriendship_Response::set_success(bool value) {
  set_has_success();
  success_ = value;
}

// optional bool found_friendship = 2;
inline bool CMsgGCCheckFriendship_Response::has_found_friendship() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCCheckFriendship_Response::set_has_found_friendship() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCCheckFriendship_Response::clear_has_found_friendship() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCCheckFriendship_Response::clear_found_friendship() {
  found_friendship_ = false;
  clear_has_found_friendship();
}
inline bool CMsgGCCheckFriendship_Response::found_friendship() const {
  return found_friendship_;
}
inline void CMsgGCCheckFriendship_Response::set_found_friendship(bool value) {
  set_has_found_friendship();
  found_friendship_ = value;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetDirectory_SubGC

// optional uint32 dir_index = 1;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_has_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
inline ::google::protobuf::uint32 CMsgGCMsgMasterSetDirectory_SubGC::dir_index() const {
  return dir_index_;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
}

// optional string name = 2;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::name() const {
  return *name_;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string box = 3;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_box() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_has_box() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_box() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_box() {
  if (box_ != &::google::protobuf::internal::kEmptyString) {
    box_->clear();
  }
  clear_has_box();
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::box() const {
  return *box_;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const ::std::string& value) {
  set_has_box();
  if (box_ == &::google::protobuf::internal::kEmptyString) {
    box_ = new ::std::string;
  }
  box_->assign(value);
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const char* value) {
  set_has_box();
  if (box_ == &::google::protobuf::internal::kEmptyString) {
    box_ = new ::std::string;
  }
  box_->assign(value);
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_box(const char* value, size_t size) {
  set_has_box();
  if (box_ == &::google::protobuf::internal::kEmptyString) {
    box_ = new ::std::string;
  }
  box_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_box() {
  set_has_box();
  if (box_ == &::google::protobuf::internal::kEmptyString) {
    box_ = new ::std::string;
  }
  return box_;
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_box() {
  clear_has_box();
  if (box_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = box_;
    box_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_box(::std::string* box) {
  if (box_ != &::google::protobuf::internal::kEmptyString) {
    delete box_;
  }
  if (box) {
    set_has_box();
    box_ = box;
  } else {
    clear_has_box();
    box_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string command_line = 4;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_command_line() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_has_command_line() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_command_line() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_command_line() {
  if (command_line_ != &::google::protobuf::internal::kEmptyString) {
    command_line_->clear();
  }
  clear_has_command_line();
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::command_line() const {
  return *command_line_;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const ::std::string& value) {
  set_has_command_line();
  if (command_line_ == &::google::protobuf::internal::kEmptyString) {
    command_line_ = new ::std::string;
  }
  command_line_->assign(value);
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const char* value) {
  set_has_command_line();
  if (command_line_ == &::google::protobuf::internal::kEmptyString) {
    command_line_ = new ::std::string;
  }
  command_line_->assign(value);
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_command_line(const char* value, size_t size) {
  set_has_command_line();
  if (command_line_ == &::google::protobuf::internal::kEmptyString) {
    command_line_ = new ::std::string;
  }
  command_line_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_command_line() {
  set_has_command_line();
  if (command_line_ == &::google::protobuf::internal::kEmptyString) {
    command_line_ = new ::std::string;
  }
  return command_line_;
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_command_line() {
  clear_has_command_line();
  if (command_line_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = command_line_;
    command_line_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_command_line(::std::string* command_line) {
  if (command_line_ != &::google::protobuf::internal::kEmptyString) {
    delete command_line_;
  }
  if (command_line) {
    set_has_command_line();
    command_line_ = command_line;
  } else {
    clear_has_command_line();
    command_line_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string gc_binary = 5;
inline bool CMsgGCMsgMasterSetDirectory_SubGC::has_gc_binary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_has_gc_binary() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_has_gc_binary() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::clear_gc_binary() {
  if (gc_binary_ != &::google::protobuf::internal::kEmptyString) {
    gc_binary_->clear();
  }
  clear_has_gc_binary();
}
inline const ::std::string& CMsgGCMsgMasterSetDirectory_SubGC::gc_binary() const {
  return *gc_binary_;
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const ::std::string& value) {
  set_has_gc_binary();
  if (gc_binary_ == &::google::protobuf::internal::kEmptyString) {
    gc_binary_ = new ::std::string;
  }
  gc_binary_->assign(value);
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const char* value) {
  set_has_gc_binary();
  if (gc_binary_ == &::google::protobuf::internal::kEmptyString) {
    gc_binary_ = new ::std::string;
  }
  gc_binary_->assign(value);
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_gc_binary(const char* value, size_t size) {
  set_has_gc_binary();
  if (gc_binary_ == &::google::protobuf::internal::kEmptyString) {
    gc_binary_ = new ::std::string;
  }
  gc_binary_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::mutable_gc_binary() {
  set_has_gc_binary();
  if (gc_binary_ == &::google::protobuf::internal::kEmptyString) {
    gc_binary_ = new ::std::string;
  }
  return gc_binary_;
}
inline ::std::string* CMsgGCMsgMasterSetDirectory_SubGC::release_gc_binary() {
  clear_has_gc_binary();
  if (gc_binary_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gc_binary_;
    gc_binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCMsgMasterSetDirectory_SubGC::set_allocated_gc_binary(::std::string* gc_binary) {
  if (gc_binary_ != &::google::protobuf::internal::kEmptyString) {
    delete gc_binary_;
  }
  if (gc_binary) {
    set_has_gc_binary();
    gc_binary_ = gc_binary;
  } else {
    clear_has_gc_binary();
    gc_binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetDirectory

// optional uint32 master_dir_index = 1;
inline bool CMsgGCMsgMasterSetDirectory::has_master_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory::set_has_master_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgMasterSetDirectory::clear_has_master_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgMasterSetDirectory::clear_master_dir_index() {
  master_dir_index_ = 0u;
  clear_has_master_dir_index();
}
inline ::google::protobuf::uint32 CMsgGCMsgMasterSetDirectory::master_dir_index() const {
  return master_dir_index_;
}
inline void CMsgGCMsgMasterSetDirectory::set_master_dir_index(::google::protobuf::uint32 value) {
  set_has_master_dir_index();
  master_dir_index_ = value;
}

// repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
inline int CMsgGCMsgMasterSetDirectory::dir_size() const {
  return dir_.size();
}
inline void CMsgGCMsgMasterSetDirectory::clear_dir() {
  dir_.Clear();
}
inline const ::CMsgGCMsgMasterSetDirectory_SubGC& CMsgGCMsgMasterSetDirectory::dir(int index) const {
  return dir_.Get(index);
}
inline ::CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory::mutable_dir(int index) {
  return dir_.Mutable(index);
}
inline ::CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory::add_dir() {
  return dir_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetDirectory_SubGC >&
CMsgGCMsgMasterSetDirectory::dir() const {
  return dir_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetDirectory_SubGC >*
CMsgGCMsgMasterSetDirectory::mutable_dir() {
  return &dir_;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetDirectory_Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgGCMsgMasterSetDirectory_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetDirectory_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgMasterSetDirectory_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgMasterSetDirectory_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgGCMsgMasterSetDirectory_Response::eresult() const {
  return eresult_;
}
inline void CMsgGCMsgMasterSetDirectory_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgGCMsgWebAPIJobRequestForwardResponse

// optional uint32 dir_index = 1;
inline bool CMsgGCMsgWebAPIJobRequestForwardResponse::has_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgWebAPIJobRequestForwardResponse::set_has_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgWebAPIJobRequestForwardResponse::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgWebAPIJobRequestForwardResponse::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
inline ::google::protobuf::uint32 CMsgGCMsgWebAPIJobRequestForwardResponse::dir_index() const {
  return dir_index_;
}
inline void CMsgGCMsgWebAPIJobRequestForwardResponse::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetPurchaseTrust_Request

// optional fixed64 steamid = 1;
inline bool CGCSystemMsg_GetPurchaseTrust_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CGCSystemMsg_GetPurchaseTrust_Request::steamid() const {
  return steamid_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetPurchaseTrust_Response

// optional bool has_prior_purchase_history = 1;
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_has_prior_purchase_history() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_has_has_prior_purchase_history() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_has_prior_purchase_history() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_prior_purchase_history() {
  has_prior_purchase_history_ = false;
  clear_has_has_prior_purchase_history();
}
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_prior_purchase_history() const {
  return has_prior_purchase_history_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_has_prior_purchase_history(bool value) {
  set_has_has_prior_purchase_history();
  has_prior_purchase_history_ = value;
}

// optional bool has_no_recent_password_resets = 2;
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_has_no_recent_password_resets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_has_has_no_recent_password_resets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_has_no_recent_password_resets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_no_recent_password_resets() {
  has_no_recent_password_resets_ = false;
  clear_has_has_no_recent_password_resets();
}
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_no_recent_password_resets() const {
  return has_no_recent_password_resets_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_has_no_recent_password_resets(bool value) {
  set_has_has_no_recent_password_resets();
  has_no_recent_password_resets_ = value;
}

// optional bool is_wallet_cash_trusted = 3;
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_is_wallet_cash_trusted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_has_is_wallet_cash_trusted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_is_wallet_cash_trusted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_is_wallet_cash_trusted() {
  is_wallet_cash_trusted_ = false;
  clear_has_is_wallet_cash_trusted();
}
inline bool CGCSystemMsg_GetPurchaseTrust_Response::is_wallet_cash_trusted() const {
  return is_wallet_cash_trusted_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_is_wallet_cash_trusted(bool value) {
  set_has_is_wallet_cash_trusted();
  is_wallet_cash_trusted_ = value;
}

// optional uint32 time_all_trusted = 4;
inline bool CGCSystemMsg_GetPurchaseTrust_Response::has_time_all_trusted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_has_time_all_trusted() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_has_time_all_trusted() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::clear_time_all_trusted() {
  time_all_trusted_ = 0u;
  clear_has_time_all_trusted();
}
inline ::google::protobuf::uint32 CGCSystemMsg_GetPurchaseTrust_Response::time_all_trusted() const {
  return time_all_trusted_;
}
inline void CGCSystemMsg_GetPurchaseTrust_Response::set_time_all_trusted(::google::protobuf::uint32 value) {
  set_has_time_all_trusted();
  time_all_trusted_ = value;
}

// -------------------------------------------------------------------

// CMsgGCHAccountVacStatusChange

// optional fixed64 steam_id = 1;
inline bool CMsgGCHAccountVacStatusChange::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHAccountVacStatusChange::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHAccountVacStatusChange::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgGCHAccountVacStatusChange::steam_id() const {
  return steam_id_;
}
inline void CMsgGCHAccountVacStatusChange::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// optional uint32 app_id = 2;
inline bool CMsgGCHAccountVacStatusChange::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHAccountVacStatusChange::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHAccountVacStatusChange::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgGCHAccountVacStatusChange::app_id() const {
  return app_id_;
}
inline void CMsgGCHAccountVacStatusChange::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional uint32 rtime_vacban_starts = 3;
inline bool CMsgGCHAccountVacStatusChange::has_rtime_vacban_starts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::set_has_rtime_vacban_starts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCHAccountVacStatusChange::clear_has_rtime_vacban_starts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCHAccountVacStatusChange::clear_rtime_vacban_starts() {
  rtime_vacban_starts_ = 0u;
  clear_has_rtime_vacban_starts();
}
inline ::google::protobuf::uint32 CMsgGCHAccountVacStatusChange::rtime_vacban_starts() const {
  return rtime_vacban_starts_;
}
inline void CMsgGCHAccountVacStatusChange::set_rtime_vacban_starts(::google::protobuf::uint32 value) {
  set_has_rtime_vacban_starts();
  rtime_vacban_starts_ = value;
}

// optional bool is_banned_now = 4;
inline bool CMsgGCHAccountVacStatusChange::has_is_banned_now() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::set_has_is_banned_now() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCHAccountVacStatusChange::clear_has_is_banned_now() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCHAccountVacStatusChange::clear_is_banned_now() {
  is_banned_now_ = false;
  clear_has_is_banned_now();
}
inline bool CMsgGCHAccountVacStatusChange::is_banned_now() const {
  return is_banned_now_;
}
inline void CMsgGCHAccountVacStatusChange::set_is_banned_now(bool value) {
  set_has_is_banned_now();
  is_banned_now_ = value;
}

// optional bool is_banned_future = 5;
inline bool CMsgGCHAccountVacStatusChange::has_is_banned_future() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCHAccountVacStatusChange::set_has_is_banned_future() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCHAccountVacStatusChange::clear_has_is_banned_future() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCHAccountVacStatusChange::clear_is_banned_future() {
  is_banned_future_ = false;
  clear_has_is_banned_future();
}
inline bool CMsgGCHAccountVacStatusChange::is_banned_future() const {
  return is_banned_future_;
}
inline void CMsgGCHAccountVacStatusChange::set_is_banned_future(bool value) {
  set_has_is_banned_future();
  is_banned_future_ = value;
}

// -------------------------------------------------------------------

// CMsgGCGetPartnerAccountLink

// optional fixed64 steamid = 1;
inline bool CMsgGCGetPartnerAccountLink::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetPartnerAccountLink::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetPartnerAccountLink::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetPartnerAccountLink::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCGetPartnerAccountLink::steamid() const {
  return steamid_;
}
inline void CMsgGCGetPartnerAccountLink::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// -------------------------------------------------------------------

// CMsgGCGetPartnerAccountLink_Response

// optional uint32 pwid = 1;
inline bool CMsgGCGetPartnerAccountLink_Response::has_pwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetPartnerAccountLink_Response::set_has_pwid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetPartnerAccountLink_Response::clear_has_pwid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetPartnerAccountLink_Response::clear_pwid() {
  pwid_ = 0u;
  clear_has_pwid();
}
inline ::google::protobuf::uint32 CMsgGCGetPartnerAccountLink_Response::pwid() const {
  return pwid_;
}
inline void CMsgGCGetPartnerAccountLink_Response::set_pwid(::google::protobuf::uint32 value) {
  set_has_pwid();
  pwid_ = value;
}

// optional uint32 nexonid = 2;
inline bool CMsgGCGetPartnerAccountLink_Response::has_nexonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetPartnerAccountLink_Response::set_has_nexonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCGetPartnerAccountLink_Response::clear_has_nexonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCGetPartnerAccountLink_Response::clear_nexonid() {
  nexonid_ = 0u;
  clear_has_nexonid();
}
inline ::google::protobuf::uint32 CMsgGCGetPartnerAccountLink_Response::nexonid() const {
  return nexonid_;
}
inline void CMsgGCGetPartnerAccountLink_Response::set_nexonid(::google::protobuf::uint32 value) {
  set_has_nexonid();
  nexonid_ = value;
}

// -------------------------------------------------------------------

// CMsgGCRoutingInfo

// repeated uint32 dir_index = 1;
inline int CMsgGCRoutingInfo::dir_index_size() const {
  return dir_index_.size();
}
inline void CMsgGCRoutingInfo::clear_dir_index() {
  dir_index_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCRoutingInfo::dir_index(int index) const {
  return dir_index_.Get(index);
}
inline void CMsgGCRoutingInfo::set_dir_index(int index, ::google::protobuf::uint32 value) {
  dir_index_.Set(index, value);
}
inline void CMsgGCRoutingInfo::add_dir_index(::google::protobuf::uint32 value) {
  dir_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCRoutingInfo::dir_index() const {
  return dir_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCRoutingInfo::mutable_dir_index() {
  return &dir_index_;
}

// optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
inline bool CMsgGCRoutingInfo::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCRoutingInfo::set_has_method() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCRoutingInfo::clear_has_method() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCRoutingInfo::clear_method() {
  method_ = 0;
  clear_has_method();
}
inline ::CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::method() const {
  return static_cast< ::CMsgGCRoutingInfo_RoutingMethod >(method_);
}
inline void CMsgGCRoutingInfo::set_method(::CMsgGCRoutingInfo_RoutingMethod value) {
  assert(::CMsgGCRoutingInfo_RoutingMethod_IsValid(value));
  set_has_method();
  method_ = value;
}

// optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
inline bool CMsgGCRoutingInfo::has_fallback() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCRoutingInfo::set_has_fallback() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCRoutingInfo::clear_has_fallback() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCRoutingInfo::clear_fallback() {
  fallback_ = 1;
  clear_has_fallback();
}
inline ::CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::fallback() const {
  return static_cast< ::CMsgGCRoutingInfo_RoutingMethod >(fallback_);
}
inline void CMsgGCRoutingInfo::set_fallback(::CMsgGCRoutingInfo_RoutingMethod value) {
  assert(::CMsgGCRoutingInfo_RoutingMethod_IsValid(value));
  set_has_fallback();
  fallback_ = value;
}

// optional uint32 protobuf_field = 4;
inline bool CMsgGCRoutingInfo::has_protobuf_field() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCRoutingInfo::set_has_protobuf_field() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCRoutingInfo::clear_has_protobuf_field() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCRoutingInfo::clear_protobuf_field() {
  protobuf_field_ = 0u;
  clear_has_protobuf_field();
}
inline ::google::protobuf::uint32 CMsgGCRoutingInfo::protobuf_field() const {
  return protobuf_field_;
}
inline void CMsgGCRoutingInfo::set_protobuf_field(::google::protobuf::uint32 value) {
  set_has_protobuf_field();
  protobuf_field_ = value;
}

// optional string webapi_param = 5;
inline bool CMsgGCRoutingInfo::has_webapi_param() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCRoutingInfo::set_has_webapi_param() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCRoutingInfo::clear_has_webapi_param() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCRoutingInfo::clear_webapi_param() {
  if (webapi_param_ != &::google::protobuf::internal::kEmptyString) {
    webapi_param_->clear();
  }
  clear_has_webapi_param();
}
inline const ::std::string& CMsgGCRoutingInfo::webapi_param() const {
  return *webapi_param_;
}
inline void CMsgGCRoutingInfo::set_webapi_param(const ::std::string& value) {
  set_has_webapi_param();
  if (webapi_param_ == &::google::protobuf::internal::kEmptyString) {
    webapi_param_ = new ::std::string;
  }
  webapi_param_->assign(value);
}
inline void CMsgGCRoutingInfo::set_webapi_param(const char* value) {
  set_has_webapi_param();
  if (webapi_param_ == &::google::protobuf::internal::kEmptyString) {
    webapi_param_ = new ::std::string;
  }
  webapi_param_->assign(value);
}
inline void CMsgGCRoutingInfo::set_webapi_param(const char* value, size_t size) {
  set_has_webapi_param();
  if (webapi_param_ == &::google::protobuf::internal::kEmptyString) {
    webapi_param_ = new ::std::string;
  }
  webapi_param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCRoutingInfo::mutable_webapi_param() {
  set_has_webapi_param();
  if (webapi_param_ == &::google::protobuf::internal::kEmptyString) {
    webapi_param_ = new ::std::string;
  }
  return webapi_param_;
}
inline ::std::string* CMsgGCRoutingInfo::release_webapi_param() {
  clear_has_webapi_param();
  if (webapi_param_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = webapi_param_;
    webapi_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCRoutingInfo::set_allocated_webapi_param(::std::string* webapi_param) {
  if (webapi_param_ != &::google::protobuf::internal::kEmptyString) {
    delete webapi_param_;
  }
  if (webapi_param) {
    set_has_webapi_param();
    webapi_param_ = webapi_param;
  } else {
    clear_has_webapi_param();
    webapi_param_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetWebAPIRouting_Entry

// optional string interface_name = 1;
inline bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_interface_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_has_interface_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_has_interface_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_interface_name() {
  if (interface_name_ != &::google::protobuf::internal::kEmptyString) {
    interface_name_->clear();
  }
  clear_has_interface_name();
}
inline const ::std::string& CMsgGCMsgMasterSetWebAPIRouting_Entry::interface_name() const {
  return *interface_name_;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const ::std::string& value) {
  set_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    interface_name_ = new ::std::string;
  }
  interface_name_->assign(value);
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const char* value) {
  set_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    interface_name_ = new ::std::string;
  }
  interface_name_->assign(value);
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_interface_name(const char* value, size_t size) {
  set_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    interface_name_ = new ::std::string;
  }
  interface_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_interface_name() {
  set_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    interface_name_ = new ::std::string;
  }
  return interface_name_;
}
inline ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_interface_name() {
  clear_has_interface_name();
  if (interface_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = interface_name_;
    interface_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_interface_name(::std::string* interface_name) {
  if (interface_name_ != &::google::protobuf::internal::kEmptyString) {
    delete interface_name_;
  }
  if (interface_name) {
    set_has_interface_name();
    interface_name_ = interface_name;
  } else {
    clear_has_interface_name();
    interface_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string method_name = 2;
inline bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_method_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_has_method_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_method_name() {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    method_name_->clear();
  }
  clear_has_method_name();
}
inline const ::std::string& CMsgGCMsgMasterSetWebAPIRouting_Entry::method_name() const {
  return *method_name_;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const ::std::string& value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const char* value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_method_name() {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  return method_name_;
}
inline ::std::string* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_method_name() {
  clear_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = method_name_;
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_method_name(::std::string* method_name) {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    delete method_name_;
  }
  if (method_name) {
    set_has_method_name();
    method_name_ = method_name;
  } else {
    clear_has_method_name();
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .CMsgGCRoutingInfo routing = 3;
inline bool CMsgGCMsgMasterSetWebAPIRouting_Entry::has_routing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_has_routing() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_has_routing() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::clear_routing() {
  if (routing_ != NULL) routing_->::CMsgGCRoutingInfo::Clear();
  clear_has_routing();
}
inline const ::CMsgGCRoutingInfo& CMsgGCMsgMasterSetWebAPIRouting_Entry::routing() const {
  return routing_ != NULL ? *routing_ : *default_instance_->routing_;
}
inline ::CMsgGCRoutingInfo* CMsgGCMsgMasterSetWebAPIRouting_Entry::mutable_routing() {
  set_has_routing();
  if (routing_ == NULL) routing_ = new ::CMsgGCRoutingInfo;
  return routing_;
}
inline ::CMsgGCRoutingInfo* CMsgGCMsgMasterSetWebAPIRouting_Entry::release_routing() {
  clear_has_routing();
  ::CMsgGCRoutingInfo* temp = routing_;
  routing_ = NULL;
  return temp;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Entry::set_allocated_routing(::CMsgGCRoutingInfo* routing) {
  delete routing_;
  routing_ = routing;
  if (routing) {
    set_has_routing();
  } else {
    clear_has_routing();
  }
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetWebAPIRouting

// repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
inline int CMsgGCMsgMasterSetWebAPIRouting::entries_size() const {
  return entries_.size();
}
inline void CMsgGCMsgMasterSetWebAPIRouting::clear_entries() {
  entries_.Clear();
}
inline const ::CMsgGCMsgMasterSetWebAPIRouting_Entry& CMsgGCMsgMasterSetWebAPIRouting::entries(int index) const {
  return entries_.Get(index);
}
inline ::CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline ::CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting::add_entries() {
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetWebAPIRouting_Entry >&
CMsgGCMsgMasterSetWebAPIRouting::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetWebAPIRouting_Entry >*
CMsgGCMsgMasterSetWebAPIRouting::mutable_entries() {
  return &entries_;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetClientMsgRouting_Entry

// optional uint32 msg_type = 1;
inline bool CMsgGCMsgMasterSetClientMsgRouting_Entry::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
inline ::google::protobuf::uint32 CMsgGCMsgMasterSetClientMsgRouting_Entry::msg_type() const {
  return msg_type_;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
}

// optional .CMsgGCRoutingInfo routing = 2;
inline bool CMsgGCMsgMasterSetClientMsgRouting_Entry::has_routing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_has_routing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_has_routing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::clear_routing() {
  if (routing_ != NULL) routing_->::CMsgGCRoutingInfo::Clear();
  clear_has_routing();
}
inline const ::CMsgGCRoutingInfo& CMsgGCMsgMasterSetClientMsgRouting_Entry::routing() const {
  return routing_ != NULL ? *routing_ : *default_instance_->routing_;
}
inline ::CMsgGCRoutingInfo* CMsgGCMsgMasterSetClientMsgRouting_Entry::mutable_routing() {
  set_has_routing();
  if (routing_ == NULL) routing_ = new ::CMsgGCRoutingInfo;
  return routing_;
}
inline ::CMsgGCRoutingInfo* CMsgGCMsgMasterSetClientMsgRouting_Entry::release_routing() {
  clear_has_routing();
  ::CMsgGCRoutingInfo* temp = routing_;
  routing_ = NULL;
  return temp;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Entry::set_allocated_routing(::CMsgGCRoutingInfo* routing) {
  delete routing_;
  routing_ = routing;
  if (routing) {
    set_has_routing();
  } else {
    clear_has_routing();
  }
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetClientMsgRouting

// repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
inline int CMsgGCMsgMasterSetClientMsgRouting::entries_size() const {
  return entries_.size();
}
inline void CMsgGCMsgMasterSetClientMsgRouting::clear_entries() {
  entries_.Clear();
}
inline const ::CMsgGCMsgMasterSetClientMsgRouting_Entry& CMsgGCMsgMasterSetClientMsgRouting::entries(int index) const {
  return entries_.Get(index);
}
inline ::CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline ::CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting::add_entries() {
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetClientMsgRouting_Entry >&
CMsgGCMsgMasterSetClientMsgRouting::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgMasterSetClientMsgRouting_Entry >*
CMsgGCMsgMasterSetClientMsgRouting::mutable_entries() {
  return &entries_;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetWebAPIRouting_Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgGCMsgMasterSetWebAPIRouting_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgGCMsgMasterSetWebAPIRouting_Response::eresult() const {
  return eresult_;
}
inline void CMsgGCMsgMasterSetWebAPIRouting_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgGCMsgMasterSetClientMsgRouting_Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgGCMsgMasterSetClientMsgRouting_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgGCMsgMasterSetClientMsgRouting_Response::eresult() const {
  return eresult_;
}
inline void CMsgGCMsgMasterSetClientMsgRouting_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgGCMsgSetOptions_MessageRange

// required uint32 low = 1;
inline bool CMsgGCMsgSetOptions_MessageRange::has_low() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMsgSetOptions_MessageRange::set_has_low() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMsgSetOptions_MessageRange::clear_has_low() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMsgSetOptions_MessageRange::clear_low() {
  low_ = 0u;
  clear_has_low();
}
inline ::google::protobuf::uint32 CMsgGCMsgSetOptions_MessageRange::low() const {
  return low_;
}
inline void CMsgGCMsgSetOptions_MessageRange::set_low(::google::protobuf::uint32 value) {
  set_has_low();
  low_ = value;
}

// required uint32 high = 2;
inline bool CMsgGCMsgSetOptions_MessageRange::has_high() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMsgSetOptions_MessageRange::set_has_high() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMsgSetOptions_MessageRange::clear_has_high() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMsgSetOptions_MessageRange::clear_high() {
  high_ = 0u;
  clear_has_high();
}
inline ::google::protobuf::uint32 CMsgGCMsgSetOptions_MessageRange::high() const {
  return high_;
}
inline void CMsgGCMsgSetOptions_MessageRange::set_high(::google::protobuf::uint32 value) {
  set_has_high();
  high_ = value;
}

// -------------------------------------------------------------------

// CMsgGCMsgSetOptions

// repeated .CMsgGCMsgSetOptions.Option options = 1;
inline int CMsgGCMsgSetOptions::options_size() const {
  return options_.size();
}
inline void CMsgGCMsgSetOptions::clear_options() {
  options_.Clear();
}
inline ::CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::options(int index) const {
  return static_cast< ::CMsgGCMsgSetOptions_Option >(options_.Get(index));
}
inline void CMsgGCMsgSetOptions::set_options(int index, ::CMsgGCMsgSetOptions_Option value) {
  assert(::CMsgGCMsgSetOptions_Option_IsValid(value));
  options_.Set(index, value);
}
inline void CMsgGCMsgSetOptions::add_options(::CMsgGCMsgSetOptions_Option value) {
  assert(::CMsgGCMsgSetOptions_Option_IsValid(value));
  options_.Add(value);
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgGCMsgSetOptions::options() const {
  return options_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgGCMsgSetOptions::mutable_options() {
  return &options_;
}

// repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
inline int CMsgGCMsgSetOptions::client_msg_ranges_size() const {
  return client_msg_ranges_.size();
}
inline void CMsgGCMsgSetOptions::clear_client_msg_ranges() {
  client_msg_ranges_.Clear();
}
inline const ::CMsgGCMsgSetOptions_MessageRange& CMsgGCMsgSetOptions::client_msg_ranges(int index) const {
  return client_msg_ranges_.Get(index);
}
inline ::CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions::mutable_client_msg_ranges(int index) {
  return client_msg_ranges_.Mutable(index);
}
inline ::CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions::add_client_msg_ranges() {
  return client_msg_ranges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgSetOptions_MessageRange >&
CMsgGCMsgSetOptions::client_msg_ranges() const {
  return client_msg_ranges_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMsgSetOptions_MessageRange >*
CMsgGCMsgSetOptions::mutable_client_msg_ranges() {
  return &client_msg_ranges_;
}

// -------------------------------------------------------------------

// CMsgGCHUpdateSession_ExtraField

// optional string name = 1;
inline bool CMsgGCHUpdateSession_ExtraField::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHUpdateSession_ExtraField::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHUpdateSession_ExtraField::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHUpdateSession_ExtraField::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgGCHUpdateSession_ExtraField::name() const {
  return *name_;
}
inline void CMsgGCHUpdateSession_ExtraField::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgGCHUpdateSession_ExtraField::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgGCHUpdateSession_ExtraField::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCHUpdateSession_ExtraField::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgGCHUpdateSession_ExtraField::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCHUpdateSession_ExtraField::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string value = 2;
inline bool CMsgGCHUpdateSession_ExtraField::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHUpdateSession_ExtraField::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHUpdateSession_ExtraField::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHUpdateSession_ExtraField::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CMsgGCHUpdateSession_ExtraField::value() const {
  return *value_;
}
inline void CMsgGCHUpdateSession_ExtraField::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgGCHUpdateSession_ExtraField::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgGCHUpdateSession_ExtraField::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCHUpdateSession_ExtraField::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CMsgGCHUpdateSession_ExtraField::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCHUpdateSession_ExtraField::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgGCHUpdateSession

// optional fixed64 steam_id = 1;
inline bool CMsgGCHUpdateSession::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHUpdateSession::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHUpdateSession::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgGCHUpdateSession::steam_id() const {
  return steam_id_;
}
inline void CMsgGCHUpdateSession::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// optional uint32 app_id = 2;
inline bool CMsgGCHUpdateSession::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHUpdateSession::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHUpdateSession::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::app_id() const {
  return app_id_;
}
inline void CMsgGCHUpdateSession::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional bool online = 3;
inline bool CMsgGCHUpdateSession::has_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCHUpdateSession::clear_has_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCHUpdateSession::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool CMsgGCHUpdateSession::online() const {
  return online_;
}
inline void CMsgGCHUpdateSession::set_online(bool value) {
  set_has_online();
  online_ = value;
}

// optional fixed64 server_steam_id = 4;
inline bool CMsgGCHUpdateSession::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_server_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCHUpdateSession::clear_has_server_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCHUpdateSession::clear_server_steam_id() {
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_steam_id();
}
inline ::google::protobuf::uint64 CMsgGCHUpdateSession::server_steam_id() const {
  return server_steam_id_;
}
inline void CMsgGCHUpdateSession::set_server_steam_id(::google::protobuf::uint64 value) {
  set_has_server_steam_id();
  server_steam_id_ = value;
}

// optional uint32 server_addr = 5;
inline bool CMsgGCHUpdateSession::has_server_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_server_addr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCHUpdateSession::clear_has_server_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCHUpdateSession::clear_server_addr() {
  server_addr_ = 0u;
  clear_has_server_addr();
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::server_addr() const {
  return server_addr_;
}
inline void CMsgGCHUpdateSession::set_server_addr(::google::protobuf::uint32 value) {
  set_has_server_addr();
  server_addr_ = value;
}

// optional uint32 server_port = 6;
inline bool CMsgGCHUpdateSession::has_server_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_server_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCHUpdateSession::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCHUpdateSession::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::server_port() const {
  return server_port_;
}
inline void CMsgGCHUpdateSession::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
}

// optional uint32 os_type = 7;
inline bool CMsgGCHUpdateSession::has_os_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_os_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCHUpdateSession::clear_has_os_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCHUpdateSession::clear_os_type() {
  os_type_ = 0u;
  clear_has_os_type();
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::os_type() const {
  return os_type_;
}
inline void CMsgGCHUpdateSession::set_os_type(::google::protobuf::uint32 value) {
  set_has_os_type();
  os_type_ = value;
}

// optional uint32 client_addr = 8;
inline bool CMsgGCHUpdateSession::has_client_addr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_client_addr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCHUpdateSession::clear_has_client_addr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCHUpdateSession::clear_client_addr() {
  client_addr_ = 0u;
  clear_has_client_addr();
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::client_addr() const {
  return client_addr_;
}
inline void CMsgGCHUpdateSession::set_client_addr(::google::protobuf::uint32 value) {
  set_has_client_addr();
  client_addr_ = value;
}

// repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
inline int CMsgGCHUpdateSession::extra_fields_size() const {
  return extra_fields_.size();
}
inline void CMsgGCHUpdateSession::clear_extra_fields() {
  extra_fields_.Clear();
}
inline const ::CMsgGCHUpdateSession_ExtraField& CMsgGCHUpdateSession::extra_fields(int index) const {
  return extra_fields_.Get(index);
}
inline ::CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession::mutable_extra_fields(int index) {
  return extra_fields_.Mutable(index);
}
inline ::CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession::add_extra_fields() {
  return extra_fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCHUpdateSession_ExtraField >&
CMsgGCHUpdateSession::extra_fields() const {
  return extra_fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCHUpdateSession_ExtraField >*
CMsgGCHUpdateSession::mutable_extra_fields() {
  return &extra_fields_;
}

// optional fixed64 owner_id = 10;
inline bool CMsgGCHUpdateSession::has_owner_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_owner_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGCHUpdateSession::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGCHUpdateSession::clear_owner_id() {
  owner_id_ = GOOGLE_ULONGLONG(0);
  clear_has_owner_id();
}
inline ::google::protobuf::uint64 CMsgGCHUpdateSession::owner_id() const {
  return owner_id_;
}
inline void CMsgGCHUpdateSession::set_owner_id(::google::protobuf::uint64 value) {
  set_has_owner_id();
  owner_id_ = value;
}

// optional uint32 cm_session_sysid = 11;
inline bool CMsgGCHUpdateSession::has_cm_session_sysid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_cm_session_sysid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGCHUpdateSession::clear_has_cm_session_sysid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGCHUpdateSession::clear_cm_session_sysid() {
  cm_session_sysid_ = 0u;
  clear_has_cm_session_sysid();
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::cm_session_sysid() const {
  return cm_session_sysid_;
}
inline void CMsgGCHUpdateSession::set_cm_session_sysid(::google::protobuf::uint32 value) {
  set_has_cm_session_sysid();
  cm_session_sysid_ = value;
}

// optional uint32 cm_session_identifier = 12;
inline bool CMsgGCHUpdateSession::has_cm_session_identifier() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGCHUpdateSession::set_has_cm_session_identifier() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGCHUpdateSession::clear_has_cm_session_identifier() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGCHUpdateSession::clear_cm_session_identifier() {
  cm_session_identifier_ = 0u;
  clear_has_cm_session_identifier();
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::cm_session_identifier() const {
  return cm_session_identifier_;
}
inline void CMsgGCHUpdateSession::set_cm_session_identifier(::google::protobuf::uint32 value) {
  set_has_cm_session_identifier();
  cm_session_identifier_ = value;
}

// repeated uint32 depot_ids = 13;
inline int CMsgGCHUpdateSession::depot_ids_size() const {
  return depot_ids_.size();
}
inline void CMsgGCHUpdateSession::clear_depot_ids() {
  depot_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCHUpdateSession::depot_ids(int index) const {
  return depot_ids_.Get(index);
}
inline void CMsgGCHUpdateSession::set_depot_ids(int index, ::google::protobuf::uint32 value) {
  depot_ids_.Set(index, value);
}
inline void CMsgGCHUpdateSession::add_depot_ids(::google::protobuf::uint32 value) {
  depot_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCHUpdateSession::depot_ids() const {
  return depot_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCHUpdateSession::mutable_depot_ids() {
  return &depot_ids_;
}

// -------------------------------------------------------------------

// CMsgNotificationOfSuspiciousActivity_MultipleGameInstances

// optional uint32 app_instance_count = 1;
inline bool CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::has_app_instance_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::set_has_app_instance_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::clear_has_app_instance_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::clear_app_instance_count() {
  app_instance_count_ = 0u;
  clear_has_app_instance_count();
}
inline ::google::protobuf::uint32 CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::app_instance_count() const {
  return app_instance_count_;
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::set_app_instance_count(::google::protobuf::uint32 value) {
  set_has_app_instance_count();
  app_instance_count_ = value;
}

// repeated fixed64 other_steamids = 2;
inline int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids_size() const {
  return other_steamids_.size();
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::clear_other_steamids() {
  other_steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids(int index) const {
  return other_steamids_.Get(index);
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::set_other_steamids(int index, ::google::protobuf::uint64 value) {
  other_steamids_.Set(index, value);
}
inline void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::add_other_steamids(::google::protobuf::uint64 value) {
  other_steamids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::other_steamids() const {
  return other_steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::mutable_other_steamids() {
  return &other_steamids_;
}

// -------------------------------------------------------------------

// CMsgNotificationOfSuspiciousActivity

// optional fixed64 steamid = 1;
inline bool CMsgNotificationOfSuspiciousActivity::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNotificationOfSuspiciousActivity::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgNotificationOfSuspiciousActivity::steamid() const {
  return steamid_;
}
inline void CMsgNotificationOfSuspiciousActivity::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 appid = 2;
inline bool CMsgNotificationOfSuspiciousActivity::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNotificationOfSuspiciousActivity::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgNotificationOfSuspiciousActivity::appid() const {
  return appid_;
}
inline void CMsgNotificationOfSuspiciousActivity::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
inline bool CMsgNotificationOfSuspiciousActivity::has_multiple_instances() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgNotificationOfSuspiciousActivity::set_has_multiple_instances() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_has_multiple_instances() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgNotificationOfSuspiciousActivity::clear_multiple_instances() {
  if (multiple_instances_ != NULL) multiple_instances_->::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Clear();
  clear_has_multiple_instances();
}
inline const ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& CMsgNotificationOfSuspiciousActivity::multiple_instances() const {
  return multiple_instances_ != NULL ? *multiple_instances_ : *default_instance_->multiple_instances_;
}
inline ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity::mutable_multiple_instances() {
  set_has_multiple_instances();
  if (multiple_instances_ == NULL) multiple_instances_ = new ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances;
  return multiple_instances_;
}
inline ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity::release_multiple_instances() {
  clear_has_multiple_instances();
  ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* temp = multiple_instances_;
  multiple_instances_ = NULL;
  return temp;
}
inline void CMsgNotificationOfSuspiciousActivity::set_allocated_multiple_instances(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* multiple_instances) {
  delete multiple_instances_;
  multiple_instances_ = multiple_instances;
  if (multiple_instances) {
    set_has_multiple_instances();
  } else {
    clear_has_multiple_instances();
  }
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxns_PartnerMicroTxn

// optional uint32 init_time = 1;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_init_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_init_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_init_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_init_time() {
  init_time_ = 0u;
  clear_has_init_time();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::init_time() const {
  return init_time_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_init_time(::google::protobuf::uint32 value) {
  set_has_init_time();
  init_time_ = value;
}

// optional uint32 last_update_time = 2;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_last_update_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_last_update_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_last_update_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_last_update_time() {
  last_update_time_ = 0u;
  clear_has_last_update_time();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::last_update_time() const {
  return last_update_time_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_last_update_time(::google::protobuf::uint32 value) {
  set_has_last_update_time();
  last_update_time_ = value;
}

// optional uint64 txn_id = 3;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_txn_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_txn_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::txn_id() const {
  return txn_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
}

// optional uint32 account_id = 4;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::account_id() const {
  return account_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional uint32 line_item = 5;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_line_item() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_line_item() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_line_item() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_line_item() {
  line_item_ = 0u;
  clear_has_line_item();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::line_item() const {
  return line_item_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_line_item(::google::protobuf::uint32 value) {
  set_has_line_item();
  line_item_ = value;
}

// optional uint64 item_id = 6;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_item_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_item_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::item_id() const {
  return item_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 def_index = 7;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_def_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_def_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::def_index() const {
  return def_index_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
}

// optional uint64 price = 8;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_price() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_price() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_price() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_price() {
  price_ = GOOGLE_ULONGLONG(0);
  clear_has_price();
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::price() const {
  return price_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_price(::google::protobuf::uint64 value) {
  set_has_price();
  price_ = value;
}

// optional uint64 tax = 9;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_tax() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_tax() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_tax() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_tax() {
  tax_ = GOOGLE_ULONGLONG(0);
  clear_has_tax();
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::tax() const {
  return tax_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_tax(::google::protobuf::uint64 value) {
  set_has_tax();
  tax_ = value;
}

// optional uint64 price_usd = 10;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_price_usd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_price_usd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_price_usd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_price_usd() {
  price_usd_ = GOOGLE_ULONGLONG(0);
  clear_has_price_usd();
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::price_usd() const {
  return price_usd_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_price_usd(::google::protobuf::uint64 value) {
  set_has_price_usd();
  price_usd_ = value;
}

// optional uint64 tax_usd = 11;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_tax_usd() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_tax_usd() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_tax_usd() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_tax_usd() {
  tax_usd_ = GOOGLE_ULONGLONG(0);
  clear_has_tax_usd();
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::tax_usd() const {
  return tax_usd_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_tax_usd(::google::protobuf::uint64 value) {
  set_has_tax_usd();
  tax_usd_ = value;
}

// optional uint32 purchase_type = 12;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_purchase_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_purchase_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_purchase_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_purchase_type() {
  purchase_type_ = 0u;
  clear_has_purchase_type();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::purchase_type() const {
  return purchase_type_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_purchase_type(::google::protobuf::uint32 value) {
  set_has_purchase_type();
  purchase_type_ = value;
}

// optional uint32 steam_txn_type = 13;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_steam_txn_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_steam_txn_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_steam_txn_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_steam_txn_type() {
  steam_txn_type_ = 0u;
  clear_has_steam_txn_type();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::steam_txn_type() const {
  return steam_txn_type_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_steam_txn_type(::google::protobuf::uint32 value) {
  set_has_steam_txn_type();
  steam_txn_type_ = value;
}

// optional string country_code = 14;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_country_code() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_country_code() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_country_code() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::kEmptyString) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerMicroTxn::country_code() const {
  return *country_code_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    country_code_ = new ::std::string;
  }
  return country_code_;
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::kEmptyString) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string region_code = 15;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_region_code() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_region_code() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_region_code() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_region_code() {
  if (region_code_ != &::google::protobuf::internal::kEmptyString) {
    region_code_->clear();
  }
  clear_has_region_code();
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerMicroTxn::region_code() const {
  return *region_code_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const ::std::string& value) {
  set_has_region_code();
  if (region_code_ == &::google::protobuf::internal::kEmptyString) {
    region_code_ = new ::std::string;
  }
  region_code_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const char* value) {
  set_has_region_code();
  if (region_code_ == &::google::protobuf::internal::kEmptyString) {
    region_code_ = new ::std::string;
  }
  region_code_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_region_code(const char* value, size_t size) {
  set_has_region_code();
  if (region_code_ == &::google::protobuf::internal::kEmptyString) {
    region_code_ = new ::std::string;
  }
  region_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::mutable_region_code() {
  set_has_region_code();
  if (region_code_ == &::google::protobuf::internal::kEmptyString) {
    region_code_ = new ::std::string;
  }
  return region_code_;
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerMicroTxn::release_region_code() {
  clear_has_region_code();
  if (region_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = region_code_;
    region_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_allocated_region_code(::std::string* region_code) {
  if (region_code_ != &::google::protobuf::internal::kEmptyString) {
    delete region_code_;
  }
  if (region_code) {
    set_has_region_code();
    region_code_ = region_code;
  } else {
    clear_has_region_code();
    region_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 quantity = 16;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_quantity() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_quantity() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_quantity() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_quantity() {
  quantity_ = 0;
  clear_has_quantity();
}
inline ::google::protobuf::int32 CMsgDPPartnerMicroTxns_PartnerMicroTxn::quantity() const {
  return quantity_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_quantity(::google::protobuf::int32 value) {
  set_has_quantity();
  quantity_ = value;
}

// optional uint64 ref_trans_id = 17;
inline bool CMsgDPPartnerMicroTxns_PartnerMicroTxn::has_ref_trans_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_has_ref_trans_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_has_ref_trans_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::clear_ref_trans_id() {
  ref_trans_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ref_trans_id();
}
inline ::google::protobuf::uint64 CMsgDPPartnerMicroTxns_PartnerMicroTxn::ref_trans_id() const {
  return ref_trans_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerMicroTxn::set_ref_trans_id(::google::protobuf::uint64 value) {
  set_has_ref_trans_id();
  ref_trans_id_ = value;
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxns_PartnerInfo

// optional uint32 partner_id = 1;
inline bool CMsgDPPartnerMicroTxns_PartnerInfo::has_partner_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_has_partner_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_has_partner_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_partner_id() {
  partner_id_ = 0u;
  clear_has_partner_id();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns_PartnerInfo::partner_id() const {
  return partner_id_;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_id(::google::protobuf::uint32 value) {
  set_has_partner_id();
  partner_id_ = value;
}

// optional string partner_name = 2;
inline bool CMsgDPPartnerMicroTxns_PartnerInfo::has_partner_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_has_partner_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_has_partner_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_partner_name() {
  if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
    partner_name_->clear();
  }
  clear_has_partner_name();
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::partner_name() const {
  return *partner_name_;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const ::std::string& value) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const char* value) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_partner_name(const char* value, size_t size) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_partner_name() {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  return partner_name_;
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_partner_name() {
  clear_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = partner_name_;
    partner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_partner_name(::std::string* partner_name) {
  if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
    delete partner_name_;
  }
  if (partner_name) {
    set_has_partner_name();
    partner_name_ = partner_name;
  } else {
    clear_has_partner_name();
    partner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string currency_code = 3;
inline bool CMsgDPPartnerMicroTxns_PartnerInfo::has_currency_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_has_currency_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_has_currency_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_currency_code() {
  if (currency_code_ != &::google::protobuf::internal::kEmptyString) {
    currency_code_->clear();
  }
  clear_has_currency_code();
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::currency_code() const {
  return *currency_code_;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const ::std::string& value) {
  set_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::kEmptyString) {
    currency_code_ = new ::std::string;
  }
  currency_code_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const char* value) {
  set_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::kEmptyString) {
    currency_code_ = new ::std::string;
  }
  currency_code_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_code(const char* value, size_t size) {
  set_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::kEmptyString) {
    currency_code_ = new ::std::string;
  }
  currency_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_currency_code() {
  set_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::kEmptyString) {
    currency_code_ = new ::std::string;
  }
  return currency_code_;
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_currency_code() {
  clear_has_currency_code();
  if (currency_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = currency_code_;
    currency_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_currency_code(::std::string* currency_code) {
  if (currency_code_ != &::google::protobuf::internal::kEmptyString) {
    delete currency_code_;
  }
  if (currency_code) {
    set_has_currency_code();
    currency_code_ = currency_code;
  } else {
    clear_has_currency_code();
    currency_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string currency_name = 4;
inline bool CMsgDPPartnerMicroTxns_PartnerInfo::has_currency_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_has_currency_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_has_currency_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::clear_currency_name() {
  if (currency_name_ != &::google::protobuf::internal::kEmptyString) {
    currency_name_->clear();
  }
  clear_has_currency_name();
}
inline const ::std::string& CMsgDPPartnerMicroTxns_PartnerInfo::currency_name() const {
  return *currency_name_;
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const ::std::string& value) {
  set_has_currency_name();
  if (currency_name_ == &::google::protobuf::internal::kEmptyString) {
    currency_name_ = new ::std::string;
  }
  currency_name_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const char* value) {
  set_has_currency_name();
  if (currency_name_ == &::google::protobuf::internal::kEmptyString) {
    currency_name_ = new ::std::string;
  }
  currency_name_->assign(value);
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_currency_name(const char* value, size_t size) {
  set_has_currency_name();
  if (currency_name_ == &::google::protobuf::internal::kEmptyString) {
    currency_name_ = new ::std::string;
  }
  currency_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::mutable_currency_name() {
  set_has_currency_name();
  if (currency_name_ == &::google::protobuf::internal::kEmptyString) {
    currency_name_ = new ::std::string;
  }
  return currency_name_;
}
inline ::std::string* CMsgDPPartnerMicroTxns_PartnerInfo::release_currency_name() {
  clear_has_currency_name();
  if (currency_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = currency_name_;
    currency_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDPPartnerMicroTxns_PartnerInfo::set_allocated_currency_name(::std::string* currency_name) {
  if (currency_name_ != &::google::protobuf::internal::kEmptyString) {
    delete currency_name_;
  }
  if (currency_name) {
    set_has_currency_name();
    currency_name_ = currency_name;
  } else {
    clear_has_currency_name();
    currency_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxns

// optional uint32 appid = 1;
inline bool CMsgDPPartnerMicroTxns::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPPartnerMicroTxns::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDPPartnerMicroTxns::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDPPartnerMicroTxns::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxns::appid() const {
  return appid_;
}
inline void CMsgDPPartnerMicroTxns::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional string gc_name = 2;
inline bool CMsgDPPartnerMicroTxns::has_gc_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPPartnerMicroTxns::set_has_gc_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDPPartnerMicroTxns::clear_has_gc_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDPPartnerMicroTxns::clear_gc_name() {
  if (gc_name_ != &::google::protobuf::internal::kEmptyString) {
    gc_name_->clear();
  }
  clear_has_gc_name();
}
inline const ::std::string& CMsgDPPartnerMicroTxns::gc_name() const {
  return *gc_name_;
}
inline void CMsgDPPartnerMicroTxns::set_gc_name(const ::std::string& value) {
  set_has_gc_name();
  if (gc_name_ == &::google::protobuf::internal::kEmptyString) {
    gc_name_ = new ::std::string;
  }
  gc_name_->assign(value);
}
inline void CMsgDPPartnerMicroTxns::set_gc_name(const char* value) {
  set_has_gc_name();
  if (gc_name_ == &::google::protobuf::internal::kEmptyString) {
    gc_name_ = new ::std::string;
  }
  gc_name_->assign(value);
}
inline void CMsgDPPartnerMicroTxns::set_gc_name(const char* value, size_t size) {
  set_has_gc_name();
  if (gc_name_ == &::google::protobuf::internal::kEmptyString) {
    gc_name_ = new ::std::string;
  }
  gc_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDPPartnerMicroTxns::mutable_gc_name() {
  set_has_gc_name();
  if (gc_name_ == &::google::protobuf::internal::kEmptyString) {
    gc_name_ = new ::std::string;
  }
  return gc_name_;
}
inline ::std::string* CMsgDPPartnerMicroTxns::release_gc_name() {
  clear_has_gc_name();
  if (gc_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gc_name_;
    gc_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDPPartnerMicroTxns::set_allocated_gc_name(::std::string* gc_name) {
  if (gc_name_ != &::google::protobuf::internal::kEmptyString) {
    delete gc_name_;
  }
  if (gc_name) {
    set_has_gc_name();
    gc_name_ = gc_name;
  } else {
    clear_has_gc_name();
    gc_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .CMsgDPPartnerMicroTxns.PartnerInfo partner = 3;
inline bool CMsgDPPartnerMicroTxns::has_partner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDPPartnerMicroTxns::set_has_partner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDPPartnerMicroTxns::clear_has_partner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDPPartnerMicroTxns::clear_partner() {
  if (partner_ != NULL) partner_->::CMsgDPPartnerMicroTxns_PartnerInfo::Clear();
  clear_has_partner();
}
inline const ::CMsgDPPartnerMicroTxns_PartnerInfo& CMsgDPPartnerMicroTxns::partner() const {
  return partner_ != NULL ? *partner_ : *default_instance_->partner_;
}
inline ::CMsgDPPartnerMicroTxns_PartnerInfo* CMsgDPPartnerMicroTxns::mutable_partner() {
  set_has_partner();
  if (partner_ == NULL) partner_ = new ::CMsgDPPartnerMicroTxns_PartnerInfo;
  return partner_;
}
inline ::CMsgDPPartnerMicroTxns_PartnerInfo* CMsgDPPartnerMicroTxns::release_partner() {
  clear_has_partner();
  ::CMsgDPPartnerMicroTxns_PartnerInfo* temp = partner_;
  partner_ = NULL;
  return temp;
}
inline void CMsgDPPartnerMicroTxns::set_allocated_partner(::CMsgDPPartnerMicroTxns_PartnerInfo* partner) {
  delete partner_;
  partner_ = partner;
  if (partner) {
    set_has_partner();
  } else {
    clear_has_partner();
  }
}

// repeated .CMsgDPPartnerMicroTxns.PartnerMicroTxn transactions = 4;
inline int CMsgDPPartnerMicroTxns::transactions_size() const {
  return transactions_.size();
}
inline void CMsgDPPartnerMicroTxns::clear_transactions() {
  transactions_.Clear();
}
inline const ::CMsgDPPartnerMicroTxns_PartnerMicroTxn& CMsgDPPartnerMicroTxns::transactions(int index) const {
  return transactions_.Get(index);
}
inline ::CMsgDPPartnerMicroTxns_PartnerMicroTxn* CMsgDPPartnerMicroTxns::mutable_transactions(int index) {
  return transactions_.Mutable(index);
}
inline ::CMsgDPPartnerMicroTxns_PartnerMicroTxn* CMsgDPPartnerMicroTxns::add_transactions() {
  return transactions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDPPartnerMicroTxns_PartnerMicroTxn >&
CMsgDPPartnerMicroTxns::transactions() const {
  return transactions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDPPartnerMicroTxns_PartnerMicroTxn >*
CMsgDPPartnerMicroTxns::mutable_transactions() {
  return &transactions_;
}

// -------------------------------------------------------------------

// CMsgDPPartnerMicroTxnsResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDPPartnerMicroTxnsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPPartnerMicroTxnsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDPPartnerMicroTxnsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDPPartnerMicroTxnsResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDPPartnerMicroTxnsResponse::eresult() const {
  return eresult_;
}
inline void CMsgDPPartnerMicroTxnsResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional .CMsgDPPartnerMicroTxnsResponse.EErrorCode eerrorcode = 2 [default = k_MsgValid];
inline bool CMsgDPPartnerMicroTxnsResponse::has_eerrorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPPartnerMicroTxnsResponse::set_has_eerrorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDPPartnerMicroTxnsResponse::clear_has_eerrorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDPPartnerMicroTxnsResponse::clear_eerrorcode() {
  eerrorcode_ = 0;
  clear_has_eerrorcode();
}
inline ::CMsgDPPartnerMicroTxnsResponse_EErrorCode CMsgDPPartnerMicroTxnsResponse::eerrorcode() const {
  return static_cast< ::CMsgDPPartnerMicroTxnsResponse_EErrorCode >(eerrorcode_);
}
inline void CMsgDPPartnerMicroTxnsResponse::set_eerrorcode(::CMsgDPPartnerMicroTxnsResponse_EErrorCode value) {
  assert(::CMsgDPPartnerMicroTxnsResponse_EErrorCode_IsValid(value));
  set_has_eerrorcode();
  eerrorcode_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCRoutingInfo_RoutingMethod>() {
  return ::CMsgGCRoutingInfo_RoutingMethod_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCMsgSetOptions_Option>() {
  return ::CMsgGCMsgSetOptions_Option_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgDPPartnerMicroTxnsResponse_EErrorCode>() {
  return ::CMsgDPPartnerMicroTxnsResponse_EErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GCProtoBufMsgSrc>() {
  return ::GCProtoBufMsgSrc_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_2eproto__INCLUDED
