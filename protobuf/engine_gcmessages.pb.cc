// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: engine_gcmessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "engine_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CEngineGotvSyncPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CEngineGotvSyncPacket_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_engine_5fgcmessages_2eproto() {
  protobuf_AddDesc_engine_5fgcmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "engine_gcmessages.proto");
  GOOGLE_CHECK(file != NULL);
  CEngineGotvSyncPacket_descriptor_ = file->message_type(0);
  static const int CEngineGotvSyncPacket_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, match_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, instance_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, signupfragment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, currentfragment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, tickrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, rtdelay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, rcvage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, keyframe_interval_),
  };
  CEngineGotvSyncPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CEngineGotvSyncPacket_descriptor_,
      CEngineGotvSyncPacket::default_instance_,
      CEngineGotvSyncPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEngineGotvSyncPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CEngineGotvSyncPacket));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_engine_5fgcmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CEngineGotvSyncPacket_descriptor_, &CEngineGotvSyncPacket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_engine_5fgcmessages_2eproto() {
  delete CEngineGotvSyncPacket::default_instance_;
  delete CEngineGotvSyncPacket_reflection_;
}

void protobuf_AddDesc_engine_5fgcmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027engine_gcmessages.proto\032 google/protob"
    "uf/descriptor.proto\"\313\001\n\025CEngineGotvSyncP"
    "acket\022\020\n\010match_id\030\001 \001(\004\022\023\n\013instance_id\030\002"
    " \001(\r\022\026\n\016signupfragment\030\003 \001(\r\022\027\n\017currentf"
    "ragment\030\004 \001(\r\022\020\n\010tickrate\030\005 \001(\002\022\014\n\004tick\030"
    "\006 \001(\r\022\017\n\007rtdelay\030\010 \001(\002\022\016\n\006rcvage\030\t \001(\002\022\031"
    "\n\021keyframe_interval\030\n \001(\002B\003\200\001\000", 270);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "engine_gcmessages.proto", &protobuf_RegisterTypes);
  CEngineGotvSyncPacket::default_instance_ = new CEngineGotvSyncPacket();
  CEngineGotvSyncPacket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_engine_5fgcmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_engine_5fgcmessages_2eproto {
  StaticDescriptorInitializer_engine_5fgcmessages_2eproto() {
    protobuf_AddDesc_engine_5fgcmessages_2eproto();
  }
} static_descriptor_initializer_engine_5fgcmessages_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CEngineGotvSyncPacket::kMatchIdFieldNumber;
const int CEngineGotvSyncPacket::kInstanceIdFieldNumber;
const int CEngineGotvSyncPacket::kSignupfragmentFieldNumber;
const int CEngineGotvSyncPacket::kCurrentfragmentFieldNumber;
const int CEngineGotvSyncPacket::kTickrateFieldNumber;
const int CEngineGotvSyncPacket::kTickFieldNumber;
const int CEngineGotvSyncPacket::kRtdelayFieldNumber;
const int CEngineGotvSyncPacket::kRcvageFieldNumber;
const int CEngineGotvSyncPacket::kKeyframeIntervalFieldNumber;
#endif  // !_MSC_VER

CEngineGotvSyncPacket::CEngineGotvSyncPacket()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CEngineGotvSyncPacket::InitAsDefaultInstance() {
}

CEngineGotvSyncPacket::CEngineGotvSyncPacket(const CEngineGotvSyncPacket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CEngineGotvSyncPacket::SharedCtor() {
  _cached_size_ = 0;
  match_id_ = GOOGLE_ULONGLONG(0);
  instance_id_ = 0u;
  signupfragment_ = 0u;
  currentfragment_ = 0u;
  tickrate_ = 0;
  tick_ = 0u;
  rtdelay_ = 0;
  rcvage_ = 0;
  keyframe_interval_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CEngineGotvSyncPacket::~CEngineGotvSyncPacket() {
  SharedDtor();
}

void CEngineGotvSyncPacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CEngineGotvSyncPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CEngineGotvSyncPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CEngineGotvSyncPacket_descriptor_;
}

const CEngineGotvSyncPacket& CEngineGotvSyncPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_engine_5fgcmessages_2eproto();
  return *default_instance_;
}

CEngineGotvSyncPacket* CEngineGotvSyncPacket::default_instance_ = NULL;

CEngineGotvSyncPacket* CEngineGotvSyncPacket::New() const {
  return new CEngineGotvSyncPacket;
}

void CEngineGotvSyncPacket::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    match_id_ = GOOGLE_ULONGLONG(0);
    instance_id_ = 0u;
    signupfragment_ = 0u;
    currentfragment_ = 0u;
    tickrate_ = 0;
    tick_ = 0u;
    rtdelay_ = 0;
    rcvage_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    keyframe_interval_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CEngineGotvSyncPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 match_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &match_id_)));
          set_has_match_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_instance_id;
        break;
      }

      // optional uint32 instance_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instance_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instance_id_)));
          set_has_instance_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_signupfragment;
        break;
      }

      // optional uint32 signupfragment = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_signupfragment:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signupfragment_)));
          set_has_signupfragment();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_currentfragment;
        break;
      }

      // optional uint32 currentfragment = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentfragment:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentfragment_)));
          set_has_currentfragment();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_tickrate;
        break;
      }

      // optional float tickrate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_tickrate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tickrate_)));
          set_has_tickrate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_tick;
        break;
      }

      // optional uint32 tick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tick_)));
          set_has_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(69)) goto parse_rtdelay;
        break;
      }

      // optional float rtdelay = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rtdelay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rtdelay_)));
          set_has_rtdelay();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(77)) goto parse_rcvage;
        break;
      }

      // optional float rcvage = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_rcvage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rcvage_)));
          set_has_rcvage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(85)) goto parse_keyframe_interval;
        break;
      }

      // optional float keyframe_interval = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_keyframe_interval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &keyframe_interval_)));
          set_has_keyframe_interval();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CEngineGotvSyncPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 match_id = 1;
  if (has_match_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->match_id(), output);
  }

  // optional uint32 instance_id = 2;
  if (has_instance_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->instance_id(), output);
  }

  // optional uint32 signupfragment = 3;
  if (has_signupfragment()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->signupfragment(), output);
  }

  // optional uint32 currentfragment = 4;
  if (has_currentfragment()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->currentfragment(), output);
  }

  // optional float tickrate = 5;
  if (has_tickrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->tickrate(), output);
  }

  // optional uint32 tick = 6;
  if (has_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->tick(), output);
  }

  // optional float rtdelay = 8;
  if (has_rtdelay()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rtdelay(), output);
  }

  // optional float rcvage = 9;
  if (has_rcvage()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->rcvage(), output);
  }

  // optional float keyframe_interval = 10;
  if (has_keyframe_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->keyframe_interval(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CEngineGotvSyncPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 match_id = 1;
  if (has_match_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->match_id(), target);
  }

  // optional uint32 instance_id = 2;
  if (has_instance_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->instance_id(), target);
  }

  // optional uint32 signupfragment = 3;
  if (has_signupfragment()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->signupfragment(), target);
  }

  // optional uint32 currentfragment = 4;
  if (has_currentfragment()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->currentfragment(), target);
  }

  // optional float tickrate = 5;
  if (has_tickrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->tickrate(), target);
  }

  // optional uint32 tick = 6;
  if (has_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->tick(), target);
  }

  // optional float rtdelay = 8;
  if (has_rtdelay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rtdelay(), target);
  }

  // optional float rcvage = 9;
  if (has_rcvage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->rcvage(), target);
  }

  // optional float keyframe_interval = 10;
  if (has_keyframe_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->keyframe_interval(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CEngineGotvSyncPacket::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 match_id = 1;
    if (has_match_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->match_id());
    }

    // optional uint32 instance_id = 2;
    if (has_instance_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->instance_id());
    }

    // optional uint32 signupfragment = 3;
    if (has_signupfragment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->signupfragment());
    }

    // optional uint32 currentfragment = 4;
    if (has_currentfragment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currentfragment());
    }

    // optional float tickrate = 5;
    if (has_tickrate()) {
      total_size += 1 + 4;
    }

    // optional uint32 tick = 6;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tick());
    }

    // optional float rtdelay = 8;
    if (has_rtdelay()) {
      total_size += 1 + 4;
    }

    // optional float rcvage = 9;
    if (has_rcvage()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional float keyframe_interval = 10;
    if (has_keyframe_interval()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CEngineGotvSyncPacket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CEngineGotvSyncPacket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CEngineGotvSyncPacket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CEngineGotvSyncPacket::MergeFrom(const CEngineGotvSyncPacket& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_match_id()) {
      set_match_id(from.match_id());
    }
    if (from.has_instance_id()) {
      set_instance_id(from.instance_id());
    }
    if (from.has_signupfragment()) {
      set_signupfragment(from.signupfragment());
    }
    if (from.has_currentfragment()) {
      set_currentfragment(from.currentfragment());
    }
    if (from.has_tickrate()) {
      set_tickrate(from.tickrate());
    }
    if (from.has_tick()) {
      set_tick(from.tick());
    }
    if (from.has_rtdelay()) {
      set_rtdelay(from.rtdelay());
    }
    if (from.has_rcvage()) {
      set_rcvage(from.rcvage());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_keyframe_interval()) {
      set_keyframe_interval(from.keyframe_interval());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CEngineGotvSyncPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEngineGotvSyncPacket::CopyFrom(const CEngineGotvSyncPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEngineGotvSyncPacket::IsInitialized() const {

  return true;
}

void CEngineGotvSyncPacket::Swap(CEngineGotvSyncPacket* other) {
  if (other != this) {
    std::swap(match_id_, other->match_id_);
    std::swap(instance_id_, other->instance_id_);
    std::swap(signupfragment_, other->signupfragment_);
    std::swap(currentfragment_, other->currentfragment_);
    std::swap(tickrate_, other->tickrate_);
    std::swap(tick_, other->tick_);
    std::swap(rtdelay_, other->rtdelay_);
    std::swap(rcvage_, other->rcvage_);
    std::swap(keyframe_interval_, other->keyframe_interval_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CEngineGotvSyncPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CEngineGotvSyncPacket_descriptor_;
  metadata.reflection = CEngineGotvSyncPacket_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

